{"ast":null,"code":"import MyButton from \"@/components/UI/MyButton.vue\";\nexport default {\n  components: {\n    MyButton\n  },\n  props: {\n    log: {\n      type: Object,\n      required: true\n    },\n    selected: {\n      type: Boolean,\n      required: true\n    }\n  },\n  methods: {\n    toggle() {\n      this.$emit('toggle', this.log.id);\n    },\n    retryLog() {\n      const newLog = {\n        ...this.log,\n        id: Date.now(),\n        time: new Date().toLocaleString(),\n        status: 'pending' // или 'retry' или любой другой статус по умолчанию\n      };\n      this.$emit('retryLog', newLog);\n    }\n  }\n};","map":{"version":3,"names":["MyButton","components","props","log","type","Object","required","selected","Boolean","methods","toggle","$emit","id","retryLog","newLog","Date","now","time","toLocaleString","status"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\LogItem.vue"],"sourcesContent":["<template>\r\n  <tbody>\r\n    <tr class=\"log\">\r\n      <td><input type=\"checkbox\" :checked=\"selected\" @change=\"toggle\"></td>\r\n      <td>{{ log.id }}</td>\r\n      <td>{{ log.info }}</td>\r\n      <td>{{ log.message }}</td>\r\n      <td>{{ log.status }}</td>\r\n      <td>{{ log.time }}</td>\r\n      <td>{{ log.config }}</td>\r\n      <td>\r\n        <div class=\"log__delete\" @click=\"$emit('remove', log)\"><my-button><img src=\"../assets/trash.png\" alt=\"\">Удалить</my-button></div>\r\n        <div class=\"log__retry\" @click=\"retryLog\"><my-button><img src=\"../assets/retry.png\" alt=\"\">Повторить отправку</my-button></div>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</template>\r\n\r\n<script>\r\nimport MyButton from \"@/components/UI/MyButton.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    MyButton\r\n  },\r\n  props: {\r\n    log: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    selected: {\r\n      type: Boolean,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    toggle() {\r\n      this.$emit('toggle', this.log.id);\r\n    },\r\n    retryLog() {\r\n      const newLog = {\r\n        ...this.log,\r\n        id: Date.now(),\r\n        time: new Date().toLocaleString(),\r\n        status: 'pending' // или 'retry' или любой другой статус по умолчанию\r\n      };\r\n      this.$emit('retryLog', newLog);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"AAmBA,OAAOA,QAAO,MAAO,8BAA8B;AAEnD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,GAAG,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,OAAO;MACbF,QAAQ,EAAE;IACZ;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACR,GAAG,CAACS,EAAE,CAAC;IACnC,CAAC;IACDC,QAAQA,CAAA,EAAG;MACT,MAAMC,MAAK,GAAI;QACb,GAAG,IAAI,CAACX,GAAG;QACXS,EAAE,EAAEG,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,cAAc,CAAC,CAAC;QACjCC,MAAM,EAAE,SAAQ,CAAE;MACpB,CAAC;MACD,IAAI,CAACR,KAAK,CAAC,UAAU,EAAEG,MAAM,CAAC;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}