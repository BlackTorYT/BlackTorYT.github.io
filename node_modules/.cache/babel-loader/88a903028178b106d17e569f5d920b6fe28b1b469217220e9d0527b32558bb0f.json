{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport MyButton from \"@/components/UI/MyButton.vue\";\nexport default {\n  components: {\n    MyButton\n  },\n  props: {\n    channels: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedChannels: []\n    };\n  },\n  methods: {\n    toggleSelection(channelId) {\n      if (this.selectedChannels.includes(channelId)) {\n        this.selectedChannels = this.selectedChannels.filter(id => id !== channelId);\n      } else {\n        this.selectedChannels.push(channelId);\n      }\n    },\n    toggleAll(event) {\n      if (event.target.checked) {\n        this.selectedChannels = this.channels.map(channel => channel.id);\n      } else {\n        this.selectedChannels = [];\n      }\n    },\n    removeChannel(channel) {\n      this.$emit(\"remove\", channel);\n    }\n  }\n};","map":{"version":3,"names":["MyButton","components","props","channels","type","Array","required","data","selectedChannels","methods","toggleSelection","channelId","includes","filter","id","push","toggleAll","event","target","checked","map","channel","removeChannel","$emit"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelList.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper__channels\">\n    <h1>Каналы отправки уведомлений</h1>\n    <button @click=\"removeSelectedChannels\">Удалить</button>\n    <table>\n      <thead>\n        <tr>\n          <th class=\"channel__checkbox\">\n            <input type=\"checkbox\" @change=\"toggleAll\" />\n          </th>\n          <th class=\"channel__id\">ID</th>\n          <th class=\"channel__name\">Название</th>\n          <th class=\"channel__code\">Код</th>\n          <th class=\"channel__mailing\">Шлюз рассылки</th>\n          <th class=\"channel__disc\">Описание</th>\n          <th class=\"channel__status\">Статус</th>\n          <th class=\"channel__action\">Действия</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"channel in channels\" :key=\"channel.id\">\n          <td><input type=\"checkbox\" :checked=\"selectedChannels.includes(channel.id)\" @change=\"toggleSelection(channel.id)\" /></td>\n          <td>{{ channel.id }}</td>\n          <td>{{ channel.title }}</td>\n          <td>{{ channel.code }}</td>\n          <td>{{ channel.mailing }}</td>\n          <td>{{ channel.disc }}</td>\n          <td>{{ channel.status ? 'Включен' : 'Отключен' }}</td>\n          <td>\n            <router-link :to=\"'/channels/edit/' + channel.id\">Изменить</router-link>\n            <my-button @click=\"removeChannel(channel)\">Удалить</my-button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport MyButton from \"@/components/UI/MyButton.vue\";\nexport default {\n  components: {\n    MyButton,\n  },\n  props: {\n    channels: {\n      type: Array,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      selectedChannels: [],\n    };\n  },\n  methods: {\n    toggleSelection(channelId) {\n      if (this.selectedChannels.includes(channelId)) {\n        this.selectedChannels = this.selectedChannels.filter((id) => id !== channelId);\n      } else {\n        this.selectedChannels.push(channelId);\n      }\n    },\n    toggleAll(event) {\n      if (event.target.checked) {\n        this.selectedChannels = this.channels.map((channel) => channel.id);\n      } else {\n        this.selectedChannels = [];\n      }\n    },\n    removeChannel(channel) {\n      this.$emit(\"remove\", channel);\n    },\n  },\n};\n</script>\n\n<style scoped>\ntable {\n  width: 100%;\n  border-top: 7px solid rgb(218, 218, 218);\n  border-collapse: collapse;\n  text-align: center;\n  margin-bottom: 20px;\n  border: 1px solid #dddddd;\n}\n\ntd {\n  text-align: left;\n  padding: 10px;\n  border: 1px solid rgb(218, 218, 218);\n}\n\nth {\n  text-align: left;\n  padding: 10px;\n  border: 1px solid rgb(218, 218, 218);\n}\n\n.wrapper__channels {\n  background-color: white;\n}\n\n.channel__checkbox {\n  width: 36px;\n}\n\n.channel__id {\n  width: 40px;\n}\n\n.channel__name {\n  width: 150px;\n}\n\n.channel__code {\n  width: 200px;\n}\n\n.channel__mailing {\n  width: 200px;\n}\n\n.channel__status {\n  width: 100px;\n}\n\n.channel__action {\n  width: 150px;\n}\n</style>\n"],"mappings":";AAuCA,OAAOA,QAAO,MAAO,8BAA8B;AACnD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAACC,SAAS,EAAE;MACzB,IAAI,IAAI,CAACH,gBAAgB,CAACI,QAAQ,CAACD,SAAS,CAAC,EAAE;QAC7C,IAAI,CAACH,gBAAe,GAAI,IAAI,CAACA,gBAAgB,CAACK,MAAM,CAAEC,EAAE,IAAKA,EAAC,KAAMH,SAAS,CAAC;MAChF,OAAO;QACL,IAAI,CAACH,gBAAgB,CAACO,IAAI,CAACJ,SAAS,CAAC;MACvC;IACF,CAAC;IACDK,SAASA,CAACC,KAAK,EAAE;MACf,IAAIA,KAAK,CAACC,MAAM,CAACC,OAAO,EAAE;QACxB,IAAI,CAACX,gBAAe,GAAI,IAAI,CAACL,QAAQ,CAACiB,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACP,EAAE,CAAC;MACpE,OAAO;QACL,IAAI,CAACN,gBAAe,GAAI,EAAE;MAC5B;IACF,CAAC;IACDc,aAAaA,CAACD,OAAO,EAAE;MACrB,IAAI,CAACE,KAAK,CAAC,QAAQ,EAAEF,OAAO,CAAC;IAC/B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}