{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e5a9dc1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"wrapper__channels\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Каналы отправки уведомлений\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", null, \"Создать канал\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"channel__checkbox\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__id\"\n}, \"ID\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__name\"\n}, \"Название\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__code\"\n}, \"Код\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__mailing\"\n}, \"Шлюз рассылки\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__disc\"\n}, \"Описание\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__status\"\n}, \"Статус\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__action\"\n}, \"Действия\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_channel_item = _resolveComponent(\"channel-item\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.removeSelectedChannels && $options.removeSelectedChannels(...args))\n  }, \"Удалить\"), _createVNode(_component_router_link, {\n    to: \"/channel/create\"\n  }, {\n    default: _withCtx(() => [_hoisted_3]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", _hoisted_4, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.toggleAll && $options.toggleAll(...args))\n  }, null, 32 /* NEED_HYDRATION */)]), _hoisted_5, _hoisted_6, _hoisted_7, _hoisted_8, _hoisted_9, _hoisted_10, _hoisted_11])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.channels, channel => {\n    return _openBlock(), _createBlock(_component_channel_item, {\n      channel: channel,\n      key: channel.id,\n      onRemove: $event => _ctx.$emit('remove', channel),\n      selected: $data.selectedChannels.includes(channel.id),\n      onToggle: $options.toggleSelection\n    }, null, 8 /* PROPS */, [\"channel\", \"onRemove\", \"selected\", \"onToggle\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","removeSelectedChannels","_createVNode","_component_router_link","to","default","_withCtx","_hoisted_3","_","_hoisted_4","type","onChange","toggleAll","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_Fragment","_renderList","$props","channels","channel","_createBlock","_component_channel_item","key","id","onRemove","$event","_ctx","$emit","selected","$data","selectedChannels","includes","onToggle","toggleSelection"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelList.vue"],"sourcesContent":["<template>\n    <div class=\"wrapper__channels\">\n      <h1>Каналы отправки уведомлений</h1>\n      <button @click=\"removeSelectedChannels\">Удалить</button>\n      <router-link to=\"/channel/create\">\n      <button>Создать канал</button>\n      </router-link>\n      <table>\n        <thead>\n          <tr>\n            <th class=\"channel__checkbox\"><input type=\"checkbox\" @change=\"toggleAll\"></th>\n            <th class=\"channel__id\">ID</th>\n            <th class=\"channel__name\">Название</th>\n            <th class=\"channel__code\">Код</th>\n            <th class=\"channel__mailing\">Шлюз рассылки</th>\n            <th class=\"channel__disc\">Описание</th>\n            <th class=\"channel__status\">Статус</th>\n            <th class=\"channel__action\">Действия</th>\n          </tr>\n        </thead>\n        <channel-item v-for=\"channel in channels\" v-bind:channel=\"channel\" v-bind:key=\"channel.id\" \n          @remove=\"$emit('remove', channel)\" :selected=\"selectedChannels.includes(channel.id)\"\n          @toggle=\"toggleSelection\">\n        </channel-item>\n      </table>\n    </div>\n</template>\n\n<script>\n// Компонент для списка каналов\nimport ChannelItem from \"@/components/ChannelItem.vue\"\nexport default {\n  components: {ChannelItem},\n  props: {\n    channels: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedChannels: []\n    };\n  },\n  methods: {\n    toggleSelection(channelId) {\n      if (this.selectedChannels.includes(channelId)) {\n        this.selectedChannels = this.selectedChannels.filter(id => id !== channelId);\n      } else {\n        this.selectedChannels.push(channelId);\n      }\n    },\n    toggleAll(event) {\n      if (event.target.checked) {\n        this.selectedChannels = this.channels.map(channel => channel.id);\n      } else {\n        this.selectedChannels = [];\n      }\n    },\n    removeSelectedChannels() {\n      this.$emit('removeSelected', this.selectedChannels);\n      this.selectedChannels = [];\n    }\n  }\n};\n</script>\n\n<style scoped>\ntable {\n  width: 100%;\n  border-top: 7px solid rgb(218, 218, 218);\n  border-collapse: collapse;\n  text-align: center;\n  margin-bottom: 20px;\n  border: 1px solid #dddddd;\n}\n\ntd {\n  text-align: left;\n  padding: 10px;\n  border: 1px solid rgb(218, 218, 218);\n}\n\nth {\n  text-align: left;\n  padding: 10px;\n  border: 1px solid rgb(218, 218, 218);\n}\n\n.wrapper__channels {\n  background-color: white;\n}\n\n.channel__checkbox {\n  width: 36px;\n}\n\n.channel__id {\n  width: 40px;\n}\n\n.channel__name {\n  width: 150px;\n}\n\n.channel__code {\n  width: 200px;\n}\n\n.channel__mailing {\n  width: 200px;\n}\n\n.channel__status {\n  width: 100px;\n}\n\n.channel__action {\n  width: 150px;\n}\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAmB;gEAC5BC,mBAAA,CAAoC,YAAhC,6BAA2B;gEAG/BA,mBAAA,CAA8B,gBAAtB,eAAa;;EAKXD,KAAK,EAAC;AAAmB;gEAC7BC,mBAAA,CAA+B;EAA3BD,KAAK,EAAC;AAAa,GAAC,IAAE;gEAC1BC,mBAAA,CAAuC;EAAnCD,KAAK,EAAC;AAAe,GAAC,UAAQ;gEAClCC,mBAAA,CAAkC;EAA9BD,KAAK,EAAC;AAAe,GAAC,KAAG;gEAC7BC,mBAAA,CAA+C;EAA3CD,KAAK,EAAC;AAAkB,GAAC,eAAa;gEAC1CC,mBAAA,CAAuC;EAAnCD,KAAK,EAAC;AAAe,GAAC,UAAQ;iEAClCC,mBAAA,CAAuC;EAAnCD,KAAK,EAAC;AAAiB,GAAC,QAAM;iEAClCC,mBAAA,CAAyC;EAArCD,KAAK,EAAC;AAAiB,GAAC,UAAQ;;;;uBAhB5CE,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBJC,UAAoC,EACpCH,mBAAA,CAAwD;IAA/CI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,sBAAA,IAAAD,QAAA,CAAAC,sBAAA,IAAAF,IAAA,CAAsB;KAAE,SAAO,GAC/CG,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC;EAAiB;IAJvCC,OAAA,EAAAC,QAAA,CAKM,MAA8B,CAA9BC,UAA8B,C;IALpCC,CAAA;MAOMf,mBAAA,CAiBQ,gBAhBNA,mBAAA,CAWQ,gBAVNA,mBAAA,CASK,aARHA,mBAAA,CAA8E,MAA9EgB,UAA8E,GAAhDhB,mBAAA,CAA2C;IAApCiB,IAAI,EAAC,UAAU;IAAEC,QAAM,EAAAb,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAY,SAAA,IAAAZ,QAAA,CAAAY,SAAA,IAAAb,IAAA,CAAS;uCACvEc,UAA+B,EAC/BC,UAAuC,EACvCC,UAAkC,EAClCC,UAA+C,EAC/CC,UAAuC,EACvCC,WAAuC,EACvCC,WAAyC,C,wBAG7CzB,mBAAA,CAGe0B,SAAA,QAvBvBC,WAAA,CAoBwCC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAA5BC,YAAA,CAGeC,uBAAA;MAHkCF,OAAO,EAAEA,OAAO;MAASG,GAAG,EAAEH,OAAO,CAACI,EAAE;MACtFC,QAAM,EAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,WAAWR,OAAO;MAAIS,QAAQ,EAAEC,KAAA,CAAAC,gBAAgB,CAACC,QAAQ,CAACZ,OAAO,CAACI,EAAE;MACjFS,QAAM,EAAErC,QAAA,CAAAsC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}