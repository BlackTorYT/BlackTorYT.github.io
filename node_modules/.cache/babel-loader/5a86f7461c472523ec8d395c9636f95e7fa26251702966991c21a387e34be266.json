{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2a6176e7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"save__btn\"\n}, \"Сохранить\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    class: \"wrapper\",\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.createChannel && $options.createChannel(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Остальной код формы \"), _hoisted_1], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["_createElementVNode","type","class","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","createChannel","_createCommentVNode","_hoisted_1"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelForm.vue"],"sourcesContent":["<template>\n    <form class=\"wrapper\" @submit.prevent=\"createChannel\">\n      <!-- Остальной код формы -->\n      <button type=\"submit\" class=\"save__btn\">Сохранить</button>\n    </form>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      channels: {\n        type: Array,\n        required: true\n      },\n      initialChannel: {\n        type: Object,\n        default: () => ({\n          title: '',\n          code: '',\n          mailing: 'Telegram Bot',\n          disc: '',\n          json: '{ \"telegram_token\":\"\"}',\n          status: true\n        })\n      }\n    },\n    data() {\n      return {\n        channel: { ...this.initialChannel }, // Создаем локальную копию объекта initialChannel\n        errors: {\n          title: '',\n          code: ''\n        }\n      };\n    },\n    methods: {\n      getNextId() {\n        if (this.channels.length === 0) {\n          return 1;\n        }\n        const maxId = Math.max(...this.channels.map(channel => channel.id));\n        return maxId + 1;\n      },\n      createChannel() {\n        this.clearErrors();\n  \n        if (!this.channel.title) {\n          this.errors.title = 'Название обязательно для заполнения';\n        }\n  \n        if (!this.channel.code) {\n          this.errors.code = 'Уникальный код обязательно для заполнения';\n        }\n  \n        if (this.errors.title || this.errors.code) {\n          return;\n        }\n  \n        const newChannelId = this.getNextId();\n        const newChannel = { ...this.channel, id: newChannelId };\n        this.$emit('create', newChannel);\n        this.resetForm();\n      },\n      clearErrors() {\n        this.errors = {\n          title: '',\n          code: ''\n        };\n      },\n      resetForm() {\n        this.channel = {\n          ...this.initialChannel // Сбрасываем форму до начального состояния initialChannel\n        };\n      }\n    },\n    watch: {\n      initialChannel: {\n        deep: true,\n        handler(newVal) {\n          // Обновляем локальную копию channel при изменении initialChannel извне\n          this.channel = { ...newVal };\n        }\n      }\n    }\n  };\n  </script>\n  \n\n<style scoped>\n.save__btn {\n  display: block;\n  width: 100%;\n  background-color: #3386f3;\n  color: white;\n  border: none;\n  padding: 10px;\n  text-align: center;\n  text-decoration: none;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 10px;\n}\n\n.input {\n  margin-bottom: 10px;\n  padding: 8px;\n}\n\n.error {\n  color: red;\n  font-size: 14px;\n}\n</style>\n"],"mappings":";;gEAGMA,mBAAA,CAA0D;EAAlDC,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;GAAY,WAAS;;uBAFnDC,mBAAA,CAGO;IAHDD,KAAK,EAAC,SAAS;IAAEE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MADjCC,cAAA,KAAAC,IAAA,KAC2CC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAClDG,mBAAA,yBAA4B,EAC5BC,UAA0D,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}