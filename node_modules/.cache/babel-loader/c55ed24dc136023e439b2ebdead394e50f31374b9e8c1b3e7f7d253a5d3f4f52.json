{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nimport _imports_0 from './assets/burger.png';\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<header class=\\\"header\\\"><div class=\\\"header__nav\\\"><nav class=\\\"nav\\\"><ul class=\\\"nav__list\\\"><li class=\\\"nav__item\\\" id=\\\"nav__item_left\\\"><img class=\\\"burger\\\" src=\\\"\" + _imports_0 + \"\\\" alt=\\\"menu\\\">Панель управления</li><div class=\\\"nav__item__notification\\\"><li class=\\\"nav__item\\\"><img class=\\\"notification__img\\\" src=\\\"\" + _imports_0 + \"\\\" alt=\\\"notification\\\"></li><li class=\\\"nav__item\\\" id=\\\"nav__item__exit\\\"><img class=\\\"exit__img\\\" src=\\\"\" + _imports_0 + \"\\\" alt=\\\"exit\\\">Выйти из аккаунта</li></div></ul></nav></div></header><div class=\\\"wrapper\\\"><div class=\\\"wrapper__head\\\"><h1>Редактирование канала отправки: </h1><span>Панель управления / Каналы отправки / Редактирование канала отправки </span></div><div class=\\\"name\\\">Название <input type=\\\"text\\\"></div><div class=\\\"uniqueCode\\\">Уникальный код поля <input type=\\\"text\\\"></div><div class=\\\"handler\\\">Обработчик <input type=\\\"text\\\"></div><div class=\\\"disc\\\">Описание <input type=\\\"text\\\"></div><div class=\\\"json\\\">Настройки JSON <input type=\\\"text\\\"></div><div class=\\\"active\\\">Канал активен? <input type=\\\"text\\\"></div><button class=\\\"save__btn\\\">Сохранить</button></div>\", 2);\nconst _hoisted_4 = {\n  class: \"wrapper__channels\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Каналы отправки уведомлений\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\"\n})]), /*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Название\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Код\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Шлюз рассылки\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Описание\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Статус\"), /*#__PURE__*/_createElementVNode(\"th\")], -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\"\n})], -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"th\", null, [/*#__PURE__*/_createElementVNode(\"div\", null, \"Изменить\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Удалить\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createCommentVNode(\" <div><strong>ID</strong>{{ channel.id }}</div>\\n      <div><strong>Название</strong>{{ channel.title }}</div>\\n      <div><strong>Код</strong>{{ channel.code }}</div>\\n      <div><strong>Шлюз рассылки</strong>{{ channel.mailing }}</div>\\n      <div><strong>Описание</strong>{{ channel.disc }}</div>\\n      <div><strong>Статус</strong>{{ channel.status }}</div> \"), _createElementVNode(\"table\", null, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.channels, channel => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"channel\",\n      key: channel.id\n    }, [_createElementVNode(\"tr\", null, [_hoisted_7, _createElementVNode(\"td\", null, _toDisplayString(channel.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.code), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.mailing), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.disc), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.status), 1 /* TEXT */), _hoisted_8])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_imports_0","id","_createStaticVNode","class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_4","_hoisted_5","_createCommentVNode","_hoisted_6","_Fragment","_renderList","$data","channels","channel","key","_hoisted_7","_toDisplayString","title","code","mailing","disc","status","_hoisted_8"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <header class=\"header\">\n      <div class=\"header__nav\">\n        <nav class=\"nav\">\n          <ul class=\"nav__list\">\n            <li class=\"nav__item\" id=\"nav__item_left\"><img class=\"burger\" src=\"./assets/burger.png\" alt=\"menu\">Панель управления</li>\n            <div class=\"nav__item__notification\">\n              <li class=\"nav__item\"><img class=\"notification__img\" src=\"./assets/burger.png\" alt=\"notification\"></li>\n              <li class=\"nav__item\" id=\"nav__item__exit\"><img class=\"exit__img\" src=\"./assets/burger.png\" alt=\"exit\">Выйти из аккаунта</li>\n            </div>\n          </ul>\n        </nav>\n      </div>\n    </header>\n    <div class=\"wrapper\">\n      <div class=\"wrapper__head\">\n        <h1>Редактирование канала отправки: </h1>\n        <span>Панель управления / Каналы отправки / Редактирование канала отправки </span>\n      </div>\n      <div class=\"name\">Название <input type=\"text\"></div>\n      <div class=\"uniqueCode\">Уникальный код поля <input type=\"text\"></div>\n      <div class=\"handler\">Обработчик <input type=\"text\"></div>\n      <div class=\"disc\">Описание <input type=\"text\"></div>\n      <div class=\"json\">Настройки JSON <input type=\"text\"></div>\n      <div class=\"active\">Канал активен? <input type=\"text\"></div>\n      <button class=\"save__btn\">Сохранить</button>\n    </div>\n\n    <div class=\"wrapper__channels\" >\n      <h1>Каналы отправки уведомлений</h1>\n      <!-- <div><strong>ID</strong>{{ channel.id }}</div>\n      <div><strong>Название</strong>{{ channel.title }}</div>\n      <div><strong>Код</strong>{{ channel.code }}</div>\n      <div><strong>Шлюз рассылки</strong>{{ channel.mailing }}</div>\n      <div><strong>Описание</strong>{{ channel.disc }}</div>\n      <div><strong>Статус</strong>{{ channel.status }}</div> -->\n      <table>\n        <tr>\n          <td><input type=\"checkbox\"></td>\n          <th>ID</th>\n          <th>Название</th>\n          <th>Код</th>\n          <th>Шлюз рассылки</th>\n          <th>Описание</th>\n          <th>Статус</th>\n          <th></th>\n        </tr>\n        <div class=\"channel\" v-for=\"channel in channels\" v-bind:key=\"channel.id\">\n          <tr>\n            <td><input type=\"checkbox\"></td>\n            <td>{{ channel.id }}</td>\n            <td>{{ channel.title }}</td>\n            <td>{{ channel.code }}</td>\n            <td>{{ channel.mailing }}</td>\n            <td>{{ channel.disc }}</td>\n            <td>{{ channel.status }}</td>\n            <th>\n              <div>Изменить</div>\n              <div>Удалить</div>\n            </th>\n          </tr>\n        </div>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      channels: [\n        {id: 1, title: \"Telegram Bot\", code: \"TELEGRAM_BOT\", mailing: \"TELEGRAM_BOT\", disc: \"Тг бот\", status: true},\n        {id: 2, title: \"MTS\", code: \"MTS_GW\", mailing: \"SMS\", disc: \"\", status: true}\n      ]\n    }\n  }\n};\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nul, ul li {\n    list-style: none;\n}\n\nimg {\n  height: 14px;\n  width: 14px;\n}\n\nbody {\n  background-color: rgb(224, 224, 224)\n}\n\ntable {\n  width: 650px;\n  border-top: 7px solid rgb(218, 218, 218);\n  border-collapse: collapse;\n  text-align: center;\n  margin-bottom: 20px;\n  border: 1px solid #dddddd;\n}\n\ntd {\n  text-align: left;\n\tpadding: 10px;\n\tborder: 3px solid rgb(218, 218, 218);\n}\n th {\n  text-align: center;\n  padding: 10px;\n\tborder: 3px solid rgb(218, 218, 218);\n }\n\n.header {\n  height: 56px;\n  padding: 16px;\n  background-color: white;\n}\n\n.nav__list {\n  display: flex;\n  justify-content: space-between;\n}\n\n.nav__item__notification {\n  display: flex;\n  justify-content: space-between;\n  width: 230px;\n}\n\n#nav__item_left {\n  width: 200px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.exit__img {\n  margin-right: 10px;\n}\n\n.nav__item__exit{\n  width: 200px;\n}\n\n.wrapper__channels {\n  background-color: white;\n}\n</style>\n"],"mappings":";OAM0EA,UAAyB;;EAL5FC,EAAE,EAAC;AAAK;gCADfC,kBAAA,+KAAAF,UAAA,oJAAAA,UAAA,mHAAAA,UAAA;;EA6BSG,KAAK,EAAC;AAAmB;gCAC5BC,mBAAA,CAAoC,YAAhC,6BAA2B;gCAQ7BA,mBAAA,CASK,a,aARHA,mBAAA,CAAgC,a,aAA5BA,mBAAA,CAAuB;EAAhBC,IAAI,EAAC;AAAU,G,gBAC1BD,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAsB,YAAlB,eAAa,G,aACjBA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAS,M;gCAIPA,mBAAA,CAAgC,a,aAA5BA,mBAAA,CAAuB;EAAhBC,IAAI,EAAC;AAAU,G;gCAO1BD,mBAAA,CAGK,a,aAFHA,mBAAA,CAAmB,aAAd,UAAQ,G,aACbA,mBAAA,CAAkB,aAAb,SAAO,E;;uBA1DxBE,mBAAA,CAgEM,OAhENC,UAgEM,GA/DJC,UAYS,EAeTJ,mBAAA,CAmCM,OAnCNK,UAmCM,GAlCJC,UAAoC,EACpCC,mBAAA,8WAK0D,EAC1DP,mBAAA,CA0BQ,gBAzBNQ,UASK,G,kBACLN,mBAAA,CAcMO,SAAA,QA9DdC,WAAA,CAgD+CC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAnCX,mBAAA,CAcM;MAdDH,KAAK,EAAC,SAAS;MAAoCe,GAAG,EAAED,OAAO,CAAChB;QACnEG,mBAAA,CAYK,aAXHe,UAAgC,EAChCf,mBAAA,CAAyB,YAAAgB,gBAAA,CAAlBH,OAAO,CAAChB,EAAE,kBACjBG,mBAAA,CAA4B,YAAAgB,gBAAA,CAArBH,OAAO,CAACI,KAAK,kBACpBjB,mBAAA,CAA2B,YAAAgB,gBAAA,CAApBH,OAAO,CAACK,IAAI,kBACnBlB,mBAAA,CAA8B,YAAAgB,gBAAA,CAAvBH,OAAO,CAACM,OAAO,kBACtBnB,mBAAA,CAA2B,YAAAgB,gBAAA,CAApBH,OAAO,CAACO,IAAI,kBACnBpB,mBAAA,CAA6B,YAAAgB,gBAAA,CAAtBH,OAAO,CAACQ,MAAM,kBACrBC,UAGK,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}