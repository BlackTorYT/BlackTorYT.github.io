{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    channel: {\n      type: Object,\n      default: () => ({\n        title: '',\n        code: '',\n        mailing: 'Telegram Bot',\n        disc: '',\n        json: '{ \"telegram_token\":\"\"}',\n        status: true\n      })\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      localChannel: {\n        ...this.channel\n      },\n      errors: {\n        title: '',\n        code: ''\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      this.clearErrors();\n      if (!this.localChannel.title) {\n        this.errors.title = 'Название обязательно для заполнения';\n      }\n      if (!this.localChannel.code) {\n        this.errors.code = 'Уникальный код обязательно для заполнения';\n      }\n      if (this.errors.title || this.errors.code) {\n        return;\n      }\n      if (this.isEdit) {\n        this.$emit('update', this.localChannel);\n      } else {\n        this.$emit('create', {\n          ...this.localChannel,\n          id: this.getNextId()\n        });\n      }\n      this.$router.push('/channels');\n    },\n    clearErrors() {\n      this.errors = {\n        title: '',\n        code: ''\n      };\n    },\n    getNextId() {\n      if (this.$props.channels.length === 0) {\n        return 1;\n      }\n      const maxId = Math.max(...this.$props.channels.map(channel => channel.id));\n      return maxId + 1;\n    }\n  }\n};","map":{"version":3,"names":["props","channel","type","Object","default","title","code","mailing","disc","json","status","isEdit","Boolean","data","localChannel","errors","methods","handleSubmit","clearErrors","$emit","id","getNextId","$router","push","$props","channels","length","maxId","Math","max","map"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelForm.vue"],"sourcesContent":["<template>\n    <form class=\"wrapper\" @submit.prevent=\"createChannel\" style=\"background-color: white;\">\n      <div class=\"wrapper__head\">\n        <h1>{{ isEdit ? 'Редактирование' : 'Создание' }} канала отправки</h1>\n        <span>Панель управления / Каналы отправки / {{ isEdit ? 'Редактирование' : 'Создание' }} канала отправки </span>\n      </div>\n      <div class=\"name\">\n        Название\n        <my-input type=\"text\" class=\"input\" v-model=\"localChannel.title\" />\n        <span v-if=\"errors.title\" class=\"error\">{{ errors.title }}</span>\n      </div>\n      <div class=\"uniqueCode\">\n        Уникальный код поля\n        <my-input type=\"text\" class=\"input\" v-model=\"localChannel.code\" />\n        <span v-if=\"errors.code\" class=\"error\">{{ errors.code }}</span>\n      </div>\n      <div class=\"mailing\">\n        Обработчик\n        <select class=\"input\" v-model=\"localChannel.mailing\">\n          <option value=\"Telegram Bot\">Telegram Bot</option>\n          <option value=\"SMS\">SMS</option>\n        </select>\n      </div>\n      <div class=\"disc\">\n        Описание\n        <my-input type=\"text\" class=\"input\" v-model=\"localChannel.disc\" />\n      </div>\n      <div class=\"json\">\n        Настройки JSON\n        <my-input type=\"text\" class=\"input\" v-model=\"localChannel.json\" />\n      </div>\n      <div class=\"active\">\n        Канал активен?\n        <select class=\"input\" v-model=\"localChannel.status\">\n          <option :value=\"true\">Да</option>\n          <option :value=\"false\">Нет</option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"save__btn\">Сохранить</button>\n    </form>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      channel: {\n        type: Object,\n        default: () => ({\n          title: '',\n          code: '',\n          mailing: 'Telegram Bot',\n          disc: '',\n          json: '{ \"telegram_token\":\"\"}',\n          status: true\n        })\n      },\n      isEdit: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        localChannel: { ...this.channel },\n        errors: {\n          title: '',\n          code: ''\n        }\n      };\n    },\n    methods: {\n      handleSubmit() {\n        this.clearErrors();\n  \n        if (!this.localChannel.title) {\n          this.errors.title = 'Название обязательно для заполнения';\n        }\n  \n        if (!this.localChannel.code) {\n          this.errors.code = 'Уникальный код обязательно для заполнения';\n        }\n  \n        if (this.errors.title || this.errors.code) {\n          return;\n        }\n  \n        if (this.isEdit) {\n          this.$emit('update', this.localChannel);\n        } else {\n          this.$emit('create', { ...this.localChannel, id: this.getNextId() });\n        }\n        this.$router.push('/channels');\n      },\n      clearErrors() {\n        this.errors = {\n          title: '',\n          code: ''\n        };\n      },\n      getNextId() {\n        if (this.$props.channels.length === 0) {\n          return 1;\n        }\n        const maxId = Math.max(...this.$props.channels.map(channel => channel.id));\n        return maxId + 1;\n      }\n    }\n  };\n  </script>\n  \n\n<style scoped>\n.save__btn {\n  display: block;\n  width: 100%;\n  background-color: #3386f3;\n  color: white;\n  border: none;\n  padding: 10px;\n  text-align: center;\n  text-decoration: none;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 10px;\n}\n\n.input {\n  margin-bottom: 10px;\n  padding: 8px;\n}\n\n.error {\n  color: red;\n  font-size: 14px;\n}\n</style>\n"],"mappings":";AA2CE,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO;QACdC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,cAAc;QACvBC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,wBAAwB;QAC9BC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDC,MAAM,EAAE;MACNT,IAAI,EAAEU,OAAO;MACbR,OAAO,EAAE;IACX;EACF,CAAC;EACDS,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QAAE,GAAG,IAAI,CAACb;MAAQ,CAAC;MACjCc,MAAM,EAAE;QACNV,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;MACR;IACF,CAAC;EACH,CAAC;EACDU,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACC,WAAW,CAAC,CAAC;MAElB,IAAI,CAAC,IAAI,CAACJ,YAAY,CAACT,KAAK,EAAE;QAC5B,IAAI,CAACU,MAAM,CAACV,KAAI,GAAI,qCAAqC;MAC3D;MAEA,IAAI,CAAC,IAAI,CAACS,YAAY,CAACR,IAAI,EAAE;QAC3B,IAAI,CAACS,MAAM,CAACT,IAAG,GAAI,2CAA2C;MAChE;MAEA,IAAI,IAAI,CAACS,MAAM,CAACV,KAAI,IAAK,IAAI,CAACU,MAAM,CAACT,IAAI,EAAE;QACzC;MACF;MAEA,IAAI,IAAI,CAACK,MAAM,EAAE;QACf,IAAI,CAACQ,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACL,YAAY,CAAC;MACzC,OAAO;QACL,IAAI,CAACK,KAAK,CAAC,QAAQ,EAAE;UAAE,GAAG,IAAI,CAACL,YAAY;UAAEM,EAAE,EAAE,IAAI,CAACC,SAAS,CAAC;QAAE,CAAC,CAAC;MACtE;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IACDL,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACH,MAAK,GAAI;QACZV,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;MACR,CAAC;IACH,CAAC;IACDe,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACG,MAAM,CAACC,QAAQ,CAACC,MAAK,KAAM,CAAC,EAAE;QACrC,OAAO,CAAC;MACV;MACA,MAAMC,KAAI,GAAIC,IAAI,CAACC,GAAG,CAAC,GAAG,IAAI,CAACL,MAAM,CAACC,QAAQ,CAACK,GAAG,CAAC7B,OAAM,IAAKA,OAAO,CAACmB,EAAE,CAAC,CAAC;MAC1E,OAAOO,KAAI,GAAI,CAAC;IAClB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}