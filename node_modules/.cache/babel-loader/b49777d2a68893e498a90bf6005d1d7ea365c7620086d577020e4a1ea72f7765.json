{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e5a9dc1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"wrapper__channels\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Каналы отправки уведомлений\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__checkbox\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\"\n})]), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__id\"\n}, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__name\"\n}, \"Название\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__code\"\n}, \"Код\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__mailing\"\n}, \"Шлюз рассылки\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__disc\"\n}, \"Описание\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__status\"\n}, \"Статус\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__action\"\n}, \"Действия\")])], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_channel_item = _resolveComponent(\"channel-item\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", null, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.channels, channel => {\n    return _openBlock(), _createBlock(_component_channel_item, {\n      channel: channel,\n      key: channel.id,\n      onRemove: $event => _ctx.$emit('remove', channel)\n    }, null, 8 /* PROPS */, [\"channel\", \"onRemove\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$props","channels","channel","_createBlock","_component_channel_item","key","id","onRemove","$event","_ctx","$emit"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelList.vue"],"sourcesContent":["<template>\r\n    <div class=\"wrapper__channels\">\r\n      <h1>Каналы отправки уведомлений</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th class=\"channel__checkbox\"><input type=\"checkbox\"></th>\r\n            <th class=\"channel__id\">ID</th>\r\n            <th class=\"channel__name\">Название</th>\r\n            <th class=\"channel__code\">Код</th>\r\n            <th class=\"channel__mailing\">Шлюз рассылки</th>\r\n            <th class=\"channel__disc\">Описание</th>\r\n            <th class=\"channel__status\">Статус</th>\r\n            <th class=\"channel__action\">Действия</th>\r\n          </tr>\r\n        </thead>\r\n        <channel-item v-for=\"channel in channels\" v-bind:channel=\"channel\" v-bind:key=\"channel.id\" @remove=\"$emit('remove', channel)\"></channel-item>\r\n      </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// Компонент для списка каналов\r\nimport ChannelItem from \"@/components/ChannelItem.vue\"\r\nexport default {\r\n  components: {ChannelItem},\r\n  props: {\r\n    channels: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  width: 100%;\r\n  max-width: 650px;\r\n  border-top: 7px solid rgb(218, 218, 218);\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #dddddd;\r\n}\r\n\r\ntd {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\nth {\r\n  text-align: center;\r\n  padding: 10px;\r\n  border: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\n.wrapper__channels {\r\n  background-color: white;\r\n}\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAmB;gEAC5BC,mBAAA,CAAoC,YAAhC,6BAA2B;gEAE7BA,mBAAA,CAWQ,gB,aAVNA,mBAAA,CASK,a,aARHA,mBAAA,CAA0D;EAAtDD,KAAK,EAAC;AAAmB,I,aAACC,mBAAA,CAAuB;EAAhBC,IAAI,EAAC;AAAU,G,gBACpDD,mBAAA,CAA+B;EAA3BD,KAAK,EAAC;AAAa,GAAC,IAAE,G,aAC1BC,mBAAA,CAAuC;EAAnCD,KAAK,EAAC;AAAe,GAAC,UAAQ,G,aAClCC,mBAAA,CAAkC;EAA9BD,KAAK,EAAC;AAAe,GAAC,KAAG,G,aAC7BC,mBAAA,CAA+C;EAA3CD,KAAK,EAAC;AAAkB,GAAC,eAAa,G,aAC1CC,mBAAA,CAAuC;EAAnCD,KAAK,EAAC;AAAe,GAAC,UAAQ,G,aAClCC,mBAAA,CAAuC;EAAnCD,KAAK,EAAC;AAAiB,GAAC,QAAM,G,aAClCC,mBAAA,CAAyC;EAArCD,KAAK,EAAC;AAAiB,GAAC,UAAQ,E;;;uBAZ5CG,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,UAAoC,EACpCJ,mBAAA,CAcQ,gBAbNK,UAWQ,G,kBACRH,mBAAA,CAA6II,SAAA,QAhBrJC,WAAA,CAgBwCC,MAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAA5BC,YAAA,CAA6IC,uBAAA;MAA5FF,OAAO,EAAEA,OAAO;MAASG,GAAG,EAAEH,OAAO,CAACI,EAAE;MAAGC,QAAM,EAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,WAAWR,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}