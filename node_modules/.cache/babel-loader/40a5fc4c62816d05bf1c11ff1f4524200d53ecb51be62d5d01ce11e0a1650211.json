{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/trash.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e5a9dc1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"wrapper__channels\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Каналы отправки уведомлений\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"channel__checkbox\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__id\"\n}, \"ID\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__name\"\n}, \"Название\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__code\"\n}, \"Код\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__mailing\"\n}, \"Шлюз рассылки\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__disc\"\n}, \"Описание\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__status\"\n}, \"Статус\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__action\"\n}, \"Действия\", -1 /* HOISTED */));\nconst _hoisted_11 = [\"checked\", \"onChange\"];\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n}, null, -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_my_button = _resolveComponent(\"my-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.removeSelectedChannels && $options.removeSelectedChannels(...args))\n  }, \"Удалить\"), _createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", _hoisted_3, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.toggleAll && $options.toggleAll(...args))\n  }, null, 32 /* NEED_HYDRATION */)]), _hoisted_4, _hoisted_5, _hoisted_6, _hoisted_7, _hoisted_8, _hoisted_9, _hoisted_10])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.channels, channel => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: channel.id\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      checked: _ctx.selected,\n      onChange: $event => $options.toggle(channel.id)\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_11)]), _createElementVNode(\"td\", null, _toDisplayString(channel.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.code), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.mailing), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.disc), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.status ? 'Включен' : 'Отключен'), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createVNode(_component_router_link, {\n      to: '/channels/edit/' + channel.id\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Изменить\")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"div\", {\n      class: \"channel__delete\",\n      onClick: $event => _ctx.$emit('remove', channel)\n    }, [_createVNode(_component_my_button, null, {\n      default: _withCtx(() => [_hoisted_13, _createTextVNode(\"Удалить\")]),\n      _: 1 /* STABLE */\n    })], 8 /* PROPS */, _hoisted_12)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_imports_0","class","_createElementVNode","src","alt","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","removeSelectedChannels","_hoisted_3","type","onChange","toggleAll","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_Fragment","_renderList","$props","channels","channel","key","id","checked","_ctx","selected","$event","toggle","_hoisted_11","_toDisplayString","title","code","mailing","disc","status","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","$emit","_component_my_button","_hoisted_13","_hoisted_12"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelList.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper__channels\">\n    <h1>Каналы отправки уведомлений</h1>\n    <button @click=\"removeSelectedChannels\">Удалить</button>\n    <table>\n      <thead>\n        <tr>\n          <th class=\"channel__checkbox\">\n            <input type=\"checkbox\" @change=\"toggleAll\">\n          </th>\n          <th class=\"channel__id\">ID</th>\n          <th class=\"channel__name\">Название</th>\n          <th class=\"channel__code\">Код</th>\n          <th class=\"channel__mailing\">Шлюз рассылки</th>\n          <th class=\"channel__disc\">Описание</th>\n          <th class=\"channel__status\">Статус</th>\n          <th class=\"channel__action\">Действия</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"channel in channels\" :key=\"channel.id\">\n          <td><input type=\"checkbox\" :checked=\"selected\" @change=\"toggle(channel.id)\"></td>\n          <td>{{ channel.id }}</td>\n          <td>{{ channel.title }}</td>\n          <td>{{ channel.code }}</td>\n          <td>{{ channel.mailing }}</td>\n          <td>{{ channel.disc }}</td>\n          <td>{{ channel.status ? 'Включен' : 'Отключен' }}</td>\n          <td>\n            <router-link :to=\"'/channels/edit/' + channel.id\">Изменить</router-link>\n            <div class=\"channel__delete\" @click=\"$emit('remove', channel)\">\n              <my-button><img src=\"../assets/trash.png\" alt=\"\">Удалить</my-button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    channels: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedChannels: []\n    };\n  },\n  methods: {\n    toggle(channelId) {\n      this.$emit('toggle', channelId);\n    },\n    toggleAll(event) {\n      if (event.target.checked) {\n        this.selectedChannels = this.channels.map(channel => channel.id);\n      } else {\n        this.selectedChannels = [];\n      }\n    },\n    removeSelectedChannels() {\n      this.$emit('removeSelected', this.selectedChannels);\n      this.selectedChannels = [];\n    }\n  }\n};\n</script>\n\n<style scoped>\ntable {\n  width: 100%;\n  border-top: 7px solid rgb(218, 218, 218);\n  border-collapse: collapse;\n  text-align: center;\n  margin-bottom: 20px;\n  border: 1px solid #dddddd;\n}\n\ntd {\n  text-align: left;\n  padding: 10px;\n  border: 1px solid rgb(218, 218, 218);\n}\n\nth {\n  text-align: left;\n  padding: 10px;\n  border: 1px solid rgb(218, 218, 218);\n}\n\n.wrapper__channels {\n  background-color: white;\n}\n\n.channel__checkbox {\n  width: 36px;\n}\n\n.channel__id {\n  width: 40px;\n}\n\n.channel__name {\n  width: 150px;\n}\n\n.channel__code {\n  width: 200px;\n}\n\n.channel__mailing {\n  width: 200px;\n}\n\n.channel__status {\n  width: 100px;\n}\n\n.channel__action {\n  width: 150px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}