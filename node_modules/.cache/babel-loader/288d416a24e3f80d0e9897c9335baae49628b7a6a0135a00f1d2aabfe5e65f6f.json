{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2a6176e7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"wrapper__head\"\n};\nconst _hoisted_2 = {\n  class: \"name\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  class: \"uniqueCode\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_6 = {\n  class: \"mailing\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Telegram Bot\"\n}, \"Telegram Bot\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"SMS\"\n}, \"SMS\", -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_7, _hoisted_8];\nconst _hoisted_10 = {\n  class: \"disc\"\n};\nconst _hoisted_11 = {\n  class: \"json\"\n};\nconst _hoisted_12 = {\n  class: \"active\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: true\n}, \"Да\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: false\n}, \"Нет\", -1 /* HOISTED */));\nconst _hoisted_15 = [_hoisted_13, _hoisted_14];\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"save__btn\"\n}, \"Сохранить\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    class: \"wrapper\",\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.createChannel && $options.createChannel(...args), [\"prevent\"])),\n    style: {\n      \"background-color\": \"white\"\n    }\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.isEdit ? 'Редактирование' : 'Создание') + \" канала отправки\", 1 /* TEXT */), _createElementVNode(\"span\", null, \"Панель управления / Каналы отправки / \" + _toDisplayString(_ctx.isEdit ? 'Редактирование' : 'Создание') + \" канала отправки \", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_2, [_createTextVNode(\" Название \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.channel.title,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.channel.title = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $data.errors.title ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($data.errors.title), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [_createTextVNode(\" Уникальный код поля \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: _ctx.localChannel.code,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.localChannel.code = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $data.errors.code ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString($data.errors.code), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [_createTextVNode(\" Обработчик \"), _withDirectives(_createElementVNode(\"select\", {\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.localChannel.mailing = $event)\n  }, [..._hoisted_9], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.localChannel.mailing]])]), _createElementVNode(\"div\", _hoisted_10, [_createTextVNode(\" Описание \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: _ctx.localChannel.disc,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.localChannel.disc = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_11, [_createTextVNode(\" Настройки JSON \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: _ctx.localChannel.json,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.localChannel.json = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_12, [_createTextVNode(\" Канал активен? \"), _withDirectives(_createElementVNode(\"select\", {\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.localChannel.status = $event)\n  }, [..._hoisted_15], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.localChannel.status]])]), _hoisted_16], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["class","key","_createElementVNode","value","_hoisted_7","_hoisted_8","_hoisted_13","_hoisted_14","type","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","createChannel","style","_hoisted_1","_toDisplayString","_ctx","isEdit","_hoisted_2","_createTextVNode","_createVNode","_component_my_input","modelValue","$data","channel","title","$event","errors","_hoisted_3","_createCommentVNode","_hoisted_4","localChannel","code","_hoisted_5","_hoisted_6","mailing","_hoisted_9","_hoisted_10","disc","_hoisted_11","json","_hoisted_12","status","_hoisted_15","_hoisted_16"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelForm.vue"],"sourcesContent":["<template>\n    <form class=\"wrapper\" @submit.prevent=\"createChannel\" style=\"background-color: white;\">\n      <div class=\"wrapper__head\">\n        <h1>{{ isEdit ? 'Редактирование' : 'Создание' }} канала отправки</h1>\n        <span>Панель управления / Каналы отправки / {{ isEdit ? 'Редактирование' : 'Создание' }} канала отправки </span>\n      </div>\n      <div class=\"name\">\n        Название \n        <my-input type=\"text\" class=\"input\" v-model=\"channel.title\"/>\n        <span v-if=\"errors.title\" class=\"error\">{{ errors.title }}</span>\n    </div>\n      <div class=\"uniqueCode\">\n        Уникальный код поля\n        <my-input type=\"text\" class=\"input\" v-model=\"localChannel.code\" />\n        <span v-if=\"errors.code\" class=\"error\">{{ errors.code }}</span>\n      </div>\n      <div class=\"mailing\">\n        Обработчик\n        <select class=\"input\" v-model=\"localChannel.mailing\">\n          <option value=\"Telegram Bot\">Telegram Bot</option>\n          <option value=\"SMS\">SMS</option>\n        </select>\n      </div>\n      <div class=\"disc\">\n        Описание\n        <my-input type=\"text\" class=\"input\" v-model=\"localChannel.disc\" />\n      </div>\n      <div class=\"json\">\n        Настройки JSON\n        <my-input type=\"text\" class=\"input\" v-model=\"localChannel.json\" />\n      </div>\n      <div class=\"active\">\n        Канал активен?\n        <select class=\"input\" v-model=\"localChannel.status\">\n          <option :value=\"true\">Да</option>\n          <option :value=\"false\">Нет</option>\n        </select>\n      </div>\n      <button type=\"submit\" class=\"save__btn\">Сохранить</button>\n    </form>\n  </template>\n  \n<script>\n\nexport default {\n  props: {\n    initialChannel: {\n      type: Object,\n      default: () => ({\n        title: '',\n        code: '',\n        mailing: 'Telegram Bot',\n        disc: '',\n        json: '{ \"telegram_token\":\"\"}',\n        status: true\n      })\n    }\n  },\n  data() {\n    return {\n      channel: { ...this.initialChannel }, // Инициализация channel с помощью initialChannel\n      errors: {\n        title: '',\n        code: ''\n      }\n    };\n  },\n  methods: {\n    getNextId() {\n      if (this.channels.length === 0) {\n        return 1;\n      }\n      const maxId = Math.max(...this.channels.map(channel => channel.id));\n      return maxId + 1;\n    },\n    createChannel() {\n      this.clearErrors();\n\n      if (!this.channel.title) {\n        this.errors.title = 'Название обязательно для заполнения';\n      }\n\n      if (!this.channel.code) {\n        this.errors.code = 'Уникальный код обязательно для заполнения';\n      }\n\n      if (this.errors.title || this.errors.code) {\n        return;\n      }\n\n      const newChannelId = this.getNextId();\n      const newChannel = { ...this.channel, id: newChannelId };\n      this.$emit('create', newChannel);\n      this.resetForm();\n    },\n    clearErrors() {\n      this.errors = {\n        title: '',\n        code: ''\n      };\n    },\n    resetForm() {\n      this.channel = {\n        ...this.initialChannel // Сбрасываем форму до начального состояния initialChannel\n      };\n    }\n  },\n  watch: {\n    initialChannel: {\n      deep: true,\n      handler(newVal) {\n        // Обновляем локальную копию channel при изменении initialChannel извне\n        this.channel = { ...newVal };\n      }\n    }\n  }\n};\n</script>\n  \n\n<style scoped>\n.save__btn {\n  display: block;\n  width: 100%;\n  background-color: #3386f3;\n  color: white;\n  border: none;\n  padding: 10px;\n  text-align: center;\n  text-decoration: none;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 10px;\n}\n\n.input {\n  margin-bottom: 10px;\n  padding: 8px;\n}\n\n.error {\n  color: red;\n  font-size: 14px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}