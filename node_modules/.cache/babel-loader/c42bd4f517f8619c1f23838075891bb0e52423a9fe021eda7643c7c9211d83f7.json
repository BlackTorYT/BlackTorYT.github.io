{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_subscriber_form = _resolveComponent(\"subscriber-form\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_subscriber_form, {\n    subscriber: $options.subscriber,\n    onUpdate: $options.handleUpdateSubscriber,\n    subscribers: $props.subscribers,\n    isEdit: true\n  }, null, 8 /* PROPS */, [\"subscriber\", \"onUpdate\", \"subscribers\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_subscriber_form","subscriber","$options","onUpdate","handleUpdateSubscriber","subscribers","$props","isEdit"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\pages\\TemplatesEditPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <subscriber-form :subscriber=\"subscriber\" @update=\"handleUpdateSubscriber\" :subscribers=\"subscribers\" :isEdit=\"true\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SubscriberForm from \"@/components/SubscriberForm.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    SubscriberForm\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    subscribers: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    subscriber() {\r\n      return this.subscribers.find(subscriber => subscriber.id === parseInt(this.id));\r\n    }\r\n  },\r\n  methods: {\r\n    handleUpdateSubscriber(updatedSubscriber) {\r\n      this.$emit('updateSubscriber', updatedSubscriber);\r\n      this.$router.push('/subscribers');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAAuHC,0BAAA;IAArGC,UAAU,EAAEC,QAAA,CAAAD,UAAU;IAAGE,QAAM,EAAED,QAAA,CAAAE,sBAAsB;IAAGC,WAAW,EAAEC,MAAA,CAAAD,WAAW;IAAGE,MAAM,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}