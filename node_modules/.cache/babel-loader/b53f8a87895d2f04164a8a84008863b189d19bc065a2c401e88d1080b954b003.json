{"ast":null,"code":"import { createStore } from 'vuex';\nconst store = createStore({\n  state: {\n    isAuthenticated: false,\n    user: null\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n    },\n    logout(state) {\n      state.user = null;\n    },\n    setIsAuthenticated(state, isAuthenticated) {\n      state.isAuthenticated = isAuthenticated;\n    }\n  },\n  actions: {\n    login({\n      commit\n    }, user) {\n      const fixedUsername = 'admin';\n      const fixedPassword = 'admin';\n      if (user.username === fixedUsername && user.password === fixedPassword) {\n        commit('setUser', user);\n        return true;\n      } else {\n        return false;\n      }\n    },\n    logout({\n      commit\n    }) {\n      commit('logout');\n    }\n  },\n  getters: {\n    isAuthenticated(state) {\n      return !!state.user;\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","isAuthenticated","user","mutations","setUser","logout","setIsAuthenticated","actions","login","commit","fixedUsername","fixedPassword","username","password","getters"],"sources":["F:/Vue Notifications/notifications_practice/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\r\n\r\nconst store = createStore({\r\n  state: {\r\n    isAuthenticated: false,\r\n    user: null\r\n  },\r\n  mutations: {\r\n    setUser(state, user) {\r\n      state.user = user;\r\n    },\r\n    logout(state) {\r\n      state.user = null;\r\n    },\r\n    setIsAuthenticated(state, isAuthenticated) {\r\n      state.isAuthenticated = isAuthenticated;\r\n    },\r\n  },\r\n  actions: {\r\n    login({ commit }, user) {\r\n      const fixedUsername = 'admin';\r\n      const fixedPassword = 'admin';\r\n\r\n      if (user.username === fixedUsername && user.password === fixedPassword) {\r\n        commit('setUser', user);\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    },\r\n    logout({ commit }) {\r\n      commit('logout');\r\n    }\r\n  },\r\n  getters: {\r\n    isAuthenticated(state) {\r\n      return !!state.user;\r\n    }\r\n  }\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,KAAK,EAAE;IACLC,eAAe,EAAE,KAAK;IACtBC,IAAI,EAAE;EACR,CAAC;EACDC,SAAS,EAAE;IACTC,OAAOA,CAACJ,KAAK,EAAEE,IAAI,EAAE;MACnBF,KAAK,CAACE,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDG,MAAMA,CAACL,KAAK,EAAE;MACZA,KAAK,CAACE,IAAI,GAAG,IAAI;IACnB,CAAC;IACDI,kBAAkBA,CAACN,KAAK,EAAEC,eAAe,EAAE;MACzCD,KAAK,CAACC,eAAe,GAAGA,eAAe;IACzC;EACF,CAAC;EACDM,OAAO,EAAE;IACPC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEP,IAAI,EAAE;MACtB,MAAMQ,aAAa,GAAG,OAAO;MAC7B,MAAMC,aAAa,GAAG,OAAO;MAE7B,IAAIT,IAAI,CAACU,QAAQ,KAAKF,aAAa,IAAIR,IAAI,CAACW,QAAQ,KAAKF,aAAa,EAAE;QACtEF,MAAM,CAAC,SAAS,EAAEP,IAAI,CAAC;QACvB,OAAO,IAAI;MACb,CAAC,MAAM;QACL,OAAO,KAAK;MACd;IACF,CAAC;IACDG,MAAMA,CAAC;MAAEI;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,QAAQ,CAAC;IAClB;EACF,CAAC;EACDK,OAAO,EAAE;IACPb,eAAeA,CAACD,KAAK,EAAE;MACrB,OAAO,CAAC,CAACA,KAAK,CAACE,IAAI;IACrB;EACF;AACF,CAAC,CAAC;AAEF,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}