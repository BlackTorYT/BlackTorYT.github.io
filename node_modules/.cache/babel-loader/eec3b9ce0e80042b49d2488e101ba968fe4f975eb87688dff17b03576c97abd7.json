{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      channels: [{\n        id: 1,\n        title: \"Telegram Bot\",\n        code: \"TELEGRAM_BOT\",\n        mailing: \"TELEGRAM_BOT\",\n        disc: \"Тг бот\",\n        status: true\n      }, {\n        id: 2,\n        title: \"MTS\",\n        code: \"MTS_GW\",\n        mailing: \"SMS\",\n        disc: \"\",\n        status: true\n      }],\n      subscribers: [{\n        id: 1,\n        name: \"Кирилл\",\n        phone: \"+79422313123\",\n        username: \"apapa\",\n        tg: \"13123\",\n        note: \"\",\n        phoneConfirmed: true,\n        status: true\n      }, {\n        id: 2,\n        name: \"Иван\",\n        phone: \"+79116241196\",\n        username: \"marara\",\n        tg: \"13111\",\n        note: \"\",\n        phoneConfirmed: true,\n        status: true\n      }]\n    };\n  },\n  methods: {\n    createChannel(channel) {\n      this.channels.push(channel);\n    },\n    removeChannel(channel) {\n      this.channels = this.channels.filter(c => c.id !== channel.id);\n    },\n    removeSelectedChannel(selectedChannelIds) {\n      this.channels = this.channels.filter(channel => !selectedChannelIds.includes(channel.id));\n    },\n    updateChannel(updatedChannel) {\n      const index = this.channels.findIndex(channel => channel.id === updatedChannel.id);\n      if (index !== -1) {\n        this.channels.splice(index, 1, updatedChannel);\n      }\n    },\n    createSubscriber(subscriber) {\n      this.subscribers.push(subscriber);\n    },\n    removeSubscriber(subscriber) {\n      this.subscribers = this.subscribers.filter(s => s.id !== subscriber.id);\n    },\n    removeSelectedSubscriber(selectedSubscriberIds) {\n      this.subscribers = this.subscribers.filter(subscriber => !selectedSubscriberIds.includes(subscriber.id));\n    }\n  }\n};","map":{"version":3,"names":["name","data","channels","id","title","code","mailing","disc","status","subscribers","phone","username","tg","note","phoneConfirmed","methods","createChannel","channel","push","removeChannel","filter","c","removeSelectedChannel","selectedChannelIds","includes","updateChannel","updatedChannel","index","findIndex","splice","createSubscriber","subscriber","removeSubscriber","s","removeSelectedSubscriber","selectedSubscriberIds"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <header class=\"header\">\n      <div class=\"header__nav\">\n        <nav class=\"nav\">\n          <ul class=\"nav__list\">\n            <li class=\"nav__item\" id=\"nav__item_left\">\n              <img class=\"burger\" src=\"./assets/burger.png\" alt=\"menu\">Панель управления\n            </li>\n            <div class=\"nav__item__notification\">\n              <li class=\"nav__item\">\n                <img class=\"notification__img\" src=\"./assets/burger.png\" alt=\"notification\">\n              </li>\n              <li class=\"nav__item\" id=\"nav__item__exit\">\n                <img class=\"exit__img\" src=\"./assets/burger.png\" alt=\"exit\">Выйти из аккаунта\n              </li>\n            </div>\n          </ul>\n        </nav>\n      </div>\n    </header>\n\n    <router-view \n      :channels=\"channels\" \n      @updateChannel=\"updateChannel\" \n      @createChannel=\"createChannel\"\n      @removeChannel=\"removeChannel\" \n      @removeSelectedChannel=\"removeSelectedChannel\" \n      :subscribers=\"subscribers\" \n      @createSubscriber=\"createSubscriber\"\n      @removeSubscriber=\"removeSubscriber\" \n      @removeSelectedSubscriber=\"removeSelectedSubscriber\" \n    ></router-view>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      channels: [\n        { id: 1, title: \"Telegram Bot\", code: \"TELEGRAM_BOT\", mailing: \"TELEGRAM_BOT\", disc: \"Тг бот\", status: true },\n        { id: 2, title: \"MTS\", code: \"MTS_GW\", mailing: \"SMS\", disc: \"\", status: true }\n      ],\n      subscribers: [\n        { id: 1, name: \"Кирилл\", phone: \"+79422313123\", username: \"apapa\", tg: \"13123\", note: \"\", phoneConfirmed: true, status: true },\n        { id: 2, name: \"Иван\", phone: \"+79116241196\", username: \"marara\", tg: \"13111\", note: \"\", phoneConfirmed: true, status: true }\n      ]\n    };\n  },\n  methods: {\n    createChannel(channel) {\n      this.channels.push(channel);\n    },\n    removeChannel(channel) {\n      this.channels = this.channels.filter(c => c.id !== channel.id);\n    },\n    removeSelectedChannel(selectedChannelIds) {\n      this.channels = this.channels.filter(channel => !selectedChannelIds.includes(channel.id));\n    },\n    updateChannel(updatedChannel) {\n      const index = this.channels.findIndex(channel => channel.id === updatedChannel.id);\n      if (index !== -1) {\n        this.channels.splice(index, 1, updatedChannel);\n      }\n    },\n    createSubscriber(subscriber) {\n      this.subscribers.push(subscriber);\n    },\n    removeSubscriber(subscriber) {\n      this.subscribers = this.subscribers.filter(s => s.id !== subscriber.id);\n    },\n    removeSelectedSubscriber(selectedSubscriberIds) {\n      this.subscribers = this.subscribers.filter(subscriber => !selectedSubscriberIds.includes(subscriber.id));\n    }\n  }\n};\n</script>\n\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nul, ul li {\n  list-style: none;\n}\n\nimg {\n  height: 14px;\n  width: 14px;\n}\n\nbody {\n  background-color: rgb(224, 224, 224);\n}\n\ntable {\n  width: 100%;\n  border-top: 7px solid rgb(218, 218, 218);\n  border-collapse: collapse;\n  text-align: center;\n  margin-bottom: 20px;\n  border: 1px solid #dddddd;\n}\n\ntd {\n  text-align: left;\n  padding: 10px;\n  border: 1px solid rgb(218, 218, 218);\n}\n\nth {\n  text-align: center;\n  padding: 10px;\n  border: 1px solid rgb(218, 218, 218);\n}\n\n.header {\n  height: 56px;\n  padding: 16px;\n  background-color: white;\n}\n\n.nav__list {\n  display: flex;\n  justify-content: space-between;\n}\n\n.nav__item__notification {\n  display: flex;\n  justify-content: space-between;\n  width: 230px;\n}\n\n#nav__item_left {\n  width: 200px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.exit__img {\n  margin-right: 10px;\n}\n\n.nav__item__exit {\n  width: 200px;\n}\n\n\n\n\n</style>"],"mappings":";AAqCA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CACR;QAAEC,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,cAAc;QAAEC,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAE,cAAc;QAAEC,IAAI,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAK,CAAC,EAC7G;QAAEL,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,KAAK;QAAEC,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,KAAK;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAK,EAC/E;MACDC,WAAW,EAAE,CACX;QAAEN,EAAE,EAAE,CAAC;QAAEH,IAAI,EAAE,QAAQ;QAAEU,KAAK,EAAE,cAAc;QAAEC,QAAQ,EAAE,OAAO;QAAEC,EAAE,EAAE,OAAO;QAAEC,IAAI,EAAE,EAAE;QAAEC,cAAc,EAAE,IAAI;QAAEN,MAAM,EAAE;MAAK,CAAC,EAC9H;QAAEL,EAAE,EAAE,CAAC;QAAEH,IAAI,EAAE,MAAM;QAAEU,KAAK,EAAE,cAAc;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,EAAE,EAAE,OAAO;QAAEC,IAAI,EAAE,EAAE;QAAEC,cAAc,EAAE,IAAI;QAAEN,MAAM,EAAE;MAAK;IAEhI,CAAC;EACH,CAAC;EACDO,OAAO,EAAE;IACPC,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAI,CAACf,QAAQ,CAACgB,IAAI,CAACD,OAAO,CAAC;IAC7B,CAAC;IACDE,aAAaA,CAACF,OAAO,EAAE;MACrB,IAAI,CAACf,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACkB,MAAM,CAACC,CAAA,IAAKA,CAAC,CAAClB,EAAC,KAAMc,OAAO,CAACd,EAAE,CAAC;IAChE,CAAC;IACDmB,qBAAqBA,CAACC,kBAAkB,EAAE;MACxC,IAAI,CAACrB,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACkB,MAAM,CAACH,OAAM,IAAK,CAACM,kBAAkB,CAACC,QAAQ,CAACP,OAAO,CAACd,EAAE,CAAC,CAAC;IAC3F,CAAC;IACDsB,aAAaA,CAACC,cAAc,EAAE;MAC5B,MAAMC,KAAI,GAAI,IAAI,CAACzB,QAAQ,CAAC0B,SAAS,CAACX,OAAM,IAAKA,OAAO,CAACd,EAAC,KAAMuB,cAAc,CAACvB,EAAE,CAAC;MAClF,IAAIwB,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAACzB,QAAQ,CAAC2B,MAAM,CAACF,KAAK,EAAE,CAAC,EAAED,cAAc,CAAC;MAChD;IACF,CAAC;IACDI,gBAAgBA,CAACC,UAAU,EAAE;MAC3B,IAAI,CAACtB,WAAW,CAACS,IAAI,CAACa,UAAU,CAAC;IACnC,CAAC;IACDC,gBAAgBA,CAACD,UAAU,EAAE;MAC3B,IAAI,CAACtB,WAAU,GAAI,IAAI,CAACA,WAAW,CAACW,MAAM,CAACa,CAAA,IAAKA,CAAC,CAAC9B,EAAC,KAAM4B,UAAU,CAAC5B,EAAE,CAAC;IACzE,CAAC;IACD+B,wBAAwBA,CAACC,qBAAqB,EAAE;MAC9C,IAAI,CAAC1B,WAAU,GAAI,IAAI,CAACA,WAAW,CAACW,MAAM,CAACW,UAAS,IAAK,CAACI,qBAAqB,CAACX,QAAQ,CAACO,UAAU,CAAC5B,EAAE,CAAC,CAAC;IAC1G;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}