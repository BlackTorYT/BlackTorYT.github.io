{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_channel_form = _resolveComponent(\"channel-form\");\n  const _component_channel_list = _resolveComponent(\"channel-list\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_router_link, {\n    to: \"/channel/create\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Создать\")]),\n    _: 1 /* STABLE */\n  }), $data.isCreate ? (_openBlock(), _createBlock(_component_channel_form, {\n    key: 0,\n    channels: $data.channels,\n    onCreate: $options.handleCreateChannel\n  }, null, 8 /* PROPS */, [\"channels\", \"onCreate\"])) : (_openBlock(), _createBlock(_component_channel_list, {\n    key: 1,\n    channels: $data.channels,\n    onRemove: $options.removeChannel,\n    onRemoveSelected: $options.removeSelectedChannel,\n    onEdit: $options.editChannel\n  }, null, 8 /* PROPS */, [\"channels\", \"onRemove\", \"onRemoveSelected\", \"onEdit\"]))]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","$data","isCreate","_createBlock","_component_channel_form","key","channels","onCreate","$options","handleCreateChannel","_component_channel_list","onRemove","removeChannel","onRemoveSelected","removeSelectedChannel","onEdit","editChannel"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\pages\\ChannelPage.vue"],"sourcesContent":["<template>\n  <div>\n    <router-link to=\"/channel/create\">Создать</router-link>\n    <channel-form v-if=\"isCreate\" :channels=\"channels\" @create=\"handleCreateChannel\"/>\n    <channel-list v-else v-bind:channels=\"channels\" @remove=\"removeChannel\" @removeSelected=\"removeSelectedChannel\" @edit=\"editChannel\"/>\n  </div>\n</template>\n\n<script>\nimport ChannelList from \"@/components/ChannelList.vue\";\nimport ChannelForm from \"@/components/ChannelForm.vue\";\n\nexport default {\n  components: {\n    ChannelList,\n    ChannelForm\n  },\n  data() {\n    return {\n      channels: [\n        { id: 1, title: \"Telegram Bot\", code: \"TELEGRAM_BOT\", mailing: \"TELEGRAM_BOT\", disc: \"Тг бот\", status: true },\n        { id: 2, title: \"MTS\", code: \"MTS_GW\", mailing: \"SMS\", disc: \"\", status: true }\n      ],\n      isCreate: false\n    };\n  },\n  methods: {\n    handleCreateChannel(newChannel) {\n      this.channels.push(newChannel);\n      this.isCreate = false; // Скрыть форму создания после успешного создания канала\n    },\n    removeChannel(channel) {\n      this.channels = this.channels.filter(c => c.id !== channel.id);\n    },\n    removeSelectedChannel(selectedChannelIds) {\n      this.channels = this.channels.filter(channel => !selectedChannelIds.includes(channel.id));\n    },\n    editChannel(channel) {\n      this.isEdit = true;\n      this.currentChannel = channel;\n    },\n    updateChannel(updatedChannel) {\n      const index = this.channels.findIndex(channel => channel.id === updatedChannel.id);\n      if (index !== -1) {\n        this.channels.splice(index, 1, updatedChannel);\n      }\n      this.isEdit = false;\n      this.currentChannel = null;\n    }\n  }\n};\n</script>\n"],"mappings":";;;;;uBACEA,mBAAA,CAIM,cAHJC,YAAA,CAAuDC,sBAAA;IAA1CC,EAAE,EAAC;EAAiB;IAFrCC,OAAA,EAAAC,QAAA,CAEsC,MAAO,CAF7CC,gBAAA,CAEsC,SAAO,E;IAF7CC,CAAA;MAGwBC,KAAA,CAAAC,QAAQ,I,cAA5BC,YAAA,CAAkFC,uBAAA;IAHtFC,GAAA;IAGmCC,QAAQ,EAAEL,KAAA,CAAAK,QAAQ;IAAGC,QAAM,EAAEC,QAAA,CAAAC;sEAC5DN,YAAA,CAAqIO,uBAAA;IAJzIL,GAAA;IAIgCC,QAAQ,EAAEL,KAAA,CAAAK,QAAQ;IAAGK,QAAM,EAAEH,QAAA,CAAAI,aAAa;IAAGC,gBAAc,EAAEL,QAAA,CAAAM,qBAAqB;IAAGC,MAAI,EAAEP,QAAA,CAAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}