{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      error: ''\n    };\n  },\n  computed: {\n    ...mapGetters(['isAuthenticated'])\n  },\n  methods: {\n    ...mapActions(['login']),\n    async handleLogin() {\n      console.log('Attempting login with username:', this.username);\n      const user = {\n        username: this.username,\n        password: this.password\n      };\n      try {\n        const success = await this.login(user);\n        if (!success) {\n          this.error = 'Invalid username or password';\n          console.log('Login failed: Invalid username or password');\n        } else {\n          this.$router.push('/');\n          console.log('Login successful');\n        }\n      } catch (error) {\n        this.error = 'An error occurred during login';\n        console.log('An error occurred during login:', error);\n      }\n    }\n  },\n  mounted() {\n    if (this.isAuthenticated) {\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"names":["mapActions","mapGetters","data","username","password","error","computed","methods","handleLogin","console","log","user","success","login","$router","push","mounted","isAuthenticated"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\pages\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form class=\"login__form\" @submit.prevent=\"handleLogin\">\r\n      <input type=\"text\" v-model=\"username\" placeholder=\"Username\">\r\n      <input type=\"password\" v-model=\"password\" placeholder=\"Password\">\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n    <div v-if=\"error\">{{ error }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      error: ''\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isAuthenticated'])\r\n  },\r\n  methods: {\r\n    ...mapActions(['login']),\r\n    async handleLogin() {\r\n      console.log('Attempting login with username:', this.username);\r\n      const user = {\r\n        username: this.username,\r\n        password: this.password\r\n      };\r\n      try {\r\n        const success = await this.login(user);\r\n        if (!success) {\r\n          this.error = 'Invalid username or password';\r\n          console.log('Login failed: Invalid username or password');\r\n        } else {\r\n          this.$router.push('/');\r\n          console.log('Login successful');\r\n        }\r\n      } catch (error) {\r\n        this.error = 'An error occurred during login';\r\n        console.log('An error occurred during login:', error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.isAuthenticated) {\r\n      this.$router.push('/');\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AAYA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGL,UAAU,CAAC,CAAC,iBAAiB,CAAC;EACnC,CAAC;EACDM,OAAO,EAAE;IACP,GAAGP,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;IACxB,MAAMQ,WAAWA,CAAA,EAAG;MAClBC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAACP,QAAQ,CAAC;MAC7D,MAAMQ,IAAG,GAAI;QACXR,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MACD,IAAI;QACF,MAAMQ,OAAM,GAAI,MAAM,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;QACtC,IAAI,CAACC,OAAO,EAAE;UACZ,IAAI,CAACP,KAAI,GAAI,8BAA8B;UAC3CI,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;QAC3D,OAAO;UACL,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;UACtBN,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QACjC;MACF,EAAE,OAAOL,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,gCAAgC;QAC7CI,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEL,KAAK,CAAC;MACvD;IACF;EACF,CAAC;EACDW,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACC,eAAe,EAAE;MACxB,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}