{"ast":null,"code":"export default {\n  props: {\n    channel: {\n      type: Object,\n      default: () => ({\n        title: '',\n        code: '',\n        mailing: 'Telegram Bot',\n        disc: '',\n        json: '{ \"telegram_token\":\"\"}',\n        status: true\n      })\n    }\n  },\n  data() {\n    return {\n      editedChannel: {\n        ...this.channel\n      },\n      errors: {\n        title: '',\n        code: ''\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      // валидация и обновление данных\n      this.$emit('update', this.editedChannel);\n      this.resetForm();\n    },\n    resetForm() {\n      this.editedChannel = {\n        title: '',\n        code: '',\n        mailing: 'Telegram Bot',\n        disc: '',\n        json: '{ \"telegram_token\":\"\"}',\n        status: true\n      };\n    }\n  }\n};","map":{"version":3,"names":["props","channel","type","Object","default","title","code","mailing","disc","json","status","data","editedChannel","errors","methods","handleSubmit","$emit","resetForm"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelForm.vue"],"sourcesContent":["<template>\n  <form class=\"wrapper\" @submit.prevent=\"handleSubmit\" style=\"background-color: white;\">\n      <div class=\"wrapper__head\">\n        <h1>Создание канала отправки: </h1>\n        <span>Панель управления / Каналы отправки / Создание канала отправки </span>\n      </div>\n      <div class=\"name\">\n        Название \n        <my-input type=\"text\" class=\"input\" v-model=\"channel.title\"/>\n        <span v-if=\"errors.title\" class=\"error\">{{ errors.title }}</span>\n      </div>\n      <div class=\"uniqueCode\">\n        Уникальный код поля \n        <my-input type=\"text\" class=\"input\" v-model=\"channel.code\"/>\n        <span v-if=\"errors.code\" class=\"error\">{{ errors.code }}</span>\n      </div>\n      <div class=\"mailing\">\n        Обработчик \n        <select class=\"input\" v-model=\"channel.mailing\">\n          <option value=\"Telegram Bot\">Telegram Bot</option>\n          <option value=\"SMS\">SMS</option>\n        </select>\n      </div>\n      <div class=\"disc\">\n        Описание \n        <my-input type=\"text\" class=\"input\" v-model=\"channel.disc\"/>\n      </div>\n      <div class=\"json\">\n        Настройки JSON \n        <my-input type=\"text\" class=\"input\" v-model=\"channel.json\"/>\n      </div>\n      <div class=\"active\">\n        Канал активен?\n        <select class=\"input\" v-model=\"channel.status\">\n          <option :value=\"true\">Да</option>\n          <option :value=\"false\">Нет</option>\n        </select>\n      </div>\n      <button class=\"save__btn\">Сохранить</button>\n    </form>\n</template>\n\n<script>\nexport default {\n  props: {\n    channel: {\n      type: Object,\n      default: () => ({\n        title: '',\n        code: '',\n        mailing: 'Telegram Bot',\n        disc: '',\n        json: '{ \"telegram_token\":\"\"}',\n        status: true\n      })\n    }\n  },\n  data() {\n    return {\n      editedChannel: { ...this.channel },\n      errors: {\n        title: '',\n        code: ''\n      }\n    };\n  },\n  methods: {\n    handleSubmit() {\n      // валидация и обновление данных\n      this.$emit('update', this.editedChannel);\n      this.resetForm();\n    },\n    resetForm() {\n      this.editedChannel = {\n        title: '',\n        code: '',\n        mailing: 'Telegram Bot',\n        disc: '',\n        json: '{ \"telegram_token\":\"\"}',\n        status: true\n      };\n    }\n  }\n};\n</script>\n\n<style scoped>\n.save__btn {\n  display: block;\n  width: 100%;\n  background-color: #3386f3;\n  color: white;\n  border: none;\n  padding: 10px;\n  text-align: center;\n  text-decoration: none;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 10px;\n}\n\n.input {\n  margin-bottom: 10px;\n  padding: 8px;\n}\n\n.error {\n  color: red;\n  font-size: 14px;\n}\n</style>\n"],"mappings":"AA2CA,eAAe;EACbA,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO;QACdC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,cAAc;QACvBC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,wBAAwB;QAC9BC,MAAM,EAAE;MACV,CAAC;IACH;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;QAAE,GAAG,IAAI,CAACX;MAAQ,CAAC;MAClCY,MAAM,EAAE;QACNR,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE;MACR;IACF,CAAC;EACH,CAAC;EACDQ,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb;MACA,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACJ,aAAa,CAAC;MACxC,IAAI,CAACK,SAAS,CAAC,CAAC;IAClB,CAAC;IACDA,SAASA,CAAA,EAAG;MACV,IAAI,CAACL,aAAY,GAAI;QACnBP,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,cAAc;QACvBC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,wBAAwB;QAC9BC,MAAM,EAAE;MACV,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}