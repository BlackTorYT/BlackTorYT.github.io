{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    sub: {\n      type: Object,\n      default: () => ({\n        subscriber: '',\n        type: '',\n        channel: '',\n        status: true\n      })\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    subs: {\n      type: Array,\n      required: true\n    },\n    channels: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      localSub: {\n        ...this.sub\n      },\n      errors: {\n        subscriber: '',\n        type: ''\n      }\n    };\n  },\n  created() {\n    console.log('Channels in SubForm:', this.channels);\n  },\n  methods: {\n    handleSubmitSub() {\n      this.clearErrors();\n      if (!this.localSub.subscriber) {\n        this.errors.subscriber = 'Имя обязательно для заполнения';\n      }\n      if (!this.localSub.type) {\n        this.errors.type = 'Телефон обязателен для заполнения';\n      }\n      if (this.errors.subscriber || this.errors.type) {\n        return;\n      }\n      if (this.isEdit) {\n        this.$emit('update', this.localSub);\n      } else {\n        this.$emit('create', {\n          ...this.localSub,\n          id: this.getNextId()\n        });\n      }\n      this.$router.push('/subs');\n    },\n    clearErrors() {\n      this.errors = {\n        subscriber: '',\n        type: ''\n      };\n    },\n    getNextId() {\n      if (this.subs.length === 0) {\n        return 1;\n      }\n      const maxId = Math.max(...this.subs.map(sub => sub.id));\n      return maxId + 1;\n    }\n  }\n};","map":{"version":3,"names":["props","sub","type","Object","default","subscriber","channel","status","isEdit","Boolean","subs","Array","required","channels","data","localSub","errors","created","console","log","methods","handleSubmitSub","clearErrors","$emit","id","getNextId","$router","push","length","maxId","Math","max","map"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\SubForm.vue"],"sourcesContent":["<template>\r\n  <form class=\"wrapper\" @submit.prevent=\"handleSubmitSub\" style=\"background-color: white;\">\r\n    <div class=\"wrapper__head\">\r\n      <h1>{{ isEdit ? 'Редактирование' : 'Создание' }} канала отправки</h1>\r\n      <span>Панель управления / Каналы отправки / {{ isEdit ? 'Редактирование' : 'Создание' }} канала отправки </span>\r\n    </div>\r\n    <div class=\"subscriber\">\r\n      Подписчик на рассылку\r\n      <my-input type=\"text\" class=\"input\" v-model=\"localSub.subscriber\" />\r\n      <span v-if=\"errors.subscriber\" class=\"error\">{{ errors.subscriber }}</span>\r\n    </div>\r\n    <div class=\"type\">\r\n      Тип события\r\n      <my-input type=\"text\" class=\"input\" v-model=\"localSub.type\" />\r\n      <span v-if=\"errors.type\" class=\"error\">{{ errors.type }}</span>\r\n    </div>\r\n    <div class=\"channel\">\r\n      Способ уведомления\r\n      <select class=\"input\" v-model=\"localSub.channel\">\r\n        <option v-for=\"channel in channels\" :key=\"channel.id\" :value=\"channel.title\">\r\n          {{ channel.title }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <div class=\"active\">\r\n      Канал активен?\r\n      <select class=\"input\" v-model=\"localSub.status\">\r\n        <option :value=\"true\">Да</option>\r\n        <option :value=\"false\">Нет</option>\r\n      </select>\r\n    </div>\r\n    <button class=\"save__btn\">{{ isEdit ? 'Сохранить изменения' : 'Создать' }}</button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    sub: {\r\n      type: Object,\r\n      default: () => ({\r\n        subscriber: '',\r\n        type: '',\r\n        channel: '',\r\n        status: true\r\n      })\r\n    },\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    subs: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    channels: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      localSub: { ...this.sub },\r\n      errors: {\r\n        subscriber: '',\r\n        type: ''\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    console.log('Channels in SubForm:', this.channels);\r\n  },\r\n  methods: {\r\n    handleSubmitSub() {\r\n      this.clearErrors();\r\n\r\n      if (!this.localSub.subscriber) {\r\n        this.errors.subscriber = 'Имя обязательно для заполнения';\r\n      }\r\n\r\n      if (!this.localSub.type) {\r\n        this.errors.type = 'Телефон обязателен для заполнения';\r\n      }\r\n\r\n      if (this.errors.subscriber || this.errors.type) {\r\n        return;\r\n      }\r\n\r\n      if (this.isEdit) {\r\n        this.$emit('update', this.localSub);\r\n      } else {\r\n        this.$emit('create', { ...this.localSub, id: this.getNextId() });\r\n      }\r\n      this.$router.push('/subs');\r\n    },\r\n    clearErrors() {\r\n      this.errors = {\r\n        subscriber: '',\r\n        type: ''\r\n      };\r\n    },\r\n    getNextId() {\r\n      if (this.subs.length === 0) {\r\n        return 1;\r\n      }\r\n      const maxId = Math.max(...this.subs.map(sub => sub.id));\r\n      return maxId + 1;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.save__btn {\r\n  display: block;\r\n  width: 100%;\r\n  background-color: #3386f3;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\n.input {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n"],"mappings":";AAoCA,eAAe;EACbA,KAAK,EAAE;IACLC,GAAG,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO;QACdC,UAAU,EAAE,EAAE;QACdH,IAAI,EAAE,EAAE;QACRI,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDC,MAAM,EAAE;MACNN,IAAI,EAAEO,OAAO;MACbL,OAAO,EAAE;IACX,CAAC;IACDM,IAAI,EAAE;MACJR,IAAI,EAAES,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRX,IAAI,EAAES,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QAAE,GAAG,IAAI,CAACd;MAAI,CAAC;MACzBe,MAAM,EAAE;QACNX,UAAU,EAAE,EAAE;QACdH,IAAI,EAAE;MACR;IACF,CAAC;EACH,CAAC;EACDe,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACN,QAAQ,CAAC;EACpD,CAAC;EACDO,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACC,WAAW,CAAC,CAAC;MAElB,IAAI,CAAC,IAAI,CAACP,QAAQ,CAACV,UAAU,EAAE;QAC7B,IAAI,CAACW,MAAM,CAACX,UAAS,GAAI,gCAAgC;MAC3D;MAEA,IAAI,CAAC,IAAI,CAACU,QAAQ,CAACb,IAAI,EAAE;QACvB,IAAI,CAACc,MAAM,CAACd,IAAG,GAAI,mCAAmC;MACxD;MAEA,IAAI,IAAI,CAACc,MAAM,CAACX,UAAS,IAAK,IAAI,CAACW,MAAM,CAACd,IAAI,EAAE;QAC9C;MACF;MAEA,IAAI,IAAI,CAACM,MAAM,EAAE;QACf,IAAI,CAACe,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACR,QAAQ,CAAC;MACrC,OAAO;QACL,IAAI,CAACQ,KAAK,CAAC,QAAQ,EAAE;UAAE,GAAG,IAAI,CAACR,QAAQ;UAAES,EAAE,EAAE,IAAI,CAACC,SAAS,CAAC;QAAE,CAAC,CAAC;MAClE;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;IAC5B,CAAC;IACDL,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACN,MAAK,GAAI;QACZX,UAAU,EAAE,EAAE;QACdH,IAAI,EAAE;MACR,CAAC;IACH,CAAC;IACDuB,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACf,IAAI,CAACkB,MAAK,KAAM,CAAC,EAAE;QAC1B,OAAO,CAAC;MACV;MACA,MAAMC,KAAI,GAAIC,IAAI,CAACC,GAAG,CAAC,GAAG,IAAI,CAACrB,IAAI,CAACsB,GAAG,CAAC/B,GAAE,IAAKA,GAAG,CAACuB,EAAE,CAAC,CAAC;MACvD,OAAOK,KAAI,GAAI,CAAC;IAClB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}