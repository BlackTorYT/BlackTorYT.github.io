{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ChannelForm from \"@/components/ChannelForm.vue\";\nexport default {\n  components: {\n    ChannelForm\n  },\n  props: {\n    channels: {\n      type: Array,\n      required: true\n    },\n    channelId: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    channel() {\n      return this.channels.find(channel => channel.id === parseInt(this.channelId));\n    }\n  },\n  methods: {\n    handleUpdateChannel(updatedChannel) {\n      // Добавьте логику обновления канала в массиве channels\n      const index = this.channels.findIndex(channel => channel.id === updatedChannel.id);\n      if (index !== -1) {\n        this.channels.splice(index, 1, updatedChannel);\n      }\n      this.$router.push('/channels'); // Перенаправление на страницу списка каналов после обновления\n    }\n  }\n};","map":{"version":3,"names":["ChannelForm","components","props","channels","type","Array","required","channelId","Number","computed","channel","find","id","parseInt","methods","handleUpdateChannel","updatedChannel","index","findIndex","splice","$router","push"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\pages\\ChannelEditPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Редактирование канала {{ channel.id }}</h1>\r\n    <channel-form :channels=\"channels\" :channel=\"channel\" @update=\"handleUpdateChannel\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ChannelForm from \"@/components/ChannelForm.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    ChannelForm\r\n  },\r\n  props: {\r\n    channels: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    channelId: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    channel() {\r\n      return this.channels.find(channel => channel.id === parseInt(this.channelId));\r\n    }\r\n  },\r\n  methods: {\r\n    handleUpdateChannel(updatedChannel) {\r\n      // Добавьте логику обновления канала в массиве channels\r\n      const index = this.channels.findIndex(channel => channel.id === updatedChannel.id);\r\n      if (index !== -1) {\r\n        this.channels.splice(index, 1, updatedChannel);\r\n      }\r\n      this.$router.push('/channels'); // Перенаправление на страницу списка каналов после обновления\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* добавьте стили, если нужно */\r\n</style>\r\n"],"mappings":";AAQA,OAAOA,WAAU,MAAO,8BAA8B;AAEtD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,SAAS,EAAE;MACTH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ;EACF,CAAC;EACDG,QAAQ,EAAE;IACRC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACP,QAAQ,CAACQ,IAAI,CAACD,OAAM,IAAKA,OAAO,CAACE,EAAC,KAAMC,QAAQ,CAAC,IAAI,CAACN,SAAS,CAAC,CAAC;IAC/E;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,mBAAmBA,CAACC,cAAc,EAAE;MAClC;MACA,MAAMC,KAAI,GAAI,IAAI,CAACd,QAAQ,CAACe,SAAS,CAACR,OAAM,IAAKA,OAAO,CAACE,EAAC,KAAMI,cAAc,CAACJ,EAAE,CAAC;MAClF,IAAIK,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAACd,QAAQ,CAACgB,MAAM,CAACF,KAAK,EAAE,CAAC,EAAED,cAAc,CAAC;MAChD;MACA,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC,EAAE;IAClC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}