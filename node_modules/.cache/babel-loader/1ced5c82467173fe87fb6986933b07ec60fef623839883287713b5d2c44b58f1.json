{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Создать канал\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_channel_list = _resolveComponent(\"channel-list\");\n  const _component_channel_edit_page = _resolveComponent(\"channel-edit-page\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_router_link, {\n    to: \"/channels/create\"\n  }, {\n    default: _withCtx(() => [_hoisted_1]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_channel_list, {\n    channels: _ctx.channels,\n    onRemove: _ctx.removeChannel,\n    onRemoveSelected: _ctx.removeSelectedChannel\n  }, null, 8 /* PROPS */, [\"channels\", \"onRemove\", \"onRemoveSelected\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.channels, channel => {\n    return _openBlock(), _createBlock(_component_channel_edit_page, {\n      key: channel.id,\n      channel: channel,\n      onUpdateChannel: _cache[0] || (_cache[0] = $event => $options.handleUpdateChannel($event))\n    }, null, 8 /* PROPS */, [\"channel\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_createVNode","_component_router_link","to","default","_withCtx","_hoisted_1","_","_component_channel_list","channels","_ctx","onRemove","removeChannel","onRemoveSelected","removeSelectedChannel","_Fragment","_renderList","channel","_createBlock","_component_channel_edit_page","key","id","onUpdateChannel","_cache","$event","$options","handleUpdateChannel"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\pages\\ChannelPage.vue"],"sourcesContent":["<template>\n  <div>\n    <router-link to=\"/channels/create\">\n      <button>Создать канал</button>\n    </router-link>\n    <channel-list :channels=\"channels\" @remove=\"removeChannel\" @removeSelected=\"removeSelectedChannel\" />\n    <channel-edit-page v-for=\"channel in channels\" :key=\"channel.id\" :channel=\"channel\" @updateChannel=\"handleUpdateChannel($event)\" />\n  </div>\n</template>\n\n<script>\nimport ChannelEditPage from \"@/pages/ChannelEditPage.vue\";\n\nexport default {\n  components: {\n    ChannelEditPage\n  },\n  methods: {\n    handleUpdateChannel(updatedChannel) {\n      const index = this.channels.findIndex(c => c.id === updatedChannel.id);\n      if (index !== -1) {\n        this.$set(this.channels, index, updatedChannel); // используйте $set для изменения элемента массива\n      }\n    }\n  }\n};\n</script>\n\n\n<style>\n\n\n.header {\n  height: 56px;\n  padding: 16px;\n  background-color: white;\n}\n\n.nav__list {\n  display: flex;\n  justify-content: space-between;\n}\n\n.nav__item__notification {\n  display: flex;\n  justify-content: space-between;\n  width: 230px;\n}\n\n#nav__item_left {\n  width: 200px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.exit__img {\n  margin-right: 10px;\n}\n\n.nav__item__exit {\n  width: 200px;\n}\n\n\n\n\n</style>\n"],"mappings":";gCAGMA,mBAAA,CAA8B,gBAAtB,eAAa;;;;;uBAFzBC,mBAAA,CAMM,cALJC,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC;EAAkB;IAFtCC,OAAA,EAAAC,QAAA,CAGM,MAA8B,CAA9BC,UAA8B,C;IAHpCC,CAAA;MAKIN,YAAA,CAAqGO,uBAAA;IAAtFC,QAAQ,EAAEC,IAAA,CAAAD,QAAQ;IAAGE,QAAM,EAAED,IAAA,CAAAE,aAAa;IAAGC,gBAAc,EAAEH,IAAA,CAAAI;4FAC5Ed,mBAAA,CAAmIe,SAAA,QANvIC,WAAA,CAMyCN,IAAA,CAAAD,QAAQ,EAAnBQ,OAAO;yBAAjCC,YAAA,CAAmIC,4BAAA;MAAnFC,GAAG,EAAEH,OAAO,CAACI,EAAE;MAAGJ,OAAO,EAAEA,OAAO;MAAGK,eAAa,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,mBAAmB,CAACF,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}