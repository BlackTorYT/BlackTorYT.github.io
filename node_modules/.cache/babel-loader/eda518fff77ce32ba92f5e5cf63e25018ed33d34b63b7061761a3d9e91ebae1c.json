{"ast":null,"code":"// Компонент для отдельного канала\nimport MyButton from \"@/components/UI/MyButton.vue\";\nexport default {\n  components: {\n    MyButton\n  },\n  props: {\n    subscriber: {\n      type: Object,\n      required: true\n    },\n    selected: {\n      type: Boolean,\n      required: true\n    }\n  },\n  computed: {\n    statusText() {\n      return this.subscriber.status ? 'Включен' : 'Отключен';\n    }\n  },\n  methods: {\n    toggle() {\n      this.$emit('toggle', this.subscriber.id);\n    }\n  }\n};","map":{"version":3,"names":["MyButton","components","props","subscriber","type","Object","required","selected","Boolean","computed","statusText","status","methods","toggle","$emit","id"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\SubscriberItem.vue"],"sourcesContent":["<template>\r\n  <tbody>\r\n    <tr class=\"subscriber\">\r\n      <td><input type=\"checkbox\" :checked=\"selected\" @change=\"toggle\"></td>\r\n      <td>{{ subscriber.id }}</td>\r\n      <td>{{ subscriber.name }}</td>\r\n      <td>{{ subscriber.phone }}</td>\r\n      <td>{{ subscriber.tg }}</td>\r\n      <!-- <td>{{ subscriber.disc }}</td> -->\r\n      <td>{{ statusText }}</td>\r\n      <td>\r\n        <router-link :to=\"'/subscribers/edit/' + subscriber.id\">\r\n          <button>Изменить</button>\r\n        </router-link>\r\n        <div class=\"subscriber__delete\" @click=\"$emit('remove', subscriber)\"><my-button><img src=\"../assets/trash.png\" alt=\"\">Удалить</my-button></div>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</template>\r\n\r\n<script>\r\n// Компонент для отдельного канала\r\nimport MyButton from \"@/components/UI/MyButton.vue\";\r\nexport default {\r\ncomponents: {\r\nMyButton\r\n},\r\nprops: {\r\nsubscriber: {\r\ntype: Object,\r\nrequired: true\r\n},\r\nselected: {\r\ntype: Boolean,\r\nrequired: true\r\n} \r\n},\r\ncomputed: {\r\nstatusText() {\r\nreturn this.subscriber.status ? 'Включен' : 'Отключен';\r\n}\r\n},\r\nmethods: {\r\ntoggle() {\r\nthis.$emit('toggle', this.subscriber.id);\r\n}\r\n}\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"AAqBA;AACA,OAAOA,QAAO,MAAO,8BAA8B;AACnD,eAAe;EACfC,UAAU,EAAE;IACZD;EACA,CAAC;EACDE,KAAK,EAAE;IACPC,UAAU,EAAE;MACZC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACV,CAAC;IACDC,QAAQ,EAAE;MACVH,IAAI,EAAEI,OAAO;MACbF,QAAQ,EAAE;IACV;EACA,CAAC;EACDG,QAAQ,EAAE;IACVC,UAAUA,CAAA,EAAG;MACb,OAAO,IAAI,CAACP,UAAU,CAACQ,MAAK,GAAI,SAAQ,GAAI,UAAU;IACtD;EACA,CAAC;EACDC,OAAO,EAAE;IACTC,MAAMA,CAAA,EAAG;MACT,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACX,UAAU,CAACY,EAAE,CAAC;IACxC;EACA;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}