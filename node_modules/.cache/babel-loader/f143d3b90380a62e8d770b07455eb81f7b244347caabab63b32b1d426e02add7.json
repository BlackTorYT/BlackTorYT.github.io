{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    channelId: {\n      type: String,\n      required: true\n    },\n    channels: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      editedChannel: {\n        id: '',\n        title: '',\n        code: '',\n        mailing: '',\n        disc: '',\n        json: '',\n        status: true\n      }\n    };\n  },\n  computed: {\n    // Находим канал по ID\n    channel() {\n      return this.channels.find(channel => channel.id.toString() === this.channelId);\n    }\n  },\n  watch: {\n    // Обновляем данные при изменении канала\n    channel: {\n      immediate: true,\n      handler(newVal) {\n        if (newVal) {\n          this.editedChannel = {\n            ...newVal\n          };\n        }\n      }\n    }\n  },\n  methods: {\n    updateChannel() {\n      // Предположим, что у вас есть метод для обновления канала\n      // Ваш код здесь для обновления канала\n      console.log('Updated channel:', this.editedChannel);\n      // После обновления перенаправляем на страницу с каналами\n      this.$router.push('/channels');\n    }\n  }\n};","map":{"version":3,"names":["props","channelId","type","String","required","channels","Array","data","editedChannel","id","title","code","mailing","disc","json","status","computed","channel","find","toString","watch","immediate","handler","newVal","methods","updateChannel","console","log","$router","push"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\pages\\ChannelEditPage.vue"],"sourcesContent":["<!-- ChannelEditPage.vue -->\r\n<template>\r\n  <div>\r\n    <h1>Редактирование канала</h1>\r\n    <form class=\"wrapper\" @submit.prevent=\"updateChannel\">\r\n      <div class=\"name\">\r\n        Название\r\n        <my-input type=\"text\" class=\"input\" v-model=\"editedChannel.title\" />\r\n      </div>\r\n      <div class=\"uniqueCode\">\r\n        Уникальный код поля\r\n        <my-input type=\"text\" class=\"input\" v-model=\"editedChannel.code\" />\r\n      </div>\r\n      <div class=\"mailing\">\r\n        Обработчик\r\n        <select class=\"input\" v-model=\"editedChannel.mailing\">\r\n          <option value=\"Telegram Bot\">Telegram Bot</option>\r\n          <option value=\"SMS\">SMS</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"disc\">\r\n        Описание\r\n        <my-input type=\"text\" class=\"input\" v-model=\"editedChannel.disc\" />\r\n      </div>\r\n      <div class=\"json\">\r\n        Настройки JSON\r\n        <my-input type=\"text\" class=\"input\" v-model=\"editedChannel.json\" />\r\n      </div>\r\n      <div class=\"active\">\r\n        Канал активен?\r\n        <select class=\"input\" v-model=\"editedChannel.status\">\r\n          <option :value=\"true\">Да</option>\r\n          <option :value=\"false\">Нет</option>\r\n        </select>\r\n      </div>\r\n      <button class=\"save__btn\">Сохранить</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    channelId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    channels: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      editedChannel: {\r\n        id: '',\r\n        title: '',\r\n        code: '',\r\n        mailing: '',\r\n        disc: '',\r\n        json: '',\r\n        status: true,\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    // Находим канал по ID\r\n    channel() {\r\n      return this.channels.find(channel => channel.id.toString() === this.channelId);\r\n    },\r\n  },\r\n  watch: {\r\n    // Обновляем данные при изменении канала\r\n    channel: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        if (newVal) {\r\n          this.editedChannel = { ...newVal };\r\n        }\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    updateChannel() {\r\n      // Предположим, что у вас есть метод для обновления канала\r\n      // Ваш код здесь для обновления канала\r\n      console.log('Updated channel:', this.editedChannel);\r\n      // После обновления перенаправляем на страницу с каналами\r\n      this.$router.push('/channels');\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";AAyCA,eAAe;EACbA,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,KAAK;MACXF,QAAQ,EAAE;IACZ;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;QACbC,EAAE,EAAE,EAAE;QACNC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE;MACV;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR;IACAC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACZ,QAAQ,CAACa,IAAI,CAACD,OAAM,IAAKA,OAAO,CAACR,EAAE,CAACU,QAAQ,CAAC,MAAM,IAAI,CAAClB,SAAS,CAAC;IAChF;EACF,CAAC;EACDmB,KAAK,EAAE;IACL;IACAH,OAAO,EAAE;MACPI,SAAS,EAAE,IAAI;MACfC,OAAOA,CAACC,MAAM,EAAE;QACd,IAAIA,MAAM,EAAE;UACV,IAAI,CAACf,aAAY,GAAI;YAAE,GAAGe;UAAO,CAAC;QACpC;MACF;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd;MACA;MACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACnB,aAAa,CAAC;MACnD;MACA,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}