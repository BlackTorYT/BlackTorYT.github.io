{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Редактирование канала\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"name\"\n};\nconst _hoisted_3 = {\n  class: \"uniqueCode\"\n};\nconst _hoisted_4 = {\n  class: \"mailing\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Telegram Bot\"\n}, \"Telegram Bot\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"SMS\"\n}, \"SMS\", -1 /* HOISTED */);\nconst _hoisted_7 = [_hoisted_5, _hoisted_6];\nconst _hoisted_8 = {\n  class: \"disc\"\n};\nconst _hoisted_9 = {\n  class: \"json\"\n};\nconst _hoisted_10 = {\n  class: \"active\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: true\n}, \"Да\", -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: false\n}, \"Нет\", -1 /* HOISTED */);\nconst _hoisted_13 = [_hoisted_11, _hoisted_12];\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"save__btn\"\n}, \"Сохранить\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    class: \"wrapper\",\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.updateChannel && $options.updateChannel(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_createTextVNode(\" Название \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.editedChannel.title,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editedChannel.title = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_3, [_createTextVNode(\" Уникальный код поля \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.editedChannel.code,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.editedChannel.code = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_4, [_createTextVNode(\" Обработчик \"), _withDirectives(_createElementVNode(\"select\", {\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.editedChannel.mailing = $event)\n  }, [..._hoisted_7], 512 /* NEED_PATCH */), [[_vModelSelect, $data.editedChannel.mailing]])]), _createElementVNode(\"div\", _hoisted_8, [_createTextVNode(\" Описание \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.editedChannel.disc,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.editedChannel.disc = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_9, [_createTextVNode(\" Настройки JSON \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.editedChannel.json,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.editedChannel.json = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_10, [_createTextVNode(\" Канал активен? \"), _withDirectives(_createElementVNode(\"select\", {\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.editedChannel.status = $event)\n  }, [..._hoisted_13], 512 /* NEED_PATCH */), [[_vModelSelect, $data.editedChannel.status]])]), _hoisted_14], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","class","value","_hoisted_5","_hoisted_6","_hoisted_11","_hoisted_12","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","updateChannel","_hoisted_2","_createTextVNode","_createVNode","_component_my_input","type","modelValue","$data","editedChannel","title","$event","_hoisted_3","code","_hoisted_4","mailing","_hoisted_7","_hoisted_8","disc","_hoisted_9","json","_hoisted_10","status","_hoisted_13","_hoisted_14"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\pages\\ChannelEditPage.vue"],"sourcesContent":["<!-- ChannelEditPage.vue -->\r\n<template>\r\n  <div>\r\n    <h1>Редактирование канала</h1>\r\n    <form class=\"wrapper\" @submit.prevent=\"updateChannel\">\r\n      <div class=\"name\">\r\n        Название\r\n        <my-input type=\"text\" class=\"input\" v-model=\"editedChannel.title\" />\r\n      </div>\r\n      <div class=\"uniqueCode\">\r\n        Уникальный код поля\r\n        <my-input type=\"text\" class=\"input\" v-model=\"editedChannel.code\" />\r\n      </div>\r\n      <div class=\"mailing\">\r\n        Обработчик\r\n        <select class=\"input\" v-model=\"editedChannel.mailing\">\r\n          <option value=\"Telegram Bot\">Telegram Bot</option>\r\n          <option value=\"SMS\">SMS</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"disc\">\r\n        Описание\r\n        <my-input type=\"text\" class=\"input\" v-model=\"editedChannel.disc\" />\r\n      </div>\r\n      <div class=\"json\">\r\n        Настройки JSON\r\n        <my-input type=\"text\" class=\"input\" v-model=\"editedChannel.json\" />\r\n      </div>\r\n      <div class=\"active\">\r\n        Канал активен?\r\n        <select class=\"input\" v-model=\"editedChannel.status\">\r\n          <option :value=\"true\">Да</option>\r\n          <option :value=\"false\">Нет</option>\r\n        </select>\r\n      </div>\r\n      <button class=\"save__btn\">Сохранить</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    channelId: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    channels: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      editedChannel: {\r\n        id: '',\r\n        title: '',\r\n        code: '',\r\n        mailing: '',\r\n        disc: '',\r\n        json: '',\r\n        status: true,\r\n      },\r\n    };\r\n  },\r\n  computed: {\r\n    // Находим канал по ID\r\n    channel() {\r\n      return this.channels.find(channel => channel.id.toString() === this.channelId);\r\n    },\r\n  },\r\n  watch: {\r\n    // Обновляем данные при изменении канала\r\n    channel: {\r\n      immediate: true,\r\n      handler(newVal) {\r\n        if (newVal) {\r\n          this.editedChannel = { ...newVal };\r\n        }\r\n      },\r\n    },\r\n  },\r\n  methods: {\r\n    updateChannel() {\r\n      // Предположим, что у вас есть метод для обновления канала\r\n      // Ваш код здесь для обновления канала\r\n      console.log('Updated channel:', this.editedChannel);\r\n      // После обновления перенаправляем на страницу с каналами\r\n      this.$router.push('/channels');\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}