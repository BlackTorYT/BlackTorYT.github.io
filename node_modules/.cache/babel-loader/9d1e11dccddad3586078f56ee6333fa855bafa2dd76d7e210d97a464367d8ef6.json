{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nimport _imports_0 from './assets/burger.png';\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<header class=\\\"header\\\"><div class=\\\"header__nav\\\"><nav class=\\\"nav\\\"><ul class=\\\"nav__list\\\"><li class=\\\"nav__item\\\" id=\\\"nav__item_left\\\"><img class=\\\"burger\\\" src=\\\"\" + _imports_0 + \"\\\" alt=\\\"menu\\\">Панель управления</li><div class=\\\"nav__item__notification\\\"><li class=\\\"nav__item\\\"><img class=\\\"notification__img\\\" src=\\\"\" + _imports_0 + \"\\\" alt=\\\"notification\\\"></li><li class=\\\"nav__item\\\" id=\\\"nav__item__exit\\\"><img class=\\\"exit__img\\\" src=\\\"\" + _imports_0 + \"\\\" alt=\\\"exit\\\">Выйти из аккаунта</li></div></ul></nav></div></header>\", 1);\nconst _hoisted_3 = {\n  class: \"wrapper\",\n  style: {\n    \"background-color\": \"white\"\n  }\n};\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"wrapper__head\\\"><h1>Создание канала отправки: </h1><span>Панель управления / Каналы отправки / Создание канала отправки </span></div><div class=\\\"name\\\">Название <input type=\\\"text\\\" class=\\\"input\\\"></div><div class=\\\"uniqueCode\\\">Уникальный код поля <input type=\\\"text\\\" class=\\\"input\\\"></div><div class=\\\"handler\\\">Обработчик <input type=\\\"text\\\" class=\\\"input\\\"></div><div class=\\\"disc\\\">Описание <input type=\\\"text\\\" class=\\\"input\\\"></div><div class=\\\"json\\\">Настройки JSON <input type=\\\"text\\\" class=\\\"input\\\"></div><div class=\\\"active\\\">Канал активен? <input type=\\\"text\\\" class=\\\"input\\\"></div>\", 7);\nconst _hoisted_11 = {\n  class: \"wrapper__channels\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Каналы отправки уведомлений\", -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__checkbox\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\"\n})]), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__id\"\n}, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__name\"\n}, \"Название\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__code\"\n}, \"Код\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__mailing\"\n}, \"Шлюз рассылки\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__disc\"\n}, \"Описание\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__status\"\n}, \"Статус\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"channel__action\"\n}, \"Действия\")])], -1 /* HOISTED */);\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"checkbox\"\n})], -1 /* HOISTED */);\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"td\", null, [/*#__PURE__*/_createElementVNode(\"div\", null, \"Изменить\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Удалить\")], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"button\", {\n    class: \"save__btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.createChannel && _ctx.createChannel(...args))\n  }, \"Сохранить\")]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"table\", null, [_hoisted_13, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.channels, channel => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: channel.id,\n      class: \"channel\"\n    }, [_hoisted_14, _createElementVNode(\"td\", null, _toDisplayString(channel.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.code), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.mailing), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.disc), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(channel.status), 1 /* TEXT */), _hoisted_15]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["_imports_0","id","_createStaticVNode","class","style","_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","_ctx","createChannel","_hoisted_11","_hoisted_12","_hoisted_13","_Fragment","_renderList","$data","channels","channel","key","_hoisted_14","_toDisplayString","title","code","mailing","disc","status","_hoisted_15"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <header class=\"header\">\n      <div class=\"header__nav\">\n        <nav class=\"nav\">\n          <ul class=\"nav__list\">\n            <li class=\"nav__item\" id=\"nav__item_left\"><img class=\"burger\" src=\"./assets/burger.png\" alt=\"menu\">Панель управления</li>\n            <div class=\"nav__item__notification\">\n              <li class=\"nav__item\"><img class=\"notification__img\" src=\"./assets/burger.png\" alt=\"notification\"></li>\n              <li class=\"nav__item\" id=\"nav__item__exit\"><img class=\"exit__img\" src=\"./assets/burger.png\" alt=\"exit\">Выйти из аккаунта</li>\n            </div>\n          </ul>\n        </nav>\n      </div>\n    </header>\n    <div class=\"wrapper\" style=\"background-color: white;\">\n      <div class=\"wrapper__head\" >\n        <h1>Создание канала отправки: </h1>\n        <span>Панель управления / Каналы отправки / Создание канала отправки </span>\n      </div>\n      <div class=\"name\">Название <input type=\"text\" class=\"input\"></div>\n      <div class=\"uniqueCode\">Уникальный код поля <input type=\"text\" class=\"input\"></div>\n      <div class=\"handler\">Обработчик <input type=\"text\" class=\"input\"></div>\n      <div class=\"disc\">Описание <input type=\"text\" class=\"input\"></div>\n      <div class=\"json\">Настройки JSON <input type=\"text\" class=\"input\"></div>\n      <div class=\"active\">Канал активен? <input type=\"text\" class=\"input\"></div>\n      <button class=\"save__btn\" @click=\"createChannel\">Сохранить</button>\n    </div>\n\n    <div class=\"wrapper__channels\" >\n      <h1>Каналы отправки уведомлений</h1>\n\n      <table>\n        <thead>\n          <tr>\n            <th class=\"channel__checkbox\"><input type=\"checkbox\"></th>\n            <th class=\"channel__id\">ID</th>\n            <th class=\"channel__name\">Название</th>\n            <th class=\"channel__code\">Код</th>\n            <th class=\"channel__mailing\">Шлюз рассылки</th>\n            <th class=\"channel__disc\">Описание</th>\n            <th class=\"channel__status\">Статус</th>\n            <th class=\"channel__action\">Действия</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"channel in channels\" :key=\"channel.id\" class=\"channel\">\n            <td><input type=\"checkbox\"></td>\n            <td>{{ channel.id }}</td>\n            <td>{{ channel.title }}</td>\n            <td>{{ channel.code }}</td>\n            <td>{{ channel.mailing }}</td>\n            <td>{{ channel.disc }}</td>\n            <td>{{ channel.status }}</td>\n            <td>\n              <div>Изменить</div>\n              <div>Удалить</div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      channels: [\n        {id: 1, title: \"Telegram Bot\", code: \"TELEGRAM_BOT\", mailing: \"TELEGRAM_BOT\", disc: \"Тг бот\", status: true},\n        {id: 2, title: \"MTS\", code: \"MTS_GW\", mailing: \"SMS\", disc: \"\", status: true}\n      ],\n      title: '',\n      code: '',\n      mailing: '',\n      disc: '',\n      status: ''\n    }\n  },\n  methods() {\n    \n  }\n};\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nul, ul li {\n    list-style: none;\n}\n\nimg {\n  height: 14px;\n  width: 14px;\n}\n\nbody {\n  background-color: rgb(224, 224, 224)\n}\n\ntable {\n  width: 650px;\n  border-top: 7px solid rgb(218, 218, 218);\n  border-collapse: collapse;\n  text-align: center;\n  margin-bottom: 20px;\n  border: 1px solid #dddddd;\n}\n\ntd {\n  text-align: left;\n\tpadding: 10px;\n\tborder: 1px solid rgb(218, 218, 218);\n}\n th {\n  text-align: center;\n  padding: 10px;\n\tborder: 1px solid rgb(218, 218, 218);\n }\n\n.header {\n  height: 56px;\n  padding: 16px;\n  background-color: white;\n}\n\n.nav__list {\n  display: flex;\n  justify-content: space-between;\n}\n\n.nav__item__notification {\n  display: flex;\n  justify-content: space-between;\n  width: 230px;\n}\n\n#nav__item_left {\n  width: 200px;\n  display: flex;\n  justify-content: space-between;\n}\n\n.exit__img {\n  margin-right: 10px;\n}\n\n.nav__item__exit{\n  width: 200px;\n}\n\n.wrapper__channels {\n  background-color: white;\n}\n\n.channel__id {\n  width: 39px;\n}\n\n.input {\n  width: 100%;\n  border: 1px solid rgb(218, 218, 218);\n\n}\n</style>\n"],"mappings":";OAM0EA,UAAyB;;EAL5FC,EAAE,EAAC;AAAK;gCADfC,kBAAA,+KAAAF,UAAA,oJAAAA,UAAA,mHAAAA,UAAA;;EAeSG,KAAK,EAAC,SAAS;EAACC,KAAgC,EAAhC;IAAA;EAAA;;gCAfzBF,kBAAA;;EA6BSC,KAAK,EAAC;AAAmB;iCAC5BE,mBAAA,CAAoC,YAAhC,6BAA2B;iCAG7BA,mBAAA,CAWQ,gB,aAVNA,mBAAA,CASK,a,aARHA,mBAAA,CAA0D;EAAtDF,KAAK,EAAC;AAAmB,I,aAACE,mBAAA,CAAuB;EAAhBC,IAAI,EAAC;AAAU,G,gBACpDD,mBAAA,CAA+B;EAA3BF,KAAK,EAAC;AAAa,GAAC,IAAE,G,aAC1BE,mBAAA,CAAuC;EAAnCF,KAAK,EAAC;AAAe,GAAC,UAAQ,G,aAClCE,mBAAA,CAAkC;EAA9BF,KAAK,EAAC;AAAe,GAAC,KAAG,G,aAC7BE,mBAAA,CAA+C;EAA3CF,KAAK,EAAC;AAAkB,GAAC,eAAa,G,aAC1CE,mBAAA,CAAuC;EAAnCF,KAAK,EAAC;AAAe,GAAC,UAAQ,G,aAClCE,mBAAA,CAAuC;EAAnCF,KAAK,EAAC;AAAiB,GAAC,QAAM,G,aAClCE,mBAAA,CAAyC;EAArCF,KAAK,EAAC;AAAiB,GAAC,UAAQ,E;iCAKpCE,mBAAA,CAAgC,a,aAA5BA,mBAAA,CAAuB;EAAhBC,IAAI,EAAC;AAAU,G;iCAO1BD,mBAAA,CAGK,a,aAFHA,mBAAA,CAAmB,aAAd,UAAQ,G,aACbA,mBAAA,CAAkB,aAAb,SAAO,E;;uBAvDxBE,mBAAA,CA6DM,OA7DNC,UA6DM,GA5DJC,UAYS,EACTJ,mBAAA,CAYM,OAZNK,UAYM,GAXJC,UAGM,EAONN,mBAAA,CAAmE;IAA3DF,KAAK,EAAC,WAAW;IAAES,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,aAAA,IAAAD,IAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,WAAS,E,GAG5DT,mBAAA,CAgCM,OAhCNY,WAgCM,GA/BJC,WAAoC,EAEpCb,mBAAA,CA4BQ,gBA3BNc,WAWQ,EACRd,mBAAA,CAcQ,iB,kBAbNE,mBAAA,CAYKa,SAAA,QA1DfC,WAAA,CA8CgCC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAlBjB,mBAAA,CAYK;MAZ4BkB,GAAG,EAAED,OAAO,CAACvB,EAAE;MAAEE,KAAK,EAAC;QACtDuB,WAAgC,EAChCrB,mBAAA,CAAyB,YAAAsB,gBAAA,CAAlBH,OAAO,CAACvB,EAAE,kBACjBI,mBAAA,CAA4B,YAAAsB,gBAAA,CAArBH,OAAO,CAACI,KAAK,kBACpBvB,mBAAA,CAA2B,YAAAsB,gBAAA,CAApBH,OAAO,CAACK,IAAI,kBACnBxB,mBAAA,CAA8B,YAAAsB,gBAAA,CAAvBH,OAAO,CAACM,OAAO,kBACtBzB,mBAAA,CAA2B,YAAAsB,gBAAA,CAApBH,OAAO,CAACO,IAAI,kBACnB1B,mBAAA,CAA6B,YAAAsB,gBAAA,CAAtBH,OAAO,CAACQ,MAAM,kBACrBC,WAGK,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}