{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2a6176e7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"wrapper__head\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Создание канала отправки: \"), /*#__PURE__*/_createElementVNode(\"span\", null, \"Панель управления / Каналы отправки / Создание канала отправки \")], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"name\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  class: \"uniqueCode\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_6 = {\n  class: \"mailing\"\n};\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Telegram Bot\"\n}, \"Telegram Bot\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"SMS\"\n}, \"SMS\", -1 /* HOISTED */));\nconst _hoisted_10 = [_hoisted_8, _hoisted_9];\nconst _hoisted_11 = {\n  class: \"disc\"\n};\nconst _hoisted_12 = {\n  class: \"json\"\n};\nconst _hoisted_13 = {\n  class: \"active\"\n};\nconst _hoisted_14 = [\"value\"];\nconst _hoisted_15 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: true\n}, \"Да\", -1 /* HOISTED */));\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: false\n}, \"Нет\", -1 /* HOISTED */));\nconst _hoisted_17 = [_hoisted_15, _hoisted_16];\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"save__btn\"\n}, \"Сохранить\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    class: \"wrapper\",\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.createChannel && $options.createChannel(...args), [\"prevent\"])),\n    style: {\n      \"background-color\": \"white\"\n    }\n  }, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createTextVNode(\" Название \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    value: $data.channel.title\n  }, null, 8 /* PROPS */, [\"value\"]), $data.errors.title ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($data.errors.title), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [_createTextVNode(\" Уникальный код поля \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    value: $data.channel.code\n  }, null, 8 /* PROPS */, [\"value\"]), $data.errors.code ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString($data.errors.code), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [_createTextVNode(\" Обработчик \"), _createElementVNode(\"select\", {\n    class: \"input\",\n    value: $data.channel.mailing\n  }, [..._hoisted_10], 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"div\", _hoisted_11, [_createTextVNode(\" Описание \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    value: $data.channel.disc\n  }, null, 8 /* PROPS */, [\"value\"])]), _createElementVNode(\"div\", _hoisted_12, [_createTextVNode(\" Настройки JSON \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    value: $data.channel.json\n  }, null, 8 /* PROPS */, [\"value\"])]), _createElementVNode(\"div\", _hoisted_13, [_createTextVNode(\" Канал активен? \"), _createElementVNode(\"select\", {\n    class: \"input\",\n    value: $data.channel.status\n  }, [..._hoisted_17], 8 /* PROPS */, _hoisted_14)]), _hoisted_18], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["_createElementVNode","class","key","value","_hoisted_8","_hoisted_9","_hoisted_15","_hoisted_16","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","createChannel","style","_hoisted_1","_hoisted_2","_createTextVNode","_createVNode","_component_my_input","type","$data","channel","title","errors","_hoisted_3","_toDisplayString","_createCommentVNode","_hoisted_4","code","_hoisted_5","_hoisted_6","mailing","_hoisted_10","_hoisted_7","_hoisted_11","disc","_hoisted_12","json","_hoisted_13","status","_hoisted_17","_hoisted_14","_hoisted_18"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelForm.vue"],"sourcesContent":["<template>\n    <form class=\"wrapper\" @submit.prevent=\"createChannel\" style=\"background-color: white;\">\n      <div class=\"wrapper__head\">\n        <h1>Создание канала отправки: </h1>\n        <span>Панель управления / Каналы отправки / Создание канала отправки </span>\n      </div>\n      <div class=\"name\">\n        Название \n        <my-input type=\"text\" class=\"input\" :value=\"channel.title\"/>\n        <span v-if=\"errors.title\" class=\"error\">{{ errors.title }}</span>\n      </div>\n      <div class=\"uniqueCode\">\n        Уникальный код поля \n        <my-input type=\"text\" class=\"input\" :value=\"channel.code\"/>\n        <span v-if=\"errors.code\" class=\"error\">{{ errors.code }}</span>\n      </div>\n      <div class=\"mailing\">\n        Обработчик \n        <select class=\"input\" :value=\"channel.mailing\">\n          <option value=\"Telegram Bot\">Telegram Bot</option>\n          <option value=\"SMS\">SMS</option>\n        </select>\n      </div>\n      <div class=\"disc\">\n        Описание \n        <my-input type=\"text\" class=\"input\" :value=\"channel.disc\"/>\n      </div>\n      <div class=\"json\">\n        Настройки JSON \n        <my-input type=\"text\" class=\"input\" :value=\"channel.json\"/>\n      </div>\n      <div class=\"active\">\n        Канал активен?\n        <select class=\"input\" :value=\"channel.status\">\n          <option :value=\"true\">Да</option>\n          <option :value=\"false\">Нет</option>\n        </select>\n      </div>\n      <button class=\"save__btn\">Сохранить</button>\n    </form>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      channels: {\n        type: Array,\n        required: true\n      }\n    },\n    data() {\n      return {\n        channel: {\n          title: '',\n          code: '',\n          mailing: 'Telegram Bot',\n          disc: '',\n          json: '{ \"telegram_token\":\"\"}',\n          status: true\n        },\n        errors: {\n          title: '',\n          code: ''\n        }\n      };\n    },\n    methods: {\n      getNextId() {\n        if (this.channels.length === 0) {\n          return 1;\n        }\n        const maxId = Math.max(...this.channels.map(channel => channel.id));\n        return maxId + 1;\n      },\n      createChannel() {\n        this.clearErrors();\n  \n        if (!this.channel.title) {\n          this.errors.title = 'Название обязательно для заполнения';\n        }\n  \n        if (!this.channel.code) {\n          this.errors.code = 'Уникальный код обязательно для заполнения';\n        }\n  \n        if (this.errors.title || this.errors.code) {\n          return;\n        }\n  \n        const newChannelId = this.getNextId();\n        const newChannel = { ...this.channel, id: newChannelId };\n        this.$emit('create', newChannel);\n        this.resetForm();\n      },\n      clearErrors() {\n        this.errors = {\n          title: '',\n          code: ''\n        };\n      },\n      resetForm() {\n        this.channel = {\n          title: '',\n          code: '',\n          mailing: 'Telegram Bot',\n          disc: '',\n          json: '{ \"telegram_token\":\"\"}',\n          status: true\n        };\n      }\n    }\n  };\n  </script>\n\n<style scoped>\n.save__btn {\n  display: block;\n  width: 100%;\n  background-color: #3386f3;\n  color: white;\n  border: none;\n  padding: 10px;\n  text-align: center;\n  text-decoration: none;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 10px;\n}\n\n.input {\n  margin-bottom: 10px;\n  padding: 8px;\n}\n\n.error {\n  color: red;\n  font-size: 14px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}