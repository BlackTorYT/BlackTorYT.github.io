{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Компонент для списка subscriber\nimport SubItem from \"@/components/SubItem.vue\";\nexport default {\n  components: {\n    SubItem\n  },\n  props: {\n    subs: {\n      type: Array,\n      required: true\n    }\n    // channels: {\n    //   type: Array,\n    //   required: true\n    // },\n    // subscribers: {\n    //   type: Array,\n    //   required: true\n    // }\n  },\n  data() {\n    return {\n      selectedSubs: []\n    };\n  },\n  methods: {\n    toggleSelection(subId) {\n      if (this.selectedSubs.includes(subId)) {\n        this.selectedSubs = this.selectedSubs.filter(id => id !== subId);\n      } else {\n        this.selectedSubs.push(subId);\n      }\n    },\n    toggleAll(event) {\n      if (event.target.checked) {\n        this.selectedSubs = this.subs.map(sub => sub.id);\n      } else {\n        this.selectedSubs = [];\n      }\n    },\n    removeSelectedSubs() {\n      this.$emit('removeSelected', this.selectedSubs);\n      this.selectedSubs = [];\n    }\n  }\n};","map":{"version":3,"names":["SubItem","components","props","subs","type","Array","required","data","selectedSubs","methods","toggleSelection","subId","includes","filter","id","push","toggleAll","event","target","checked","map","sub","removeSelectedSubs","$emit"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\SubList.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper__subs\">\r\n    <h1>Список подписчиков на уведомления</h1>\r\n    <button @click=\"removeSelectedSubs\">Удалить</button>\r\n    <router-link to=\"/subs/create\">\r\n    <button>Создать</button>\r\n    </router-link>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th class=\"sub__checkbox\"><input type=\"checkbox\" @change=\"toggleAll\"></th>\r\n          <th class=\"sub__id\">ID</th>\r\n          <th class=\"sub__name\">Имя</th>\r\n          <th class=\"sub__phone\">Телефон</th>\r\n          <th class=\"sub__tg\">Telegram Chatid</th>\r\n          <th class=\"sub__status\">Статус</th>\r\n          <th class=\"sub__action\">Действия</th>\r\n        </tr>\r\n      </thead>\r\n      <sub-item v-for=\"sub in subs\" v-bind:sub=\"sub\" v-bind:key=\"sub.id\" \r\n        @remove=\"$emit('remove', sub)\" :selected=\"selectedSubs.includes(sub.id)\"\r\n        @toggle=\"toggleSelection\">\r\n      </sub-item>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// Компонент для списка subscriber\r\nimport SubItem from \"@/components/SubItem.vue\"\r\nexport default {\r\ncomponents: {SubItem},\r\nprops: {\r\n  subs: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n    // channels: {\r\n    //   type: Array,\r\n    //   required: true\r\n    // },\r\n    // subscribers: {\r\n    //   type: Array,\r\n    //   required: true\r\n    // }\r\n},\r\ndata() {\r\n  return {\r\n    selectedSubs: []\r\n  };\r\n},\r\nmethods: {\r\n  toggleSelection(subId) {\r\n    if (this.selectedSubs.includes(subId)) {\r\n      this.selectedSubs = this.selectedSubs.filter(id => id !== subId);\r\n    } else {\r\n      this.selectedSubs.push(subId);\r\n    }\r\n  },\r\n  toggleAll(event) {\r\n    if (event.target.checked) {\r\n      this.selectedSubs = this.subs.map(sub => sub.id);\r\n    } else {\r\n      this.selectedSubs = [];\r\n    }\r\n  },\r\n  removeSelectedSubs() {\r\n    this.$emit('removeSelected', this.selectedSubs);\r\n    this.selectedSubs = [];\r\n  }\r\n}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\nwidth: 100%;\r\nborder-top: 7px solid rgb(218, 218, 218);\r\nborder-collapse: collapse;\r\ntext-align: center;\r\nmargin-bottom: 20px;\r\nborder: 1px solid #dddddd;\r\n}\r\n\r\ntd {\r\ntext-align: left;\r\npadding: 10px;\r\nborder: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\nth {\r\ntext-align: left;\r\npadding: 10px;\r\nborder: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\n.wrapper__subs {\r\nbackground-color: white;\r\n}\r\n\r\n.subscribers__checkbox {\r\nwidth: 36px;\r\n}\r\n\r\n.subscriber__id {\r\nwidth: 40px;\r\n}\r\n\r\n.subscriber__name {\r\nwidth: 150px;\r\n}\r\n\r\n.subscriber__code {\r\nwidth: 200px;\r\n}\r\n\r\n.subscriber__tg {\r\nwidth: 200px;\r\n}\r\n\r\n.subscriber__status {\r\nwidth: 100px;\r\n}\r\n\r\n.subscriberl__action {\r\nwidth: 150px;\r\n}\r\n</style>\r\n"],"mappings":";AA4BA;AACA,OAAOA,OAAM,MAAO,0BAAyB;AAC7C,eAAe;EACfC,UAAU,EAAE;IAACD;EAAO,CAAC;EACrBE,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAACC,KAAK,EAAE;MACrB,IAAI,IAAI,CAACH,YAAY,CAACI,QAAQ,CAACD,KAAK,CAAC,EAAE;QACrC,IAAI,CAACH,YAAW,GAAI,IAAI,CAACA,YAAY,CAACK,MAAM,CAACC,EAAC,IAAKA,EAAC,KAAMH,KAAK,CAAC;MAClE,OAAO;QACL,IAAI,CAACH,YAAY,CAACO,IAAI,CAACJ,KAAK,CAAC;MAC/B;IACF,CAAC;IACDK,SAASA,CAACC,KAAK,EAAE;MACf,IAAIA,KAAK,CAACC,MAAM,CAACC,OAAO,EAAE;QACxB,IAAI,CAACX,YAAW,GAAI,IAAI,CAACL,IAAI,CAACiB,GAAG,CAACC,GAAE,IAAKA,GAAG,CAACP,EAAE,CAAC;MAClD,OAAO;QACL,IAAI,CAACN,YAAW,GAAI,EAAE;MACxB;IACF,CAAC;IACDc,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACf,YAAY,CAAC;MAC/C,IAAI,CAACA,YAAW,GAAI,EAAE;IACxB;EACF;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}