{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_sub_form = _resolveComponent(\"sub-form\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_sub_form, {\n    sub: $options.sub,\n    onUpdate: $options.handleUpdateSub,\n    subs: $props.subs,\n    isEdit: true\n  }, null, 8 /* PROPS */, [\"sub\", \"onUpdate\", \"subs\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_sub_form","sub","$options","onUpdate","handleUpdateSub","subs","$props","isEdit"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\pages\\SubEditPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <sub-form :sub=\"sub\" @update=\"handleUpdateSub\" :subs=\"subs\" :isEdit=\"true\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport SubForm from \"@/components/SubForm.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    SubForm\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    subs: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    sub() {\r\n      return this.subs.find(sub => sub.id === parseInt(this.id));\r\n    }\r\n  },\r\n  methods: {\r\n    handleUpdateSub(updatedSub) {\r\n      this.$emit('updateSub', updatedSub);\r\n      this.$router.push('/subs');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAA6EC,mBAAA;IAAlEC,GAAG,EAAEC,QAAA,CAAAD,GAAG;IAAGE,QAAM,EAAED,QAAA,CAAAE,eAAe;IAAGC,IAAI,EAAEC,MAAA,CAAAD,IAAI;IAAGE,MAAM,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}