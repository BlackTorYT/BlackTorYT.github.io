{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-80cbef54\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"wrapper__subscribers\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Список подписчиков на уведомления\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"subscriber__checkbox\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"subscriber__id\"\n}, \"ID\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"subscriber__name\"\n}, \"Имя\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"subscriber__phone\"\n}, \"Телефон\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"subscriber__tg\"\n}, \"Telegram Chatid\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"subscriber__status\"\n}, \"Статус\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"subscriber__action\"\n}, \"Действия\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_create = _resolveComponent(\"my-create\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_subscriber_item = _resolveComponent(\"subscriber-item\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.removeSelectedSubscribers && $options.removeSelectedSubscribers(...args))\n  }, \"Удалить\"), _createVNode(_component_router_link, {\n    to: \"/subscribers/create\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_my_create, null, {\n      default: _withCtx(() => [_createTextVNode(\"Создать\")]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", _hoisted_3, [_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.toggleAll && $options.toggleAll(...args))\n  }, null, 32 /* NEED_HYDRATION */)]), _hoisted_4, _hoisted_5, _hoisted_6, _hoisted_7, _hoisted_8, _hoisted_9])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.subscribers, subscriber => {\n    return _openBlock(), _createBlock(_component_subscriber_item, {\n      subscriber: subscriber,\n      key: subscriber.id,\n      onRemove: $event => _ctx.$emit('remove', subscriber),\n      selected: $data.selectedSubscribers.includes(subscriber.id),\n      onToggle: $options.toggleSelection\n    }, null, 8 /* PROPS */, [\"subscriber\", \"onRemove\", \"selected\", \"onToggle\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","removeSelectedSubscribers","_createVNode","_component_router_link","to","default","_withCtx","_component_my_create","_createTextVNode","_","_hoisted_3","type","onChange","toggleAll","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","$props","subscribers","subscriber","_createBlock","_component_subscriber_item","key","id","onRemove","$event","_ctx","$emit","selected","$data","selectedSubscribers","includes","onToggle","toggleSelection"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\SubscriberList.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper__subscribers\">\r\n    <h1>Список подписчиков на уведомления</h1>\r\n    <button @click=\"removeSelectedSubscribers\">Удалить</button>\r\n    <router-link to=\"/subscribers/create\">\r\n    <my-create>Создать</my-create>\r\n    </router-link>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th class=\"subscriber__checkbox\"><input type=\"checkbox\" @change=\"toggleAll\"></th>\r\n          <th class=\"subscriber__id\">ID</th>\r\n          <th class=\"subscriber__name\">Имя</th>\r\n          <th class=\"subscriber__phone\">Телефон</th>\r\n          <th class=\"subscriber__tg\">Telegram Chatid</th>\r\n          <th class=\"subscriber__status\">Статус</th>\r\n          <th class=\"subscriber__action\">Действия</th>\r\n        </tr>\r\n      </thead>\r\n      <subscriber-item v-for=\"subscriber in subscribers\" v-bind:subscriber=\"subscriber\" v-bind:key=\"subscriber.id\" \r\n        @remove=\"$emit('remove', subscriber)\" :selected=\"selectedSubscribers.includes(subscriber.id)\"\r\n        @toggle=\"toggleSelection\">\r\n      </subscriber-item>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// Компонент для списка subscriber\r\nimport SubscriberItem from \"@/components/SubscriberItem.vue\"\r\nexport default {\r\ncomponents: {SubscriberItem},\r\nprops: {\r\n  subscribers: {\r\n    type: Array,\r\n    required: true\r\n  }\r\n},\r\ndata() {\r\n  return {\r\n    selectedSubscribers: []\r\n  };\r\n},\r\nmethods: {\r\n  toggleSelection(subscriberId) {\r\n    if (this.selectedSubscribers.includes(subscriberId)) {\r\n      this.selectedSubscribers = this.selectedSubscribers.filter(id => id !== subscriberId);\r\n    } else {\r\n      this.selectedSubscribers.push(subscriberId);\r\n    }\r\n  },\r\n  toggleAll(event) {\r\n    if (event.target.checked) {\r\n      this.selectedSubscribers = this.subscribers.map(subscriber => subscriber.id);\r\n    } else {\r\n      this.selectedSubscribers = [];\r\n    }\r\n  },\r\n  removeSelectedSubscribers() {\r\n    this.$emit('removeSelected', this.selectedSubscribers);\r\n    this.selectedSubscribers = [];\r\n  }\r\n}\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  width: 98%;\r\n  border-top: 7px solid rgb(218, 218, 218);\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #dddddd;\r\n  margin: auto;\r\n}\r\n\r\ntd {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\nth {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border: 1px solid rgb(218, 218, 218);\r\n  text-transform: uppercase;\r\n}\r\n\r\n.wrapper__subscribers {\r\n  background-color: white;\r\n}\r\n\r\n.subscriber__title {\r\n  background-color: rgb(224, 224, 224);\r\n  \r\n}\r\n\r\n.subscriber__checkbox {\r\n  width: 36px;\r\n}\r\n\r\n.subscriber__id {\r\n  width: 40px;\r\n}\r\n\r\n.subscriber__name {\r\n  width: 150px;\r\n}\r\n\r\n.subscriber__code {\r\n  width: 200px;\r\n}\r\n\r\n.subscriber__mailing {\r\n  width: 200px;\r\n}\r\n\r\n.subscriber__status {\r\n  width: 100px;\r\n}\r\n\r\n.subscriber__action {\r\n  width: 120px;\r\n}\r\n\r\n.subscriber__buttons {\r\n  display: flex;\r\n  margin-left: auto;\r\n  float: right;\r\n  margin-right: 10px;\r\n  gap: 14px;\r\n  background-color: white;\r\n  padding: 12px 0px;\r\n}\r\n\r\n.subscriber__header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgb(224, 224, 224);\r\n  padding-left: 10px;\r\n  padding-right: 14px;\r\n  padding-bottom: 14px;\r\n  padding-top: 14px;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAsB;gEAC/BC,mBAAA,CAA0C,YAAtC,mCAAiC;;EAQ3BD,KAAK,EAAC;AAAsB;gEAChCC,mBAAA,CAAkC;EAA9BD,KAAK,EAAC;AAAgB,GAAC,IAAE;gEAC7BC,mBAAA,CAAqC;EAAjCD,KAAK,EAAC;AAAkB,GAAC,KAAG;gEAChCC,mBAAA,CAA0C;EAAtCD,KAAK,EAAC;AAAmB,GAAC,SAAO;gEACrCC,mBAAA,CAA+C;EAA3CD,KAAK,EAAC;AAAgB,GAAC,iBAAe;gEAC1CC,mBAAA,CAA0C;EAAtCD,KAAK,EAAC;AAAoB,GAAC,QAAM;gEACrCC,mBAAA,CAA4C;EAAxCD,KAAK,EAAC;AAAoB,GAAC,UAAQ;;;;;uBAf/CE,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,UAA0C,EAC1CH,mBAAA,CAA2D;IAAlDI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,yBAAA,IAAAD,QAAA,CAAAC,yBAAA,IAAAF,IAAA,CAAyB;KAAE,SAAO,GAClDG,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC;EAAqB;IAJzCC,OAAA,EAAAC,QAAA,CAKI,MAA8B,CAA9BJ,YAAA,CAA8BK,oBAAA;MALlCF,OAAA,EAAAC,QAAA,CAKe,MAAO,CALtBE,gBAAA,CAKe,SAAO,E;MALtBC,CAAA;;IAAAA,CAAA;MAOIhB,mBAAA,CAgBQ,gBAfNA,mBAAA,CAUQ,gBATNA,mBAAA,CAQK,aAPHA,mBAAA,CAAiF,MAAjFiB,UAAiF,GAAhDjB,mBAAA,CAA2C;IAApCkB,IAAI,EAAC,UAAU;IAAEC,QAAM,EAAAd,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAa,SAAA,IAAAb,QAAA,CAAAa,SAAA,IAAAd,IAAA,CAAS;uCAC1Ee,UAAkC,EAClCC,UAAqC,EACrCC,UAA0C,EAC1CC,UAA+C,EAC/CC,UAA0C,EAC1CC,UAA4C,C,wBAGhDzB,mBAAA,CAGkB0B,SAAA,QAtBxBC,WAAA,CAmB4CC,MAAA,CAAAC,WAAW,EAAzBC,UAAU;yBAAlCC,YAAA,CAGkBC,0BAAA;MAHwCF,UAAU,EAAEA,UAAU;MAASG,GAAG,EAAEH,UAAU,CAACI,EAAE;MACxGC,QAAM,EAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,WAAWR,UAAU;MAAIS,QAAQ,EAAEC,KAAA,CAAAC,mBAAmB,CAACC,QAAQ,CAACZ,UAAU,CAACI,EAAE;MAC1FS,QAAM,EAAErC,QAAA,CAAAsC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}