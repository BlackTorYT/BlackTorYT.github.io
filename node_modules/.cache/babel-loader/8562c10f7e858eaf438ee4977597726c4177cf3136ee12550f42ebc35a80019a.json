{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-78dbef18\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"wrapper__head\"\n};\nconst _hoisted_2 = {\n  class: \"name\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  class: \"phone\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_6 = {\n  class: \"username\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"hint\",\n  title: \"Это переменная, которая будет заменена на значение во время отправки сообщения. Например: @getCustomFieldValue\"\n}, \"?\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"tg\"\n};\nconst _hoisted_10 = {\n  class: \"save__btn\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    class: \"wrapper\",\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.handleSubmitPattern && $options.handleSubmitPattern(...args), [\"prevent\"])),\n    style: {\n      \"background-color\": \"white\"\n    }\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($props.isEdit ? 'Редактирование' : 'Создание') + \" шаблона сообщения\", 1 /* TEXT */), _createElementVNode(\"span\", null, \"Панель управления / Шаблоны сообщений / \" + _toDisplayString($props.isEdit ? 'Редактирование' : 'Создание') + \" канала отправки \", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_2, [_createTextVNode(\" Название \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.localPattern.title,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.localPattern.title = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $data.errors.title ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($data.errors.title), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [_createTextVNode(\" Код \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.localPattern.code,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.localPattern.code = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $data.errors.code ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString($data.errors.code), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [_createTextVNode(\" Шаблон сообщения \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.localPattern.pattern,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.localPattern.pattern = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $data.errors.code ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, _toDisplayString($data.errors.code), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _hoisted_8]), _createElementVNode(\"div\", _hoisted_9, [_createTextVNode(\" Тип события \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.localPattern.type,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.localPattern.type = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"button\", _hoisted_10, _toDisplayString($props.isEdit ? 'Сохранить изменения' : 'Создать'), 1 /* TEXT */)], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["class","key","_createElementVNode","title","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","handleSubmitPattern","style","_hoisted_1","_toDisplayString","$props","isEdit","_hoisted_2","_createTextVNode","_createVNode","_component_my_input","type","modelValue","$data","localPattern","$event","errors","_hoisted_3","_createCommentVNode","_hoisted_4","code","_hoisted_5","_hoisted_6","pattern","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\PatternForm.vue"],"sourcesContent":["<template>\r\n  <form class=\"wrapper\" @submit.prevent=\"handleSubmitPattern\" style=\"background-color: white;\">\r\n    <div class=\"wrapper__head\">\r\n      <h1>{{ isEdit ? 'Редактирование' : 'Создание' }} шаблона сообщения</h1>\r\n      <span>Панель управления / Шаблоны сообщений / {{ isEdit ? 'Редактирование' : 'Создание' }} канала отправки </span>\r\n    </div>\r\n    <div class=\"name\">\r\n      Название\r\n      <my-input type=\"text\" class=\"input\" v-model=\"localPattern.title\" />\r\n      <span v-if=\"errors.title\" class=\"error\">{{ errors.title }}</span>\r\n    </div>\r\n    <div class=\"phone\">\r\n      Код\r\n      <my-input type=\"text\" class=\"input\" v-model=\"localPattern.code\" />\r\n      <span v-if=\"errors.code\" class=\"error\">{{ errors.code }}</span>\r\n    </div>\r\n    <div class=\"username\">\r\n      Шаблон сообщения\r\n      <my-input type=\"text\" class=\"input\" v-model=\"localPattern.pattern\" />\r\n      <span v-if=\"errors.code\" class=\"error\">{{ errors.code }}</span>\r\n      <span class=\"hint\" title=\"Это переменная, которая будет заменена на значение во время отправки сообщения. Например: @getCustomFieldValue\">?</span>\r\n    </div>\r\n    <div class=\"tg\">\r\n      Тип события\r\n      <my-input type=\"text\" class=\"input\" v-model=\"localPattern.type\" />\r\n    </div>\r\n    <button class=\"save__btn\">{{ isEdit ? 'Сохранить изменения' : 'Создать' }}</button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    pattern: {\r\n      type: Object,\r\n      default: () => ({\r\n        title: '',\r\n        code: '',\r\n        pattern: '',\r\n        type: ''\r\n      })\r\n    },\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    patterns: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      localPattern: { ...this.pattern },\r\n      errors: {\r\n        title: '',\r\n        code: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmitPattern() {\r\n      this.clearErrors();\r\n\r\n      if (!this.localPattern.title) {\r\n        this.errors.title = 'Название обязательно для заполнения';\r\n      }\r\n\r\n      if (!this.localPattern.code) {\r\n        this.errors.code = 'Код обязателен для заполнения';\r\n      }\r\n\r\n      if (this.errors.title || this.errors.code) {\r\n        return;\r\n      }\r\n\r\n      if (this.isEdit) {\r\n        this.$emit('update', this.localPattern);\r\n      } else {\r\n        this.$emit('create', { ...this.localPattern, id: this.getNextId() });\r\n      }\r\n      this.$router.push('/patterns');\r\n    },\r\n    clearErrors() {\r\n      this.errors = {\r\n        title: '',\r\n        code: ''\r\n      };\r\n    },\r\n    getNextId() {\r\n      if (this.patterns.length === 0) {\r\n        return 1;\r\n      }\r\n      const maxId = Math.max(...this.patterns.map(pattern => pattern.id));\r\n      return maxId + 1;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.save__btn {\r\n  display: block;\r\n  width: 100%;\r\n  background-color: #3386f3;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\n.input {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 14px;\r\n}\r\n\r\n.hint {\r\n  margin-left: 5px;\r\n  cursor: help;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}