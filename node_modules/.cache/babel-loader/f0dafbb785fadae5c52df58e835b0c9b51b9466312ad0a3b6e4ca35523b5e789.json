{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2a6176e7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"wrapper__head\"\n};\nconst _hoisted_2 = {\n  class: \"name\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  class: \"uniqueCode\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_6 = {\n  class: \"mailing\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Telegram Bot\"\n}, \"Telegram Bot\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"SMS\"\n}, \"SMS\", -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_7, _hoisted_8];\nconst _hoisted_10 = {\n  class: \"disc\"\n};\nconst _hoisted_11 = {\n  class: \"json\"\n};\nconst _hoisted_12 = {\n  class: \"active\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: true\n}, \"Да\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: false\n}, \"Нет\", -1 /* HOISTED */));\nconst _hoisted_15 = [_hoisted_13, _hoisted_14];\nconst _hoisted_16 = {\n  class: \"save__btn\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    class: \"wrapper\",\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => _ctx.createChannel && _ctx.createChannel(...args), [\"prevent\"])),\n    style: {\n      \"background-color\": \"white\"\n    }\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($props.isEdit ? 'Редактирование' : 'Создание') + \" канала отправки\", 1 /* TEXT */), _createElementVNode(\"span\", null, \"Панель управления / Каналы отправки / \" + _toDisplayString($props.isEdit ? 'Редактирование' : 'Создание') + \" канала отправки \", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_2, [_createTextVNode(\" Название \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.localChannel.title,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.localChannel.title = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $data.errors.title ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($data.errors.title), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [_createTextVNode(\" Уникальный код поля \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.localChannel.code,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.localChannel.code = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $data.errors.code ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString($data.errors.code), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [_createTextVNode(\" Обработчик \"), _withDirectives(_createElementVNode(\"select\", {\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.localChannel.mailing = $event)\n  }, [..._hoisted_9], 512 /* NEED_PATCH */), [[_vModelSelect, $data.localChannel.mailing]])]), _createElementVNode(\"div\", _hoisted_10, [_createTextVNode(\" Описание \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.localChannel.disc,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.localChannel.disc = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_11, [_createTextVNode(\" Настройки JSON \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.localChannel.json,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.localChannel.json = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_12, [_createTextVNode(\" Канал активен? \"), _withDirectives(_createElementVNode(\"select\", {\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.localChannel.status = $event)\n  }, [..._hoisted_15], 512 /* NEED_PATCH */), [[_vModelSelect, $data.localChannel.status]])]), _createElementVNode(\"button\", _hoisted_16, _toDisplayString($props.isEdit ? 'Сохранить изменения' : 'Создать'), 1 /* TEXT */)], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["class","key","_createElementVNode","value","_hoisted_7","_hoisted_8","_hoisted_13","_hoisted_14","_createElementBlock","onSubmit","_cache","_withModifiers","args","_ctx","createChannel","style","_hoisted_1","_toDisplayString","$props","isEdit","_hoisted_2","_createTextVNode","_createVNode","_component_my_input","type","modelValue","$data","localChannel","title","$event","errors","_hoisted_3","_createCommentVNode","_hoisted_4","code","_hoisted_5","_hoisted_6","mailing","_hoisted_9","_hoisted_10","disc","_hoisted_11","json","_hoisted_12","status","_hoisted_15","_hoisted_16"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelForm.vue"],"sourcesContent":["<template>\n    <form class=\"wrapper\" @submit.prevent=\"createChannel\" style=\"background-color: white;\">\n      <div class=\"wrapper__head\">\n        <h1>{{ isEdit ? 'Редактирование' : 'Создание' }} канала отправки</h1>\n        <span>Панель управления / Каналы отправки / {{ isEdit ? 'Редактирование' : 'Создание' }} канала отправки </span>\n      </div>\n      <div class=\"name\">\n        Название\n        <my-input type=\"text\" class=\"input\" v-model=\"localChannel.title\" />\n        <span v-if=\"errors.title\" class=\"error\">{{ errors.title }}</span>\n      </div>\n      <div class=\"uniqueCode\">\n        Уникальный код поля\n        <my-input type=\"text\" class=\"input\" v-model=\"localChannel.code\" />\n        <span v-if=\"errors.code\" class=\"error\">{{ errors.code }}</span>\n      </div>\n      <div class=\"mailing\">\n        Обработчик\n        <select class=\"input\" v-model=\"localChannel.mailing\">\n          <option value=\"Telegram Bot\">Telegram Bot</option>\n          <option value=\"SMS\">SMS</option>\n        </select>\n      </div>\n      <div class=\"disc\">\n        Описание\n        <my-input type=\"text\" class=\"input\" v-model=\"localChannel.disc\" />\n      </div>\n      <div class=\"json\">\n        Настройки JSON\n        <my-input type=\"text\" class=\"input\" v-model=\"localChannel.json\" />\n      </div>\n      <div class=\"active\">\n        Канал активен?\n        <select class=\"input\" v-model=\"localChannel.status\">\n          <option :value=\"true\">Да</option>\n          <option :value=\"false\">Нет</option>\n        </select>\n      </div>\n      <button class=\"save__btn\">{{ isEdit ? 'Сохранить изменения' : 'Создать' }}</button>\n    </form>\n  </template>\n  \n  <script>\n  export default {\n    props: {\n      channel: {\n        type: Object,\n        default: () => ({\n          title: '',\n          code: '',\n          mailing: 'Telegram Bot',\n          disc: '',\n          json: '{ \"telegram_token\":\"\"}',\n          status: true\n        })\n      },\n      isEdit: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        localChannel: { ...this.channel },\n        errors: {\n          title: '',\n          code: ''\n        }\n      };\n    },\n    methods: {\n      handleSubmit() {\n        this.clearErrors();\n  \n        if (!this.localChannel.title) {\n          this.errors.title = 'Название обязательно для заполнения';\n        }\n  \n        if (!this.localChannel.code) {\n          this.errors.code = 'Уникальный код обязательно для заполнения';\n        }\n  \n        if (this.errors.title || this.errors.code) {\n          return;\n        }\n  \n        if (this.isEdit) {\n          this.$emit('update', this.localChannel);\n        } else {\n          this.$emit('create', { ...this.localChannel, id: this.getNextId() });\n        }\n        this.$router.push('/channels');\n      },\n      clearErrors() {\n        this.errors = {\n          title: '',\n          code: ''\n        };\n      },\n      getNextId() {\n        if (this.$props.channels.length === 0) {\n          return 1;\n        }\n        const maxId = Math.max(...this.$props.channels.map(channel => channel.id));\n        return maxId + 1;\n      }\n    }\n  };\n  </script>\n  \n\n<style scoped>\n.save__btn {\n  display: block;\n  width: 100%;\n  background-color: #3386f3;\n  color: white;\n  border: none;\n  padding: 10px;\n  text-align: center;\n  text-decoration: none;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 10px;\n}\n\n.input {\n  margin-bottom: 10px;\n  padding: 8px;\n}\n\n.error {\n  color: red;\n  font-size: 14px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}