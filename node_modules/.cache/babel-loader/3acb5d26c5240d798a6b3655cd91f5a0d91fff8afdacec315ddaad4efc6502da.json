{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_pattern_form = _resolveComponent(\"pattern-form\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_pattern_form, {\n    pattern: $options.pattern,\n    onUpdate: _ctx.handleUpdateSubscriber,\n    patterns: $props.patterns,\n    isEdit: true\n  }, null, 8 /* PROPS */, [\"pattern\", \"onUpdate\", \"patterns\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_pattern_form","pattern","$options","onUpdate","_ctx","handleUpdateSubscriber","patterns","$props","isEdit"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\pages\\PatternEditPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <pattern-form :pattern=\"pattern\" @update=\"handleUpdateSubscriber\" :patterns=\"patterns\" :isEdit=\"true\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PatternForm from \"@/components/PatternForm.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    PatternForm\r\n  },\r\n  props: {\r\n    id: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    patterns: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    pattern() {\r\n      return this.patterns.find(pattern => pattern.id === parseInt(this.id));\r\n    }\r\n  },\r\n  methods: {\r\n    handleUpdatePattern(updatedPattern) {\r\n      this.$emit('updatePattern', updatedPattern);\r\n      this.$router.push('/patterns');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAAwGC,uBAAA;IAAzFC,OAAO,EAAEC,QAAA,CAAAD,OAAO;IAAGE,QAAM,EAAEC,IAAA,CAAAC,sBAAsB;IAAGC,QAAQ,EAAEC,MAAA,CAAAD,QAAQ;IAAGE,MAAM,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}