{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"option\", {\n  disabled: \"\",\n  value: \"\"\n}, \"-- Выберите --\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedValue = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.changeOption && $options.changeOption(...args))\n  }, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.options, option => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: option.value,\n      value: option.value\n    }, _toDisplayString(option.name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */)), [[_vModelSelect, $data.selectedValue]]);\n}","map":{"version":3,"names":["_createElementVNode","disabled","value","_createElementBlock","_cache","$event","$data","selectedValue","onChange","args","$options","changeOption","_hoisted_1","_Fragment","_renderList","$props","options","option","key","name","_hoisted_2"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\UI\\MySelect.vue"],"sourcesContent":["<template>\r\n  <select v-model=\"selectedValue\" @change=\"changeOption\">\r\n    <option disabled value=\"\">-- Выберите --</option>\r\n    <option \r\n      v-for=\"option in options\" \r\n      :key=\"option.value\" \r\n      :value=\"option.value\">\r\n      {{ option.name }}\r\n    </option>\r\n  </select>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'my-select',\r\n  props: {\r\n    modelValue: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    options: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      selectedValue: this.modelValue\r\n    };\r\n  },\r\n  watch: {\r\n    modelValue(newValue) {\r\n      this.selectedValue = newValue;\r\n    }\r\n  },\r\n  methods: {\r\n    changeOption(event) {\r\n      this.$emit('update:modelValue', event.target.value);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"mappings":";gCAEIA,mBAAA,CAAiD;EAAzCC,QAAQ,EAAR,EAAQ;EAACC,KAAK,EAAC;GAAG,gBAAc;mBAF5C;;wCACEC,mBAAA,CAQS;IATX,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IACmBC,KAAA,CAAAC,aAAa,GAAAF,MAAA;IAAGG,QAAM,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MACnDG,UAAiD,G,kBACjDT,mBAAA,CAKSU,SAAA,QARbC,WAAA,CAIuBC,MAAA,CAAAC,OAAO,EAAjBC,MAAM;yBADfd,mBAAA,CAKS;MAHNe,GAAG,EAAED,MAAM,CAACf,KAAK;MACjBA,KAAK,EAAEe,MAAM,CAACf;wBACZe,MAAM,CAACE,IAAI,wBAPpBC,UAAA;4FACmBd,KAAA,CAAAC,aAAa,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}