{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Компонент для списка каналов\nimport ChannelItem from \"@/components/ChannelItem.vue\";\nexport default {\n  components: {\n    ChannelItem\n  },\n  props: {\n    channels: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedChannels: []\n    };\n  },\n  methods: {\n    toggleSelection(channelId) {\n      if (this.selectedChannels.includes(channelId)) {\n        this.selectedChannels = this.selectedChannels.filter(id => id !== channelId);\n      } else {\n        this.selectedChannels.push(channelId);\n      }\n    },\n    toggleAll(event) {\n      if (event.target.checked) {\n        this.selectedChannels = this.channels.map(channel => channel.id);\n      } else {\n        this.selectedChannels = [];\n      }\n    },\n    removeSelectedChannels() {\n      this.$emit('removeSelected', this.selectedChannels);\n      this.selectedChannels = [];\n    }\n  }\n};","map":{"version":3,"names":["ChannelItem","components","props","channels","type","Array","required","data","selectedChannels","methods","toggleSelection","channelId","includes","filter","id","push","toggleAll","event","target","checked","map","channel","removeSelectedChannels","$emit"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelList.vue"],"sourcesContent":["<template>\r\n    <div class=\"wrapper__channels\">\r\n      <h1>Каналы отправки уведомлений</h1>\r\n      <button @click=\"removeSelectedChannels\">Удалить</button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th class=\"channel__checkbox\"><input type=\"checkbox\" @change=\"toggleAll\"></th>\r\n            <th class=\"channel__id\">ID</th>\r\n            <th class=\"channel__name\">Название</th>\r\n            <th class=\"channel__code\">Код</th>\r\n            <th class=\"channel__mailing\">Шлюз рассылки</th>\r\n            <th class=\"channel__disc\">Описание</th>\r\n            <th class=\"channel__status\">Статус</th>\r\n            <th class=\"channel__action\">Действия</th>\r\n          </tr>\r\n        </thead>\r\n        <channel-item v-for=\"channel in channels\" v-bind:channel=\"channel\" v-bind:key=\"channel.id\" \r\n          @remove=\"$emit('remove', channel)\" :selected=\"selectedChannels.includes(channel.id)\"\r\n          @toggle=\"toggleSelection\">\r\n        </channel-item>\r\n      </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// Компонент для списка каналов\r\nimport ChannelItem from \"@/components/ChannelItem.vue\"\r\nexport default {\r\n  components: {ChannelItem},\r\n  props: {\r\n    channels: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      selectedChannels: []\r\n    };\r\n  },\r\n  methods: {\r\n    toggleSelection(channelId) {\r\n      if (this.selectedChannels.includes(channelId)) {\r\n        this.selectedChannels = this.selectedChannels.filter(id => id !== channelId);\r\n      } else {\r\n        this.selectedChannels.push(channelId);\r\n      }\r\n    },\r\n    toggleAll(event) {\r\n      if (event.target.checked) {\r\n        this.selectedChannels = this.channels.map(channel => channel.id);\r\n      } else {\r\n        this.selectedChannels = [];\r\n      }\r\n    },\r\n    removeSelectedChannels() {\r\n      this.$emit('removeSelected', this.selectedChannels);\r\n      this.selectedChannels = [];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  width: 100%;\r\n  border-top: 7px solid rgb(218, 218, 218);\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #dddddd;\r\n}\r\n\r\ntd {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\nth {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\n.wrapper__channels {\r\n  background-color: white;\r\n}\r\n\r\n.channel__checkbox {\r\n  width: 36px;\r\n}\r\n\r\n.channel__id {\r\n  width: 40px;\r\n}\r\n\r\n.channel__name {\r\n  width: 150px;\r\n}\r\n\r\n.channel__code {\r\n  width: 200px;\r\n}\r\n\r\n.channel__mailing {\r\n  width: 200px;\r\n}\r\n\r\n.channel__status {\r\n  width: 100px;\r\n}\r\n\r\n.channel__action {\r\n  width: 150px;\r\n}\r\n</style>\r\n"],"mappings":";AA0BA;AACA,OAAOA,WAAU,MAAO,8BAA6B;AACrD,eAAe;EACbC,UAAU,EAAE;IAACD;EAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAACC,SAAS,EAAE;MACzB,IAAI,IAAI,CAACH,gBAAgB,CAACI,QAAQ,CAACD,SAAS,CAAC,EAAE;QAC7C,IAAI,CAACH,gBAAe,GAAI,IAAI,CAACA,gBAAgB,CAACK,MAAM,CAACC,EAAC,IAAKA,EAAC,KAAMH,SAAS,CAAC;MAC9E,OAAO;QACL,IAAI,CAACH,gBAAgB,CAACO,IAAI,CAACJ,SAAS,CAAC;MACvC;IACF,CAAC;IACDK,SAASA,CAACC,KAAK,EAAE;MACf,IAAIA,KAAK,CAACC,MAAM,CAACC,OAAO,EAAE;QACxB,IAAI,CAACX,gBAAe,GAAI,IAAI,CAACL,QAAQ,CAACiB,GAAG,CAACC,OAAM,IAAKA,OAAO,CAACP,EAAE,CAAC;MAClE,OAAO;QACL,IAAI,CAACN,gBAAe,GAAI,EAAE;MAC5B;IACF,CAAC;IACDc,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAACC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACf,gBAAgB,CAAC;MACnD,IAAI,CAACA,gBAAe,GAAI,EAAE;IAC5B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}