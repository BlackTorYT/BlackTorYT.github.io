{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LogItem from \"@/components/LogItem.vue\";\nexport default {\n  components: {\n    LogItem\n  },\n  props: {\n    logs: {\n      type: Array,\n      required: true\n    },\n    channels: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedLogs: [],\n      selectedSort: '',\n      selectedChannel: '',\n      selectedStatus: '',\n      searchInfoQuery: '',\n      searchIdQuery: ''\n    };\n  },\n  computed: {\n    channelOptions() {\n      return this.channels.map(channel => ({\n        value: channel.title,\n        name: `Канал: ${channel.title}`\n      }));\n    },\n    statusOptions() {\n      return [{\n        value: '',\n        name: 'Все'\n      }, {\n        value: 'Отправлено',\n        name: 'Отправлено'\n      }, {\n        value: 'Ошибка',\n        name: 'Ошибка'\n      }];\n    },\n    sortOptions() {\n      return [{\n        value: 'status',\n        name: 'По статусу'\n      }, {\n        value: 'time',\n        name: 'По времени'\n      }];\n    },\n    filteredLogs() {\n      let filteredLogs = this.logs;\n      if (this.selectedChannel) {\n        filteredLogs = filteredLogs.filter(log => log.channel === this.selectedChannel);\n      }\n      if (this.selectedStatus) {\n        filteredLogs = filteredLogs.filter(log => log.status === this.selectedStatus);\n      }\n      return filteredLogs;\n    },\n    sortedLogs() {\n      let logs = this.filteredLogs;\n      if (this.selectedSort) {\n        logs = logs.sort((log1, log2) => log1[this.selectedSort]?.localeCompare(log2[this.selectedSort]));\n      }\n      return logs;\n    },\n    sortedAndSearchedLogs() {\n      const infoQuery = this.searchInfoQuery.toLowerCase();\n      const idQuery = this.searchIdQuery;\n      return this.sortedLogs.filter(log => log.info.toLowerCase().includes(infoQuery) && log.id.toString().includes(idQuery));\n    }\n  },\n  methods: {\n    toggleSelection(logId) {\n      if (this.selectedLogs.includes(logId)) {\n        this.selectedLogs = this.selectedLogs.filter(id => id !== logId);\n      } else {\n        this.selectedLogs.push(logId);\n      }\n    },\n    toggleAll(event) {\n      if (event.target.checked) {\n        this.selectedLogs = this.logs.map(log => log.id);\n      } else {\n        this.selectedLogs = [];\n      }\n    },\n    removeSelectedLogs() {\n      this.$emit('removeSelected', this.selectedLogs);\n      this.selectedLogs = [];\n    },\n    resetFilters() {\n      this.selectedSort = '';\n      this.selectedChannel = '';\n      this.selectedStatus = '';\n      this.searchInfoQuery = '';\n      this.searchIdQuery = '';\n    }\n  }\n};","map":{"version":3,"names":["LogItem","components","props","logs","type","Array","required","channels","data","selectedLogs","selectedSort","selectedChannel","selectedStatus","searchInfoQuery","searchIdQuery","computed","channelOptions","map","channel","value","title","name","statusOptions","sortOptions","filteredLogs","filter","log","status","sortedLogs","sort","log1","log2","localeCompare","sortedAndSearchedLogs","infoQuery","toLowerCase","idQuery","info","includes","id","toString","methods","toggleSelection","logId","push","toggleAll","event","target","checked","removeSelectedLogs","$emit","resetFilters"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\LogList.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper__logs\">\r\n    <h1 class=\"log__title\">Журнал рассылки уведомлений</h1>\r\n    <div class=\"log__filters\">\r\n      <h2>Фильтрация по параметрам</h2>\r\n      <div class=\"log__filters__content\">\r\n        <div class=\"filter__item\">\r\n          <div>Содержимое сообщения</div>\r\n          <my-input v-model=\"searchInfoQuery\"></my-input>\r\n        </div>\r\n        <div class=\"filter__item\">\r\n          <div>Идентификатор получателя</div>\r\n          <my-input v-model=\"searchIdQuery\"></my-input>\r\n        </div>\r\n        <div class=\"filter__item\">\r\n          <div>Канал отправки</div>\r\n          <my-select class=\"input\" v-model=\"selectedChannel\" :options=\"channelOptions\"/>\r\n        </div>\r\n        <div class=\"filter__item\">\r\n          <div>Статус сообщения</div>\r\n          <my-select class=\"input\" v-model=\"selectedStatus\" :options=\"statusOptions\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"filter__buttons\">\r\n      <button @click=\"removeSelectedLogs\">Удалить</button>\r\n      <button @click=\"resetFilters\">Сбросить фильтры</button>\r\n    </div>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th class=\"log__checkbox\"><input type=\"checkbox\" @change=\"toggleAll\"></th>\r\n          <th class=\"log__id\">ID</th>\r\n          <th class=\"log__info\">Информация</th>\r\n          <th class=\"log__message\">Сообщение</th>\r\n          <th class=\"log__status\">Статус</th>\r\n          <th class=\"log__time\">Время</th>\r\n          <th class=\"log__config\">Конфиг(JSON)</th>\r\n          <th class=\"log__action\">Действия</th>\r\n        </tr>\r\n      </thead>\r\n      <log-item \r\n          v-for=\"log in sortedAndSearchedLogs\" \r\n          :log=\"log\" \r\n          :key=\"log.id\" \r\n          @remove=\"$emit('remove', log)\" \r\n          :selected=\"selectedLogs.includes(log.id)\"\r\n          @toggle=\"toggleSelection\"\r\n        ></log-item>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport LogItem from \"@/components/LogItem.vue\";\r\n\r\nexport default {\r\n  components: { LogItem },\r\n  props: {\r\n    logs: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    channels: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      selectedLogs: [],\r\n      selectedSort: '',\r\n      selectedChannel: '',\r\n      selectedStatus: '',\r\n      searchInfoQuery: '',\r\n      searchIdQuery: ''\r\n    };\r\n  },\r\n  computed: {\r\n    channelOptions() {\r\n      return this.channels.map(channel => ({\r\n        value: channel.title,\r\n        name: `Канал: ${channel.title}`\r\n      }));\r\n    },\r\n    statusOptions() {\r\n      return [\r\n        { value: '', name: 'Все' },\r\n        { value: 'Отправлено', name: 'Отправлено' },\r\n        { value: 'Ошибка', name: 'Ошибка' }\r\n      ];\r\n    },\r\n    sortOptions() {\r\n      return [\r\n        { value: 'status', name: 'По статусу' },\r\n        { value: 'time', name: 'По времени' }\r\n      ];\r\n    },\r\n    filteredLogs() {\r\n      let filteredLogs = this.logs;\r\n\r\n      if (this.selectedChannel) {\r\n        filteredLogs = filteredLogs.filter(log => log.channel === this.selectedChannel);\r\n      }\r\n\r\n      if (this.selectedStatus) {\r\n        filteredLogs = filteredLogs.filter(log => log.status === this.selectedStatus);\r\n      }\r\n\r\n      return filteredLogs;\r\n    },\r\n    sortedLogs() {\r\n      let logs = this.filteredLogs;\r\n      if (this.selectedSort) {\r\n        logs = logs.sort((log1, log2) =>\r\n          log1[this.selectedSort]?.localeCompare(log2[this.selectedSort])\r\n        );\r\n      }\r\n      return logs;\r\n    },\r\n    sortedAndSearchedLogs() {\r\n      const infoQuery = this.searchInfoQuery.toLowerCase();\r\n      const idQuery = this.searchIdQuery;\r\n      return this.sortedLogs.filter(log => \r\n        log.info.toLowerCase().includes(infoQuery) && log.id.toString().includes(idQuery)\r\n      );\r\n    }\r\n  },\r\n  methods: {\r\n    toggleSelection(logId) {\r\n      if (this.selectedLogs.includes(logId)) {\r\n        this.selectedLogs = this.selectedLogs.filter(id => id !== logId);\r\n      } else {\r\n        this.selectedLogs.push(logId);\r\n      }\r\n    },\r\n    toggleAll(event) {\r\n      if (event.target.checked) {\r\n        this.selectedLogs = this.logs.map(log => log.id);\r\n      } else {\r\n        this.selectedLogs = [];\r\n      }\r\n    },\r\n    removeSelectedLogs() {\r\n      this.$emit('removeSelected', this.selectedLogs);\r\n      this.selectedLogs = [];\r\n    },\r\n    resetFilters() {\r\n      this.selectedSort = '';\r\n      this.selectedChannel = '';\r\n      this.selectedStatus = '';\r\n      this.searchInfoQuery = '';\r\n      this.searchIdQuery = '';\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\n  width: 100%;\r\n  border-top: 7px solid rgb(218, 218, 218);\r\n  border-collapse: collapse;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #dddddd;\r\n}\r\n\r\ntd {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\nth {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\n.wrapper__logs {\r\n  background-color: white;\r\n}\r\n\r\n.filter__item {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.filter__buttons {\r\n  margin-top: 10px;\r\n}\r\n\r\n.filter__buttons button {\r\n  margin-right: 10px;\r\n}\r\n\r\n.log__checkbox {\r\n  width: 36px;\r\n}\r\n\r\n.log__id {\r\n  width: 40px;\r\n}\r\n\r\n.log__info {\r\n  width: 150px;\r\n}\r\n\r\n.log__message {\r\n  width: 200px;\r\n}\r\n\r\n.log__status {\r\n  width: 200px;\r\n}\r\n\r\n.log__time {\r\n  width: 100px;\r\n}\r\n\r\n.log__config {\r\n  width: 150px;\r\n}\r\n\r\n.log__action {\r\n  width: 150px;\r\n}\r\n</style>\r\n\r\n\r\n\r\n<style scoped>\r\ntable {\r\nwidth: 100%;\r\nborder-top: 7px solid rgb(218, 218, 218);\r\nborder-collapse: collapse;\r\ntext-align: center;\r\nmargin-bottom: 20px;\r\nborder: 1px solid #dddddd;\r\n}\r\n\r\ntd {\r\ntext-align: left;\r\npadding: 10px;\r\nborder: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\nth {\r\ntext-align: left;\r\npadding: 10px;\r\nborder: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\n.wrapper__logs {\r\nbackground-color: white;\r\n}\r\n\r\n.log__checkbox {\r\nwidth: 36px;\r\n}\r\n\r\n.log__id {\r\nwidth: 40px;\r\n}\r\n\r\n.log__info {\r\nwidth: 150px;\r\n}\r\n\r\n.log__message {\r\nwidth: 200px;\r\n}\r\n\r\n.log__status {\r\nwidth: 200px;\r\n}\r\n\r\n.log__time {\r\nwidth: 100px;\r\n}\r\n\r\n.log__config {\r\nwidth: 150px;\r\n}\r\n\r\n.log__action {\r\nwidth: 150px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}