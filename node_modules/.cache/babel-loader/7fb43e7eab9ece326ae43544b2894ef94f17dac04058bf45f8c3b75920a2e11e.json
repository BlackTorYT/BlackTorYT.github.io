{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ChannelList from \"@/components/ChannelList.vue\";\nimport ChannelForm from \"@/components/ChannelForm.vue\";\nexport default {\n  components: {\n    ChannelList,\n    ChannelForm\n  },\n  data() {\n    return {\n      channels: [{\n        id: 1,\n        title: \"Telegram Bot\",\n        code: \"TELEGRAM_BOT\",\n        mailing: \"TELEGRAM_BOT\",\n        disc: \"Тг бот\",\n        status: true\n      }, {\n        id: 2,\n        title: \"MTS\",\n        code: \"MTS_GW\",\n        mailing: \"SMS\",\n        disc: \"\",\n        status: true\n      }],\n      isCreate: false\n    };\n  },\n  methods: {\n    handleCreateChannel(newChannel) {\n      this.channels.push(newChannel);\n      this.isCreate = false; // Скрыть форму создания после успешного создания канала\n    },\n    removeChannel(channel) {\n      this.channels = this.channels.filter(c => c.id !== channel.id);\n    },\n    removeSelectedChannel(selectedChannelIds) {\n      this.channels = this.channels.filter(channel => !selectedChannelIds.includes(channel.id));\n    },\n    editChannel(channel) {\n      this.isEdit = true;\n      this.currentChannel = channel;\n    },\n    updateChannel(updatedChannel) {\n      const index = this.channels.findIndex(channel => channel.id === updatedChannel.id);\n      if (index !== -1) {\n        this.channels.splice(index, 1, updatedChannel);\n      }\n      this.isEdit = false;\n      this.currentChannel = null;\n    }\n  }\n};","map":{"version":3,"names":["ChannelList","ChannelForm","components","data","channels","id","title","code","mailing","disc","status","isCreate","methods","handleCreateChannel","newChannel","push","removeChannel","channel","filter","c","removeSelectedChannel","selectedChannelIds","includes","editChannel","isEdit","currentChannel","updateChannel","updatedChannel","index","findIndex","splice"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\pages\\ChannelPage.vue"],"sourcesContent":["<template>\n  <div>\n    <router-link to=\"/channel/create\">Создать</router-link>\n    <channel-form v-if=\"isCreate\" :channels=\"channels\" @create=\"handleCreateChannel\"/>\n    <channel-list v-else v-bind:channels=\"channels\" @remove=\"removeChannel\" @removeSelected=\"removeSelectedChannel\" @edit=\"editChannel\"/>\n  </div>\n</template>\n\n<script>\nimport ChannelList from \"@/components/ChannelList.vue\";\nimport ChannelForm from \"@/components/ChannelForm.vue\";\n\nexport default {\n  components: {\n    ChannelList,\n    ChannelForm\n  },\n  data() {\n    return {\n      channels: [\n        { id: 1, title: \"Telegram Bot\", code: \"TELEGRAM_BOT\", mailing: \"TELEGRAM_BOT\", disc: \"Тг бот\", status: true },\n        { id: 2, title: \"MTS\", code: \"MTS_GW\", mailing: \"SMS\", disc: \"\", status: true }\n      ],\n      isCreate: false\n    };\n  },\n  methods: {\n    handleCreateChannel(newChannel) {\n      this.channels.push(newChannel);\n      this.isCreate = false; // Скрыть форму создания после успешного создания канала\n    },\n    removeChannel(channel) {\n      this.channels = this.channels.filter(c => c.id !== channel.id);\n    },\n    removeSelectedChannel(selectedChannelIds) {\n      this.channels = this.channels.filter(channel => !selectedChannelIds.includes(channel.id));\n    },\n    editChannel(channel) {\n      this.isEdit = true;\n      this.currentChannel = channel;\n    },\n    updateChannel(updatedChannel) {\n      const index = this.channels.findIndex(channel => channel.id === updatedChannel.id);\n      if (index !== -1) {\n        this.channels.splice(index, 1, updatedChannel);\n      }\n      this.isEdit = false;\n      this.currentChannel = null;\n    }\n  }\n};\n</script>\n"],"mappings":";AASA,OAAOA,WAAU,MAAO,8BAA8B;AACtD,OAAOC,WAAU,MAAO,8BAA8B;AAEtD,eAAe;EACbC,UAAU,EAAE;IACVF,WAAW;IACXC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CACR;QAAEC,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,cAAc;QAAEC,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAE,cAAc;QAAEC,IAAI,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAK,CAAC,EAC7G;QAAEL,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,KAAK;QAAEC,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE,KAAK;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAK,EAC/E;MACDC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,mBAAmBA,CAACC,UAAU,EAAE;MAC9B,IAAI,CAACV,QAAQ,CAACW,IAAI,CAACD,UAAU,CAAC;MAC9B,IAAI,CAACH,QAAO,GAAI,KAAK,EAAE;IACzB,CAAC;IACDK,aAAaA,CAACC,OAAO,EAAE;MACrB,IAAI,CAACb,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACc,MAAM,CAACC,CAAA,IAAKA,CAAC,CAACd,EAAC,KAAMY,OAAO,CAACZ,EAAE,CAAC;IAChE,CAAC;IACDe,qBAAqBA,CAACC,kBAAkB,EAAE;MACxC,IAAI,CAACjB,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACc,MAAM,CAACD,OAAM,IAAK,CAACI,kBAAkB,CAACC,QAAQ,CAACL,OAAO,CAACZ,EAAE,CAAC,CAAC;IAC3F,CAAC;IACDkB,WAAWA,CAACN,OAAO,EAAE;MACnB,IAAI,CAACO,MAAK,GAAI,IAAI;MAClB,IAAI,CAACC,cAAa,GAAIR,OAAO;IAC/B,CAAC;IACDS,aAAaA,CAACC,cAAc,EAAE;MAC5B,MAAMC,KAAI,GAAI,IAAI,CAACxB,QAAQ,CAACyB,SAAS,CAACZ,OAAM,IAAKA,OAAO,CAACZ,EAAC,KAAMsB,cAAc,CAACtB,EAAE,CAAC;MAClF,IAAIuB,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAI,CAACxB,QAAQ,CAAC0B,MAAM,CAACF,KAAK,EAAE,CAAC,EAAED,cAAc,CAAC;MAChD;MACA,IAAI,CAACH,MAAK,GAAI,KAAK;MACnB,IAAI,CAACC,cAAa,GAAI,IAAI;IAC5B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}