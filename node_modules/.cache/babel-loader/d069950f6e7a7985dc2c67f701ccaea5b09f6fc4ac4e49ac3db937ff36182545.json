{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ChannelForm from \"@/components/ChannelForm.vue\";\nimport { ref } from 'vue';\nexport default {\n  components: {\n    ChannelForm\n  },\n  props: {\n    channels: {\n      type: Array,\n      required: true\n    },\n    id: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const channel = ref(null);\n\n    // Находим канал по id из списка channels\n    for (let i = 0; i < props.channels.length; i++) {\n      if (props.channels[i].id === props.id) {\n        channel.value = {\n          ...props.channels[i]\n        };\n        break;\n      }\n    }\n    const saveChannel = updatedChannel => {\n      // Находим индекс канала в списке channels и обновляем его\n      const index = props.channels.findIndex(c => c.id === updatedChannel.id);\n      if (index !== -1) {\n        props.channels[index] = {\n          ...updatedChannel\n        };\n      }\n      // Возвращаемся на страницу списка каналов\n      router.push('/channels');\n    };\n    return {\n      channel,\n      saveChannel\n    };\n  }\n};","map":{"version":3,"names":["ChannelForm","ref","components","props","channels","type","Array","required","id","Number","setup","channel","i","length","value","saveChannel","updatedChannel","index","findIndex","c","router","push"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\pages\\ChannelEditPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Редактирование канала: {{ channel.id }}</h1>\r\n    <channel-form :channel=\"channel\" @save=\"saveChannel\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ChannelForm from \"@/components/ChannelForm.vue\";\r\nimport { ref } from 'vue';\r\n\r\nexport default {\r\n  components: {\r\n    ChannelForm\r\n  },\r\n  props: {\r\n    channels: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    id: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const channel = ref(null);\r\n\r\n    // Находим канал по id из списка channels\r\n    for (let i = 0; i < props.channels.length; i++) {\r\n      if (props.channels[i].id === props.id) {\r\n        channel.value = { ...props.channels[i] };\r\n        break;\r\n      }\r\n    }\r\n\r\n    const saveChannel = (updatedChannel) => {\r\n      // Находим индекс канала в списке channels и обновляем его\r\n      const index = props.channels.findIndex(c => c.id === updatedChannel.id);\r\n      if (index !== -1) {\r\n        props.channels[index] = { ...updatedChannel };\r\n      }\r\n      // Возвращаемся на страницу списка каналов\r\n      router.push('/channels');\r\n    };\r\n\r\n    return {\r\n      channel,\r\n      saveChannel\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":";AAQA,OAAOA,WAAU,MAAO,8BAA8B;AACtD,SAASC,GAAE,QAAS,KAAK;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,EAAE,EAAE;MACFH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ;EACF,CAAC;EACDG,KAAKA,CAACP,KAAK,EAAE;IACX,MAAMQ,OAAM,GAAIV,GAAG,CAAC,IAAI,CAAC;;IAEzB;IACA,KAAK,IAAIW,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIT,KAAK,CAACC,QAAQ,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;MAC9C,IAAIT,KAAK,CAACC,QAAQ,CAACQ,CAAC,CAAC,CAACJ,EAAC,KAAML,KAAK,CAACK,EAAE,EAAE;QACrCG,OAAO,CAACG,KAAI,GAAI;UAAE,GAAGX,KAAK,CAACC,QAAQ,CAACQ,CAAC;QAAE,CAAC;QACxC;MACF;IACF;IAEA,MAAMG,WAAU,GAAKC,cAAc,IAAK;MACtC;MACA,MAAMC,KAAI,GAAId,KAAK,CAACC,QAAQ,CAACc,SAAS,CAACC,CAAA,IAAKA,CAAC,CAACX,EAAC,KAAMQ,cAAc,CAACR,EAAE,CAAC;MACvE,IAAIS,KAAI,KAAM,CAAC,CAAC,EAAE;QAChBd,KAAK,CAACC,QAAQ,CAACa,KAAK,IAAI;UAAE,GAAGD;QAAe,CAAC;MAC/C;MACA;MACAI,MAAM,CAACC,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,OAAO;MACLV,OAAO;MACPI;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}