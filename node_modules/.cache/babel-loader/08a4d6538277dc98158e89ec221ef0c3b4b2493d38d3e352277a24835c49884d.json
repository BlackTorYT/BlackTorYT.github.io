{"ast":null,"code":"// Компонент для отдельного канала\nimport MyButton from \"@/components/UI/MyButton.vue\";\nexport default {\n  components: {\n    MyButton\n  },\n  props: {\n    channel: {\n      type: Object,\n      required: true\n    },\n    selected: {\n      type: Boolean,\n      required: true\n    }\n  },\n  computed: {\n    statusText() {\n      return this.channel.status ? 'Включен' : 'Отключен';\n    }\n  },\n  methods: {\n    toggle() {\n      this.$emit('toggle', this.channel.id);\n    }\n  }\n};","map":{"version":3,"names":["MyButton","components","props","channel","type","Object","required","selected","Boolean","computed","statusText","status","methods","toggle","$emit","id"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelItem.vue"],"sourcesContent":["<template>\n        <tbody>\n          <tr class=\"channel\">\n            <td><input type=\"checkbox\" :checked=\"selected\" @change=\"toggle\"></td>\n            <td class=\"channel__id\">{{ channel.id }}</td>\n            <td class=\"channel__name\">{{ channel.title }}</td>\n            <td class=\"channel__code\">{{ channel.code }}</td>\n            <td class=\"channel__mailing\">{{ channel.mailing }}</td>\n            <td class=\"channel__disc\">{{ channel.disc }}</td>\n            <td class=\"channel__status\">{{ statusText }}</td>\n            <td class=\"channel__action\">\n              <router-link :to=\"'/channels/edit/' + channel.id\">\n                <button>Изменить</button>\n              </router-link>\n              <div class=\"channel__delete\" @click=\"$emit('remove', channel)\"><my-button><img src=\"../assets/trash.png\" alt=\"\">Удалить</my-button></div>\n            </td>\n          </tr>\n        </tbody>\n</template>\n\n<script>\n// Компонент для отдельного канала\nimport MyButton from \"@/components/UI/MyButton.vue\";\nexport default {\n  components: {\n    MyButton\n  },\n  props: {\n    channel: {\n    type: Object,\n    required: true\n    },\n    selected: {\n      type: Boolean,\n      required: true\n    } \n  },\n  computed: {\n    statusText() {\n      return this.channel.status ? 'Включен' : 'Отключен';\n    }\n  },\n  methods: {\n    toggle() {\n      this.$emit('toggle', this.channel.id);\n    }\n  }\n};\n\n</script>\n\n<style scoped>\n.channel__name {\n  width: 150px;\n}\n\n.channel__code {\n  width: 200px;\n}\n\n.channel__mailing {\n  width: 200px;\n}\n\n.channel__status {\n  width: 100px;\n}\n\n.channel__action {\n  width: 150px;\n}\n</style>\n"],"mappings":"AAqBA;AACA,OAAOA,QAAO,MAAO,8BAA8B;AACnD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,OAAO,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACV,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,OAAO;MACbF,QAAQ,EAAE;IACZ;EACF,CAAC;EACDG,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACP,OAAO,CAACQ,MAAK,GAAI,SAAQ,GAAI,UAAU;IACrD;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACX,OAAO,CAACY,EAAE,CAAC;IACvC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}