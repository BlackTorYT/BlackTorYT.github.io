{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Компонент для списка log\nimport LogItem from \"@/components/LogItem.vue\";\nexport default {\n  components: {\n    LogItem\n  },\n  props: {\n    logs: {\n      type: Array,\n      required: true\n    },\n    channels: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedLogs: [],\n      selectedSort: '',\n      sortOptions: [{\n        value: 'channel.title',\n        name: 'По названию'\n      }]\n    };\n  },\n  methods: {\n    toggleSelection(logId) {\n      if (this.selectedLogs.includes(logId)) {\n        this.selectedLogs = this.selectedLogs.filter(id => id !== logId);\n      } else {\n        this.selectedLogs.push(logId);\n      }\n    },\n    toggleAll(event) {\n      if (event.target.checked) {\n        this.selectedLogs = this.logs.map(log => log.id);\n      } else {\n        this.selectedLogs = [];\n      }\n    },\n    removeSelectedLogs() {\n      this.$emit('removeSelected', this.selectedLogs);\n      this.selectedLogs = [];\n    }\n  },\n  computed: {\n    sortedLogs() {\n      return [...this.logs].sort((log1, log2) => {\n        return log1[newValue]?.localeCompare(log2[newValue]);\n      });\n    }\n  }\n};","map":{"version":3,"names":["LogItem","components","props","logs","type","Array","required","channels","data","selectedLogs","selectedSort","sortOptions","value","name","methods","toggleSelection","logId","includes","filter","id","push","toggleAll","event","target","checked","map","log","removeSelectedLogs","$emit","computed","sortedLogs","sort","log1","log2","newValue","localeCompare"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\LogList.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper__logs\">\r\n    <h1>Журнал рассылки уведомлений</h1>\r\n    <div><h2>Фильтрация по параметрам</h2>\r\n      <div class=\"filter__item\">\r\n        <div>Содержимое сообщения</div>\r\n        <my-input></my-input>\r\n      </div>\r\n      <div class=\"filter__item\">\r\n        <div>Идентификатор получателя</div>\r\n        <my-input></my-input>\r\n      </div>\r\n      <div class=\"filter__item\">\r\n        <div>Канал отправки</div>\r\n        <my-select class=\"input\" v-model=\"selectedSort\" :options=\"sortOptions\"/>\r\n      </div>\r\n      <div class=\"filter__item\">\r\n        <div>Статус сообщения</div>\r\n        <my-input></my-input>\r\n      </div>\r\n    </div>\r\n    <button @click=\"removeSelectedLogs\">Удалить</button>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th class=\"log__checkbox\"><input type=\"checkbox\" @change=\"toggleAll\"></th>\r\n          <th class=\"log__id\">ID</th>\r\n          <th class=\"log__info\">Информация</th>\r\n          <th class=\"log__message\">Сообщение</th>\r\n          <th class=\"log__status\">Статус</th>\r\n          <th class=\"log__time\">Время</th>\r\n          <th class=\"log__config\">Конфиг(JSON)</th>\r\n          <th class=\"log__action\">Действия</th>\r\n        </tr>\r\n      </thead>\r\n      <log-item v-for=\"log in logs\" v-bind:log=\"log\" v-bind:key=\"log.id\" \r\n        @remove=\"$emit('remove', log)\" :selected=\"selectedLogs.includes(log.id)\"\r\n        @toggle=\"toggleSelection\">\r\n      </log-item>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// Компонент для списка log\r\nimport LogItem from \"@/components/LogItem.vue\"\r\nexport default {\r\ncomponents: {LogItem},\r\nprops: {\r\n  logs: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n    channels: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n},\r\ndata() {\r\n  return {\r\n    selectedLogs: [],\r\n    selectedSort: '',\r\n    sortOptions: [\r\n      {value: 'channel.title', name: 'По названию'}\r\n    ]\r\n  };\r\n},\r\nmethods: {\r\n  toggleSelection(logId) {\r\n    if (this.selectedLogs.includes(logId)) {\r\n      this.selectedLogs = this.selectedLogs.filter(id => id !== logId);\r\n    } else {\r\n      this.selectedLogs.push(logId);\r\n    }\r\n  },\r\n  toggleAll(event) {\r\n    if (event.target.checked) {\r\n      this.selectedLogs = this.logs.map(log => log.id);\r\n    } else {\r\n      this.selectedLogs = [];\r\n    }\r\n  },\r\n  removeSelectedLogs() {\r\n    this.$emit('removeSelected', this.selectedLogs);\r\n    this.selectedLogs = [];\r\n  }\r\n},\r\ncomputed: {\r\n  sortedLogs() {\r\n      return [...this.logs].sort((log1,log2) => {\r\n        return log1[newValue]?.localeCompare(log2[newValue])\r\n      })\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ntable {\r\nwidth: 100%;\r\nborder-top: 7px solid rgb(218, 218, 218);\r\nborder-collapse: collapse;\r\ntext-align: center;\r\nmargin-bottom: 20px;\r\nborder: 1px solid #dddddd;\r\n}\r\n\r\ntd {\r\ntext-align: left;\r\npadding: 10px;\r\nborder: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\nth {\r\ntext-align: left;\r\npadding: 10px;\r\nborder: 1px solid rgb(218, 218, 218);\r\n}\r\n\r\n.wrapper__subscribers {\r\nbackground-color: white;\r\n}\r\n\r\n.subscribers__checkbox {\r\nwidth: 36px;\r\n}\r\n\r\n.subscriber__id {\r\nwidth: 40px;\r\n}\r\n\r\n.subscriber__name {\r\nwidth: 150px;\r\n}\r\n\r\n.subscriber__code {\r\nwidth: 200px;\r\n}\r\n\r\n.subscriber__tg {\r\nwidth: 200px;\r\n}\r\n\r\n.subscriber__status {\r\nwidth: 100px;\r\n}\r\n\r\n.subscriberl__action {\r\nwidth: 150px;\r\n}\r\n</style>\r\n"],"mappings":";AA4CA;AACA,OAAOA,OAAM,MAAO,0BAAyB;AAC7C,eAAe;EACfC,UAAU,EAAE;IAACD;EAAO,CAAC;EACrBE,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACCC,QAAQ,EAAE;MACRH,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ;EACJ,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE,CACX;QAACC,KAAK,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAa;IAEhD,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAACC,KAAK,EAAE;MACrB,IAAI,IAAI,CAACP,YAAY,CAACQ,QAAQ,CAACD,KAAK,CAAC,EAAE;QACrC,IAAI,CAACP,YAAW,GAAI,IAAI,CAACA,YAAY,CAACS,MAAM,CAACC,EAAC,IAAKA,EAAC,KAAMH,KAAK,CAAC;MAClE,OAAO;QACL,IAAI,CAACP,YAAY,CAACW,IAAI,CAACJ,KAAK,CAAC;MAC/B;IACF,CAAC;IACDK,SAASA,CAACC,KAAK,EAAE;MACf,IAAIA,KAAK,CAACC,MAAM,CAACC,OAAO,EAAE;QACxB,IAAI,CAACf,YAAW,GAAI,IAAI,CAACN,IAAI,CAACsB,GAAG,CAACC,GAAE,IAAKA,GAAG,CAACP,EAAE,CAAC;MAClD,OAAO;QACL,IAAI,CAACV,YAAW,GAAI,EAAE;MACxB;IACF,CAAC;IACDkB,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACC,KAAK,CAAC,gBAAgB,EAAE,IAAI,CAACnB,YAAY,CAAC;MAC/C,IAAI,CAACA,YAAW,GAAI,EAAE;IACxB;EACF,CAAC;EACDoB,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACT,OAAO,CAAC,GAAG,IAAI,CAAC3B,IAAI,CAAC,CAAC4B,IAAI,CAAC,CAACC,IAAI,EAACC,IAAI,KAAK;QACxC,OAAOD,IAAI,CAACE,QAAQ,CAAC,EAAEC,aAAa,CAACF,IAAI,CAACC,QAAQ,CAAC;MACrD,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}