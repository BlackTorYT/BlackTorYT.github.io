{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  props: {\n    subscriber: {\n      type: Object,\n      default: () => ({\n        name: '',\n        phone: '',\n        username: '',\n        tg: '',\n        note: '',\n        phoneConfirmed: 'Да',\n        status: true\n      })\n    },\n    isEdit: {\n      type: Boolean,\n      default: false\n    },\n    subscribers: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      localSubscriber: {\n        ...this.subscriber\n      },\n      errors: {\n        name: '',\n        phone: ''\n      }\n    };\n  },\n  methods: {\n    handleSubmitSubcsriber() {\n      this.clearErrors();\n      if (!this.localSubscriber.name) {\n        this.errors.name = 'Имя обязательно для заполнения';\n      }\n      if (!this.localSubscriber.phone) {\n        this.errors.phone = 'Телефон обязателен для заполнения';\n      }\n      if (this.errors.name || this.errors.phone) {\n        return;\n      }\n      if (this.isEdit) {\n        this.$emit('update', this.localSubscriber);\n      } else {\n        this.$emit('create', {\n          ...this.localSubscriber,\n          id: this.getNextId()\n        });\n      }\n      this.$router.push('/subscribers');\n    },\n    clearErrors() {\n      this.errors = {\n        name: '',\n        phone: ''\n      };\n    },\n    getNextId() {\n      if (this.subscribers.length === 0) {\n        return 1;\n      }\n      const maxId = Math.max(...this.subscribers.map(subscriber => subscriber.id));\n      return maxId + 1;\n    }\n  }\n};","map":{"version":3,"names":["props","subscriber","type","Object","default","name","phone","username","tg","note","phoneConfirmed","status","isEdit","Boolean","subscribers","Array","required","data","localSubscriber","errors","methods","handleSubmitSubcsriber","clearErrors","$emit","id","getNextId","$router","push","length","maxId","Math","max","map"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\SubscriberForm.vue"],"sourcesContent":["<template>\r\n  <form class=\"wrapper\" @submit.prevent=\"handleSubmit\" style=\"background-color: white;\">\r\n    <div class=\"subscriberForm__header\">\r\n      <h1 class=\"subscriberForm__title\">{{ isEdit ? 'Редактирование' : 'Создание' }} подписчика</h1>\r\n      <span>Панель управления / Каналы отправки / {{ isEdit ? 'Редактирование' : 'Создание' }} подписчика </span>\r\n    </div>\r\n    <div class=\"subscriberForm__block\">\r\n    <div class=\"subscriberForm__line\">\r\n      <div class=\"name\">\r\n        Имя пользователя\r\n        <my-input type=\"text\" class=\"input\" v-model=\"localSubscriber.name\" />\r\n        <span v-if=\"errors.name\" class=\"error\">{{ errors.name }}</span>\r\n      </div>\r\n      <div class=\"phone\">\r\n        Телефон\r\n        <my-input type=\"text\" class=\"input\" v-model=\"localSubscriber.phone\" />\r\n        <span v-if=\"errors.phone\" class=\"error\">{{ errors.phone }}</span>\r\n      </div>\r\n      <div class=\"username\">\r\n        Никнейм(username)\r\n        <my-input type=\"text\" class=\"input\" v-model=\"localSubscriber.username\" />\r\n        <!-- <span v-if=\"errors.code\" class=\"error\">{{ errors.code }}</span> -->\r\n      </div>\r\n      <div class=\"tg\">\r\n        Telegram Chatid\r\n        <my-input type=\"text\" class=\"input\" v-model=\"localSubscriber.tg\" />\r\n        <!-- <span v-if=\"errors.code\" class=\"error\">{{ errors.code }}</span> -->\r\n      </div>\r\n    </div>\r\n    <div class=\"note\">\r\n      Примечание администратора\r\n      <my-input type=\"text\" class=\"input\" placeholder=\"Произвольное примечение для администратора\" \r\n      v-model=\"localSubscriber.note\" />\r\n      <!-- <span v-if=\"errors.code\" class=\"error\">{{ errors.code }}</span> -->\r\n    </div>\r\n    <div class=\"phoneConfirmed\">\r\n      Телефон подтвержден?\r\n      <select class=\"input\" v-model=\"localSubscriber.phoneConfirmed\">\r\n        <option :value=\"true\">Да</option>\r\n        <option :value=\"false\">Нет</option>\r\n      </select>\r\n    </div>\r\n    <div class=\"active\">\r\n      Статус подписчика\r\n      <select class=\"input\" v-model=\"localSubscriber.status\">\r\n        <option :value=\"true\">Включен</option>\r\n        <option :value=\"false\">Отключен</option>\r\n      </select>\r\n    </div>\r\n    <button class=\"save__btn\">{{ isEdit ? 'Сохранить изменения' : 'Создать' }}</button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    subscriber: {\r\n      type: Object,\r\n      default: () => ({\r\n        name: '',\r\n        phone: '',\r\n        username: '',\r\n        tg: '',\r\n        note: '',\r\n        phoneConfirmed: 'Да',\r\n        status: true\r\n      })\r\n    },\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    subscribers: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      localSubscriber: { ...this.subscriber },\r\n      errors: {\r\n        name: '',\r\n        phone: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleSubmitSubcsriber() {\r\n      this.clearErrors();\r\n\r\n      if (!this.localSubscriber.name) {\r\n        this.errors.name = 'Имя обязательно для заполнения';\r\n      }\r\n\r\n      if (!this.localSubscriber.phone) {\r\n        this.errors.phone = 'Телефон обязателен для заполнения';\r\n      }\r\n\r\n      if (this.errors.name || this.errors.phone) {\r\n        return;\r\n      }\r\n\r\n      if (this.isEdit) {\r\n        this.$emit('update', this.localSubscriber);\r\n      } else {\r\n        this.$emit('create', { ...this.localSubscriber, id: this.getNextId() });\r\n      }\r\n      this.$router.push('/subscribers');\r\n    },\r\n    clearErrors() {\r\n      this.errors = {\r\n        name: '',\r\n        phone: ''\r\n      };\r\n    },\r\n    getNextId() {\r\n      if (this.subscribers.length === 0) {\r\n        return 1;\r\n      }\r\n      const maxId = Math.max(...this.subscribers.map(subscriber => subscriber.id));\r\n      return maxId + 1;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.save__btn {\r\n  display: block;\r\n  width: 110px;\r\n  background-color: #3386f3;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  border-radius: 4px;\r\n}\r\n\r\n.save__btn:hover {\r\n  background-color: #1366d6;\r\n  box-shadow: rgba(0, 0, 0, .05) 0 5px 30px, rgba(0, 0, 0, .05) 0 1px 4px;\r\n  opacity: 1;\r\n  transform: translateY(0);\r\n  transition-duration: .35s;\r\n}\r\n\r\n.input {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 14px;\r\n}\r\n\r\n.subscriberForm__line {\r\n  display: flex;\r\n  width: 98%;\r\n  gap: 20px;\r\n}\r\n\r\n.name {\r\n  width: 25%;\r\n}\r\n\r\n.phone {\r\n  width: 25%;\r\n}\r\n\r\n.username {\r\n  width: 25%;\r\n}\r\n\r\n.tg {\r\n  width: 25%;\r\n}\r\n\r\n.username__input {\r\n  width: 86%;\r\n  height: 33px;\r\n}\r\n\r\n.subscriberForm__block {\r\n  width: 98%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  height: 327px;\r\n  padding-top: 20px;\r\n  height: 347px;\r\n}\r\n\r\n.subscriberForm__item__title {\r\n  font-weight: 900;\r\n}\r\n\r\n.active {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.subscriberForm__header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgb(224, 224, 224);\r\n  padding-left: 10px;\r\n  padding-right: 14px;\r\n  padding-bottom: 14px;\r\n  padding-top: 14px;\r\n}\r\n\r\n.channelForm__title {\r\n  background-color: rgb(224, 224, 224);\r\n  \r\n}\r\n</style>\r\n"],"mappings":";AAuDA,eAAe;EACbA,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO;QACdC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,EAAE;QACZC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,EAAE;QACRC,cAAc,EAAE,IAAI;QACpBC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACDC,MAAM,EAAE;MACNV,IAAI,EAAEW,OAAO;MACbT,OAAO,EAAE;IACX,CAAC;IACDU,WAAW,EAAE;MACXZ,IAAI,EAAEa,KAAK;MACXC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE;QAAE,GAAG,IAAI,CAACjB;MAAW,CAAC;MACvCkB,MAAM,EAAE;QACNd,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDc,OAAO,EAAE;IACPC,sBAAsBA,CAAA,EAAG;MACvB,IAAI,CAACC,WAAW,CAAC,CAAC;MAElB,IAAI,CAAC,IAAI,CAACJ,eAAe,CAACb,IAAI,EAAE;QAC9B,IAAI,CAACc,MAAM,CAACd,IAAG,GAAI,gCAAgC;MACrD;MAEA,IAAI,CAAC,IAAI,CAACa,eAAe,CAACZ,KAAK,EAAE;QAC/B,IAAI,CAACa,MAAM,CAACb,KAAI,GAAI,mCAAmC;MACzD;MAEA,IAAI,IAAI,CAACa,MAAM,CAACd,IAAG,IAAK,IAAI,CAACc,MAAM,CAACb,KAAK,EAAE;QACzC;MACF;MAEA,IAAI,IAAI,CAACM,MAAM,EAAE;QACf,IAAI,CAACW,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACL,eAAe,CAAC;MAC5C,OAAO;QACL,IAAI,CAACK,KAAK,CAAC,QAAQ,EAAE;UAAE,GAAG,IAAI,CAACL,eAAe;UAAEM,EAAE,EAAE,IAAI,CAACC,SAAS,CAAC;QAAE,CAAC,CAAC;MACzE;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC;IACnC,CAAC;IACDL,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACH,MAAK,GAAI;QACZd,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE;MACT,CAAC;IACH,CAAC;IACDmB,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACX,WAAW,CAACc,MAAK,KAAM,CAAC,EAAE;QACjC,OAAO,CAAC;MACV;MACA,MAAMC,KAAI,GAAIC,IAAI,CAACC,GAAG,CAAC,GAAG,IAAI,CAACjB,WAAW,CAACkB,GAAG,CAAC/B,UAAS,IAAKA,UAAU,CAACuB,EAAE,CAAC,CAAC;MAC5E,OAAOK,KAAI,GAAI,CAAC;IAClB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}