{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2a6176e7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"wrapper__head\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Создание канала отправки: \"), /*#__PURE__*/_createElementVNode(\"span\", null, \"Панель управления / Каналы отправки / Создание канала отправки \")], -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"name\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  class: \"uniqueCode\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error\"\n};\nconst _hoisted_6 = {\n  class: \"mailing\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"Telegram Bot\"\n}, \"Telegram Bot\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"SMS\"\n}, \"SMS\", -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_7, _hoisted_8];\nconst _hoisted_10 = {\n  class: \"disc\"\n};\nconst _hoisted_11 = {\n  class: \"json\"\n};\nconst _hoisted_12 = {\n  class: \"active\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: true\n}, \"Да\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: false\n}, \"Нет\", -1 /* HOISTED */));\nconst _hoisted_15 = [_hoisted_13, _hoisted_14];\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"save__btn\"\n}, \"Сохранить\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_input = _resolveComponent(\"my-input\");\n  return _openBlock(), _createElementBlock(\"form\", {\n    class: \"wrapper\",\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.createChannel && $options.createChannel(...args), [\"prevent\"])),\n    style: {\n      \"background-color\": \"white\"\n    }\n  }, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createTextVNode(\" Название \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.channel.title,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.channel.title = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $data.errors.title ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($data.errors.title), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [_createTextVNode(\" Уникальный код поля \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.channel.code,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.channel.code = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"]), $data.errors.code ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString($data.errors.code), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_6, [_createTextVNode(\" Обработчик \"), _withDirectives(_createElementVNode(\"select\", {\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.channel.mailing = $event)\n  }, [..._hoisted_9], 512 /* NEED_PATCH */), [[_vModelSelect, $data.channel.mailing]])]), _createElementVNode(\"div\", _hoisted_10, [_createTextVNode(\" Описание \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.channel.disc,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.channel.disc = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_11, [_createTextVNode(\" Настройки JSON \"), _createVNode(_component_my_input, {\n    type: \"text\",\n    class: \"input\",\n    modelValue: $data.channel.json,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.channel.json = $event)\n  }, null, 8 /* PROPS */, [\"modelValue\"])]), _createElementVNode(\"div\", _hoisted_12, [_createTextVNode(\" Канал активен? \"), _withDirectives(_createElementVNode(\"select\", {\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.channel.status = $event)\n  }, [..._hoisted_15], 512 /* NEED_PATCH */), [[_vModelSelect, $data.channel.status]])]), _hoisted_16], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["_createElementVNode","class","key","value","_hoisted_7","_hoisted_8","_hoisted_13","_hoisted_14","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","createChannel","style","_hoisted_1","_hoisted_2","_createTextVNode","_createVNode","_component_my_input","type","modelValue","$data","channel","title","$event","errors","_hoisted_3","_toDisplayString","_createCommentVNode","_hoisted_4","code","_hoisted_5","_hoisted_6","mailing","_hoisted_9","_hoisted_10","disc","_hoisted_11","json","_hoisted_12","status","_hoisted_15","_hoisted_16"],"sources":["F:\\Vue Notifications\\notifications_practice\\src\\components\\ChannelForm.vue"],"sourcesContent":["<template>\r\n  <form class=\"wrapper\" @submit.prevent=\"createChannel\" style=\"background-color: white;\">\r\n      <div class=\"wrapper__head\">\r\n          <h1>Создание канала отправки: </h1>\r\n          <span>Панель управления / Каналы отправки / Создание канала отправки </span>\r\n      </div>\r\n      <div class=\"name\">\r\n          Название \r\n          <my-input type=\"text\" class=\"input\" v-model=\"channel.title\"/>\r\n          <span v-if=\"errors.title\" class=\"error\">{{ errors.title }}</span>\r\n      </div>\r\n      <div class=\"uniqueCode\">\r\n          Уникальный код поля \r\n          <my-input type=\"text\" class=\"input\" v-model=\"channel.code\"/>\r\n          <span v-if=\"errors.code\" class=\"error\">{{ errors.code }}</span>\r\n      </div>\r\n      <div class=\"mailing\">\r\n          Обработчик \r\n          <select class=\"input\" v-model=\"channel.mailing\">\r\n              <option value=\"Telegram Bot\">Telegram Bot</option>\r\n              <option value=\"SMS\">SMS</option>\r\n          </select>\r\n      </div>\r\n      <div class=\"disc\">\r\n          Описание \r\n          <my-input type=\"text\" class=\"input\" v-model=\"channel.disc\"/>\r\n      </div>\r\n      <div class=\"json\">\r\n          Настройки JSON \r\n          <my-input type=\"text\" class=\"input\" v-model=\"channel.json\"/>\r\n      </div>\r\n      <div class=\"active\">\r\n          Канал активен?\r\n          <select class=\"input\" v-model=\"channel.status\">\r\n              <option :value=\"true\">Да</option>\r\n              <option :value=\"false\">Нет</option>\r\n          </select>\r\n      </div>\r\n      <button class=\"save__btn\">Сохранить</button>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n      channels: {\r\n          type: Array,\r\n          required: true\r\n      }\r\n  },\r\n  data() {\r\n      return {\r\n          channel: {\r\n              title: '',\r\n              code: '',\r\n              mailing: 'Telegram Bot',\r\n              disc: '',\r\n              json: '{ \"telegram_token\":\"\"}',\r\n              status: true\r\n          },\r\n          errors: {\r\n              title: '',\r\n              code: ''\r\n          }\r\n      }\r\n  },\r\n  methods: {\r\n      getNextId() {\r\n          if (this.channels.length === 0) {\r\n              return 1;\r\n          }\r\n          const maxId = Math.max(...this.channels.map(channel => channel.id));\r\n          return maxId + 1;\r\n      },\r\n      createChannel() {\r\n          this.clearErrors();\r\n\r\n          if (!this.channel.title) {\r\n              this.errors.title = 'Название обязательно для заполнения';\r\n          }\r\n\r\n          if (!this.channel.code) {\r\n              this.errors.code = 'Уникальный код обязательно для заполнения';\r\n          }\r\n\r\n          if (this.errors.title || this.errors.code) {\r\n              return;\r\n          }\r\n\r\n          const newChannelId = this.getNextId();\r\n          const newChannel = { ...this.channel, id: newChannelId };\r\n          this.$emit('create', newChannel);\r\n          this.resetForm();\r\n      },\r\n      clearErrors() {\r\n          this.errors = {\r\n              title: '',\r\n              code: ''\r\n          };\r\n      },\r\n      resetForm() {\r\n          this.channel = {\r\n              title: '',\r\n              code: '',\r\n              mailing: 'Telegram Bot',\r\n              disc: '',\r\n              json: '{ \"telegram_token\":\"\"}',\r\n              status: true\r\n          };\r\n      }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.save__btn {\r\n  display: block;\r\n  width: 100%;\r\n  background-color: #3386f3;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n}\r\n\r\n.input {\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  font-size: 14px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}